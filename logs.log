2024-04-15 09:30:21,530:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:30:21,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:30:21,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:30:21,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:30:23,123:INFO:PyCaret RegressionExperiment
2024-04-15 09:30:23,123:INFO:Logging name: reg-default-name
2024-04-15 09:30:23,123:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-15 09:30:23,123:INFO:version 3.3.0
2024-04-15 09:30:23,123:INFO:Initializing setup()
2024-04-15 09:30:23,123:INFO:self.USI: a97f
2024-04-15 09:30:23,123:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'X_test', 'y_train', 'y', 'USI', 'idx', '_available_plots', 'X', 'logging_param', 'gpu_n_jobs_param', 'n_jobs_param', 'pipeline', 'data', 'exp_id', 'target_param', 'y_test', 'exp_name_log', 'fold_generator', 'transform_target_param', 'seed', 'log_plots_param', 'memory', 'fold_shuffle_param', 'X_train', 'html_param', 'fold_groups_param'}
2024-04-15 09:30:23,123:INFO:Checking environment
2024-04-15 09:30:23,123:INFO:python_version: 3.9.12
2024-04-15 09:30:23,123:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-15 09:30:23,123:INFO:machine: AMD64
2024-04-15 09:30:23,123:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-15 09:30:23,126:INFO:Memory: svmem(total=8376537088, available=1144909824, percent=86.3, used=7231627264, free=1144909824)
2024-04-15 09:30:23,126:INFO:Physical Core: 4
2024-04-15 09:30:23,126:INFO:Logical Core: 8
2024-04-15 09:30:23,126:INFO:Checking libraries
2024-04-15 09:30:23,126:INFO:System:
2024-04-15 09:30:23,126:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-15 09:30:23,126:INFO:executable: c:\Users\dansc\Anaconda3\python.exe
2024-04-15 09:30:23,126:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-15 09:30:23,126:INFO:PyCaret required dependencies:
2024-04-15 09:30:23,470:INFO:                 pip: 21.2.4
2024-04-15 09:30:23,470:INFO:          setuptools: 61.2.0
2024-04-15 09:30:23,470:INFO:             pycaret: 3.3.0
2024-04-15 09:30:23,470:INFO:             IPython: 8.2.0
2024-04-15 09:30:23,470:INFO:          ipywidgets: 7.6.5
2024-04-15 09:30:23,470:INFO:                tqdm: 4.64.0
2024-04-15 09:30:23,470:INFO:               numpy: 1.24.4
2024-04-15 09:30:23,470:INFO:              pandas: 1.5.3
2024-04-15 09:30:23,470:INFO:              jinja2: 2.11.3
2024-04-15 09:30:23,470:INFO:               scipy: 1.11.4
2024-04-15 09:30:23,470:INFO:              joblib: 1.1.0
2024-04-15 09:30:23,470:INFO:             sklearn: 1.0.2
2024-04-15 09:30:23,470:INFO:                pyod: 1.1.3
2024-04-15 09:30:23,470:INFO:            imblearn: 0.12.0
2024-04-15 09:30:23,470:INFO:   category_encoders: 2.6.3
2024-04-15 09:30:23,470:INFO:            lightgbm: 4.3.0
2024-04-15 09:30:23,470:INFO:               numba: 0.55.1
2024-04-15 09:30:23,470:INFO:            requests: 2.27.1
2024-04-15 09:30:23,471:INFO:          matplotlib: 3.8.0
2024-04-15 09:30:23,471:INFO:          scikitplot: 0.3.7
2024-04-15 09:30:23,471:INFO:         yellowbrick: 1.5
2024-04-15 09:30:23,471:INFO:              plotly: 5.6.0
2024-04-15 09:30:23,471:INFO:    plotly-resampler: Not installed
2024-04-15 09:30:23,471:INFO:             kaleido: 0.2.1
2024-04-15 09:30:23,471:INFO:           schemdraw: 0.15
2024-04-15 09:30:23,471:INFO:         statsmodels: 0.14.0
2024-04-15 09:30:23,471:INFO:              sktime: 0.26.1
2024-04-15 09:30:23,471:INFO:               tbats: 1.1.3
2024-04-15 09:30:23,471:INFO:            pmdarima: 2.0.4
2024-04-15 09:30:23,471:INFO:              psutil: 5.8.0
2024-04-15 09:30:23,471:INFO:          markupsafe: 2.0.1
2024-04-15 09:30:23,471:INFO:             pickle5: Not installed
2024-04-15 09:30:23,471:INFO:         cloudpickle: 2.0.0
2024-04-15 09:30:23,471:INFO:         deprecation: 2.1.0
2024-04-15 09:30:23,471:INFO:              xxhash: 3.4.1
2024-04-15 09:30:23,471:INFO:           wurlitzer: Not installed
2024-04-15 09:30:23,471:INFO:PyCaret optional dependencies:
2024-04-15 09:30:23,484:INFO:                shap: Not installed
2024-04-15 09:30:23,486:INFO:           interpret: Not installed
2024-04-15 09:30:23,486:INFO:                umap: Not installed
2024-04-15 09:30:23,486:INFO:     ydata_profiling: Not installed
2024-04-15 09:30:23,486:INFO:  explainerdashboard: Not installed
2024-04-15 09:30:23,486:INFO:             autoviz: Not installed
2024-04-15 09:30:23,486:INFO:           fairlearn: Not installed
2024-04-15 09:30:23,486:INFO:          deepchecks: Not installed
2024-04-15 09:30:23,486:INFO:             xgboost: Not installed
2024-04-15 09:30:23,486:INFO:            catboost: Not installed
2024-04-15 09:30:23,486:INFO:              kmodes: Not installed
2024-04-15 09:30:23,486:INFO:             mlxtend: 0.23.1
2024-04-15 09:30:23,486:INFO:       statsforecast: Not installed
2024-04-15 09:30:23,486:INFO:        tune_sklearn: Not installed
2024-04-15 09:30:23,486:INFO:                 ray: Not installed
2024-04-15 09:30:23,486:INFO:            hyperopt: Not installed
2024-04-15 09:30:23,486:INFO:              optuna: Not installed
2024-04-15 09:30:23,486:INFO:               skopt: Not installed
2024-04-15 09:30:23,486:INFO:              mlflow: Not installed
2024-04-15 09:30:23,486:INFO:              gradio: Not installed
2024-04-15 09:30:23,486:INFO:             fastapi: Not installed
2024-04-15 09:30:23,486:INFO:             uvicorn: Not installed
2024-04-15 09:30:23,486:INFO:              m2cgen: Not installed
2024-04-15 09:30:23,486:INFO:           evidently: Not installed
2024-04-15 09:30:23,486:INFO:               fugue: Not installed
2024-04-15 09:30:23,486:INFO:           streamlit: 1.32.2
2024-04-15 09:30:23,487:INFO:             prophet: Not installed
2024-04-15 09:30:23,487:INFO:None
2024-04-15 09:30:23,487:INFO:Set up data.
2024-04-15 09:30:23,496:INFO:Set up folding strategy.
2024-04-15 09:30:23,496:INFO:Set up train/test split.
2024-04-15 09:30:23,502:INFO:Set up index.
2024-04-15 09:30:23,502:INFO:Assigning column types.
2024-04-15 09:30:23,506:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-15 09:30:23,506:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,510:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,515:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,575:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,619:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:23,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:23,621:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,626:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,630:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,684:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,727:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:23,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:23,729:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-15 09:30:23,735:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,739:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,797:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,841:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:23,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:23,847:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,852:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,908:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:30:23,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:23,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:23,954:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-15 09:30:23,963:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,019:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,065:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,074:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,130:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,176:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,177:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-15 09:30:24,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,288:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,353:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,396:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,397:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-15 09:30:24,460:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,568:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:30:24,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,613:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-15 09:30:24,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,830:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:24,832:INFO:Preparing preprocessing pipeline...
2024-04-15 09:30:24,833:INFO:Set up simple imputation.
2024-04-15 09:30:24,854:INFO:Finished creating preprocessing pipeline.
2024-04-15 09:30:24,860:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'LenRes', 'Income',
                                             'TotAsset', 'SecAssets',
                                             'ShortLiq', 'LongLiq', 'WlthIdx',
                                             'SpendVol', 'SpenVel', 'CollGifts',
                                             'BricMortar', 'MarthaHome',
                                             'SunAds', 'ThemeColl', 'CustDec',
                                             'RetailKids', 'TeenWr',
                                             'Carlovers', 'CountryColl'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-04-15 09:30:24,860:INFO:Creating final display dataframe.
2024-04-15 09:30:24,918:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          SpendRat
2                   Target type        Regression
3           Original data shape         (186, 21)
4        Transformed data shape         (186, 21)
5   Transformed train set shape         (130, 21)
6    Transformed test set shape          (56, 21)
7              Numeric features                20
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              a97f
2024-04-15 09:30:25,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:25,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:25,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:25,172:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:30:25,175:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-15 09:30:25,175:INFO:setup() successfully completed in 2.06s...............
2024-04-15 09:31:07,824:INFO:PyCaret RegressionExperiment
2024-04-15 09:31:07,824:INFO:Logging name: reg-default-name
2024-04-15 09:31:07,824:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-15 09:31:07,825:INFO:version 3.3.0
2024-04-15 09:31:07,825:INFO:Initializing setup()
2024-04-15 09:31:07,825:INFO:self.USI: e1b1
2024-04-15 09:31:07,825:INFO:self._variable_keys: {'_ml_usecase', 'gpu_param', 'X_test', 'y_train', 'y', 'USI', 'idx', '_available_plots', 'X', 'logging_param', 'gpu_n_jobs_param', 'n_jobs_param', 'pipeline', 'data', 'exp_id', 'target_param', 'y_test', 'exp_name_log', 'fold_generator', 'transform_target_param', 'seed', 'log_plots_param', 'memory', 'fold_shuffle_param', 'X_train', 'html_param', 'fold_groups_param'}
2024-04-15 09:31:07,825:INFO:Checking environment
2024-04-15 09:31:07,825:INFO:python_version: 3.9.12
2024-04-15 09:31:07,825:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-15 09:31:07,825:INFO:machine: AMD64
2024-04-15 09:31:07,825:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-15 09:31:07,828:INFO:Memory: svmem(total=8376537088, available=1124159488, percent=86.6, used=7252377600, free=1124159488)
2024-04-15 09:31:07,828:INFO:Physical Core: 4
2024-04-15 09:31:07,828:INFO:Logical Core: 8
2024-04-15 09:31:07,828:INFO:Checking libraries
2024-04-15 09:31:07,828:INFO:System:
2024-04-15 09:31:07,828:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-15 09:31:07,828:INFO:executable: c:\Users\dansc\Anaconda3\python.exe
2024-04-15 09:31:07,828:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-15 09:31:07,828:INFO:PyCaret required dependencies:
2024-04-15 09:31:07,828:INFO:                 pip: 21.2.4
2024-04-15 09:31:07,828:INFO:          setuptools: 61.2.0
2024-04-15 09:31:07,828:INFO:             pycaret: 3.3.0
2024-04-15 09:31:07,828:INFO:             IPython: 8.2.0
2024-04-15 09:31:07,828:INFO:          ipywidgets: 7.6.5
2024-04-15 09:31:07,828:INFO:                tqdm: 4.64.0
2024-04-15 09:31:07,829:INFO:               numpy: 1.24.4
2024-04-15 09:31:07,829:INFO:              pandas: 1.5.3
2024-04-15 09:31:07,829:INFO:              jinja2: 2.11.3
2024-04-15 09:31:07,829:INFO:               scipy: 1.11.4
2024-04-15 09:31:07,829:INFO:              joblib: 1.1.0
2024-04-15 09:31:07,829:INFO:             sklearn: 1.0.2
2024-04-15 09:31:07,829:INFO:                pyod: 1.1.3
2024-04-15 09:31:07,829:INFO:            imblearn: 0.12.0
2024-04-15 09:31:07,829:INFO:   category_encoders: 2.6.3
2024-04-15 09:31:07,829:INFO:            lightgbm: 4.3.0
2024-04-15 09:31:07,829:INFO:               numba: 0.55.1
2024-04-15 09:31:07,829:INFO:            requests: 2.27.1
2024-04-15 09:31:07,829:INFO:          matplotlib: 3.8.0
2024-04-15 09:31:07,829:INFO:          scikitplot: 0.3.7
2024-04-15 09:31:07,829:INFO:         yellowbrick: 1.5
2024-04-15 09:31:07,829:INFO:              plotly: 5.6.0
2024-04-15 09:31:07,829:INFO:    plotly-resampler: Not installed
2024-04-15 09:31:07,829:INFO:             kaleido: 0.2.1
2024-04-15 09:31:07,829:INFO:           schemdraw: 0.15
2024-04-15 09:31:07,829:INFO:         statsmodels: 0.14.0
2024-04-15 09:31:07,829:INFO:              sktime: 0.26.1
2024-04-15 09:31:07,829:INFO:               tbats: 1.1.3
2024-04-15 09:31:07,829:INFO:            pmdarima: 2.0.4
2024-04-15 09:31:07,829:INFO:              psutil: 5.8.0
2024-04-15 09:31:07,830:INFO:          markupsafe: 2.0.1
2024-04-15 09:31:07,830:INFO:             pickle5: Not installed
2024-04-15 09:31:07,830:INFO:         cloudpickle: 2.0.0
2024-04-15 09:31:07,830:INFO:         deprecation: 2.1.0
2024-04-15 09:31:07,830:INFO:              xxhash: 3.4.1
2024-04-15 09:31:07,830:INFO:           wurlitzer: Not installed
2024-04-15 09:31:07,830:INFO:PyCaret optional dependencies:
2024-04-15 09:31:07,830:INFO:                shap: Not installed
2024-04-15 09:31:07,830:INFO:           interpret: Not installed
2024-04-15 09:31:07,830:INFO:                umap: Not installed
2024-04-15 09:31:07,830:INFO:     ydata_profiling: Not installed
2024-04-15 09:31:07,830:INFO:  explainerdashboard: Not installed
2024-04-15 09:31:07,830:INFO:             autoviz: Not installed
2024-04-15 09:31:07,830:INFO:           fairlearn: Not installed
2024-04-15 09:31:07,830:INFO:          deepchecks: Not installed
2024-04-15 09:31:07,830:INFO:             xgboost: Not installed
2024-04-15 09:31:07,830:INFO:            catboost: Not installed
2024-04-15 09:31:07,830:INFO:              kmodes: Not installed
2024-04-15 09:31:07,830:INFO:             mlxtend: 0.23.1
2024-04-15 09:31:07,830:INFO:       statsforecast: Not installed
2024-04-15 09:31:07,830:INFO:        tune_sklearn: Not installed
2024-04-15 09:31:07,830:INFO:                 ray: Not installed
2024-04-15 09:31:07,830:INFO:            hyperopt: Not installed
2024-04-15 09:31:07,831:INFO:              optuna: Not installed
2024-04-15 09:31:07,831:INFO:               skopt: Not installed
2024-04-15 09:31:07,831:INFO:              mlflow: Not installed
2024-04-15 09:31:07,831:INFO:              gradio: Not installed
2024-04-15 09:31:07,831:INFO:             fastapi: Not installed
2024-04-15 09:31:07,831:INFO:             uvicorn: Not installed
2024-04-15 09:31:07,831:INFO:              m2cgen: Not installed
2024-04-15 09:31:07,831:INFO:           evidently: Not installed
2024-04-15 09:31:07,831:INFO:               fugue: Not installed
2024-04-15 09:31:07,831:INFO:           streamlit: 1.32.2
2024-04-15 09:31:07,831:INFO:             prophet: Not installed
2024-04-15 09:31:07,831:INFO:None
2024-04-15 09:31:07,831:INFO:Set up data.
2024-04-15 09:31:07,839:INFO:Set up folding strategy.
2024-04-15 09:31:07,839:INFO:Set up train/test split.
2024-04-15 09:31:07,842:INFO:Set up index.
2024-04-15 09:31:07,843:INFO:Assigning column types.
2024-04-15 09:31:07,846:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-15 09:31:07,847:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-15 09:31:07,851:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:31:07,855:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:31:07,921:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:07,966:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:31:07,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:07,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:07,967:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-15 09:31:07,971:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:31:07,977:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,032:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,074:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,075:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-15 09:31:08,080:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,084:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,141:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,186:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,190:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,283:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,284:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-15 09:31:08,293:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,345:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,384:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,394:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,486:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,488:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-15 09:31:08,548:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,592:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,694:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,695:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-15 09:31:08,755:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,863:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:31:08,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:08,907:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-15 09:31:09,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:09,064:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:09,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:09,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:09,188:INFO:Preparing preprocessing pipeline...
2024-04-15 09:31:09,188:INFO:Set up simple imputation.
2024-04-15 09:31:09,207:INFO:Finished creating preprocessing pipeline.
2024-04-15 09:31:09,212:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'LenRes', 'Income',
                                             'TotAsset', 'SecAssets',
                                             'ShortLiq', 'LongLiq', 'WlthIdx',
                                             'SpendVol', 'SpenVel', 'CollGifts',
                                             'BricMortar', 'MarthaHome',
                                             'SunAds', 'ThemeColl', 'CustDec',
                                             'RetailKids', 'TeenWr',
                                             'Carlovers', 'CountryColl'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-04-15 09:31:09,212:INFO:Creating final display dataframe.
2024-04-15 09:31:09,280:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          SpendRat
2                   Target type        Regression
3           Original data shape         (186, 21)
4        Transformed data shape         (186, 21)
5   Transformed train set shape         (130, 21)
6    Transformed test set shape          (56, 21)
7              Numeric features                20
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              e1b1
2024-04-15 09:31:09,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:09,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:09,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:09,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:31:09,539:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-15 09:31:09,540:INFO:setup() successfully completed in 1.72s...............
2024-04-15 09:31:13,622:INFO:Initializing compare_models()
2024-04-15 09:31:13,622:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-04-15 09:31:13,622:INFO:Checking exceptions
2024-04-15 09:31:13,627:INFO:Preparing display monitor
2024-04-15 09:31:13,673:INFO:Initializing Linear Regression
2024-04-15 09:31:13,673:INFO:Total runtime is 0.0 minutes
2024-04-15 09:31:13,679:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:13,679:INFO:Initializing create_model()
2024-04-15 09:31:13,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:13,680:INFO:Checking exceptions
2024-04-15 09:31:13,680:INFO:Importing libraries
2024-04-15 09:31:13,680:INFO:Copying training dataset
2024-04-15 09:31:13,684:INFO:Defining folds
2024-04-15 09:31:13,684:INFO:Declaring metric variables
2024-04-15 09:31:13,688:INFO:Importing untrained model
2024-04-15 09:31:13,692:INFO:Linear Regression Imported successfully
2024-04-15 09:31:13,703:INFO:Starting cross validation
2024-04-15 09:31:13,716:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:34,714:INFO:Calculating mean and std
2024-04-15 09:31:34,718:INFO:Creating metrics dataframe
2024-04-15 09:31:34,726:INFO:Uploading results into container
2024-04-15 09:31:34,728:INFO:Uploading model into container now
2024-04-15 09:31:34,729:INFO:_master_model_container: 1
2024-04-15 09:31:34,729:INFO:_display_container: 2
2024-04-15 09:31:34,730:INFO:LinearRegression(n_jobs=-1)
2024-04-15 09:31:34,730:INFO:create_model() successfully completed......................................
2024-04-15 09:31:34,886:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:34,887:INFO:Creating metrics dataframe
2024-04-15 09:31:34,908:INFO:Initializing Lasso Regression
2024-04-15 09:31:34,908:INFO:Total runtime is 0.3539152940114339 minutes
2024-04-15 09:31:34,915:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:34,916:INFO:Initializing create_model()
2024-04-15 09:31:34,917:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:34,917:INFO:Checking exceptions
2024-04-15 09:31:34,917:INFO:Importing libraries
2024-04-15 09:31:34,917:INFO:Copying training dataset
2024-04-15 09:31:34,928:INFO:Defining folds
2024-04-15 09:31:34,929:INFO:Declaring metric variables
2024-04-15 09:31:34,933:INFO:Importing untrained model
2024-04-15 09:31:34,943:INFO:Lasso Regression Imported successfully
2024-04-15 09:31:34,956:INFO:Starting cross validation
2024-04-15 09:31:34,957:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:35,104:INFO:Calculating mean and std
2024-04-15 09:31:35,106:INFO:Creating metrics dataframe
2024-04-15 09:31:35,112:INFO:Uploading results into container
2024-04-15 09:31:35,114:INFO:Uploading model into container now
2024-04-15 09:31:35,115:INFO:_master_model_container: 2
2024-04-15 09:31:35,115:INFO:_display_container: 2
2024-04-15 09:31:35,115:INFO:Lasso(random_state=123)
2024-04-15 09:31:35,116:INFO:create_model() successfully completed......................................
2024-04-15 09:31:35,240:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:35,240:INFO:Creating metrics dataframe
2024-04-15 09:31:35,316:INFO:Initializing Ridge Regression
2024-04-15 09:31:35,316:INFO:Total runtime is 0.3607017676035563 minutes
2024-04-15 09:31:35,323:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:35,324:INFO:Initializing create_model()
2024-04-15 09:31:35,324:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:35,325:INFO:Checking exceptions
2024-04-15 09:31:35,326:INFO:Importing libraries
2024-04-15 09:31:35,326:INFO:Copying training dataset
2024-04-15 09:31:35,336:INFO:Defining folds
2024-04-15 09:31:35,336:INFO:Declaring metric variables
2024-04-15 09:31:35,342:INFO:Importing untrained model
2024-04-15 09:31:35,350:INFO:Ridge Regression Imported successfully
2024-04-15 09:31:35,362:INFO:Starting cross validation
2024-04-15 09:31:35,364:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:35,527:INFO:Calculating mean and std
2024-04-15 09:31:35,529:INFO:Creating metrics dataframe
2024-04-15 09:31:35,536:INFO:Uploading results into container
2024-04-15 09:31:35,537:INFO:Uploading model into container now
2024-04-15 09:31:35,538:INFO:_master_model_container: 3
2024-04-15 09:31:35,538:INFO:_display_container: 2
2024-04-15 09:31:35,538:INFO:Ridge(random_state=123)
2024-04-15 09:31:35,539:INFO:create_model() successfully completed......................................
2024-04-15 09:31:35,647:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:35,647:INFO:Creating metrics dataframe
2024-04-15 09:31:35,667:INFO:Initializing Elastic Net
2024-04-15 09:31:35,668:INFO:Total runtime is 0.3665723562240601 minutes
2024-04-15 09:31:35,674:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:35,675:INFO:Initializing create_model()
2024-04-15 09:31:35,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:35,675:INFO:Checking exceptions
2024-04-15 09:31:35,676:INFO:Importing libraries
2024-04-15 09:31:35,676:INFO:Copying training dataset
2024-04-15 09:31:35,683:INFO:Defining folds
2024-04-15 09:31:35,683:INFO:Declaring metric variables
2024-04-15 09:31:35,689:INFO:Importing untrained model
2024-04-15 09:31:35,695:INFO:Elastic Net Imported successfully
2024-04-15 09:31:35,707:INFO:Starting cross validation
2024-04-15 09:31:35,709:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:35,838:INFO:Calculating mean and std
2024-04-15 09:31:35,840:INFO:Creating metrics dataframe
2024-04-15 09:31:35,845:INFO:Uploading results into container
2024-04-15 09:31:35,845:INFO:Uploading model into container now
2024-04-15 09:31:35,846:INFO:_master_model_container: 4
2024-04-15 09:31:35,846:INFO:_display_container: 2
2024-04-15 09:31:35,846:INFO:ElasticNet(random_state=123)
2024-04-15 09:31:35,846:INFO:create_model() successfully completed......................................
2024-04-15 09:31:35,966:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:35,966:INFO:Creating metrics dataframe
2024-04-15 09:31:35,981:INFO:Initializing Least Angle Regression
2024-04-15 09:31:35,981:INFO:Total runtime is 0.37179154157638555 minutes
2024-04-15 09:31:35,988:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:35,989:INFO:Initializing create_model()
2024-04-15 09:31:35,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:35,989:INFO:Checking exceptions
2024-04-15 09:31:35,989:INFO:Importing libraries
2024-04-15 09:31:35,989:INFO:Copying training dataset
2024-04-15 09:31:36,000:INFO:Defining folds
2024-04-15 09:31:36,000:INFO:Declaring metric variables
2024-04-15 09:31:36,009:INFO:Importing untrained model
2024-04-15 09:31:36,017:INFO:Least Angle Regression Imported successfully
2024-04-15 09:31:36,029:INFO:Starting cross validation
2024-04-15 09:31:36,031:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:36,166:INFO:Calculating mean and std
2024-04-15 09:31:36,168:INFO:Creating metrics dataframe
2024-04-15 09:31:36,174:INFO:Uploading results into container
2024-04-15 09:31:36,175:INFO:Uploading model into container now
2024-04-15 09:31:36,175:INFO:_master_model_container: 5
2024-04-15 09:31:36,175:INFO:_display_container: 2
2024-04-15 09:31:36,176:INFO:Lars(random_state=123)
2024-04-15 09:31:36,176:INFO:create_model() successfully completed......................................
2024-04-15 09:31:36,274:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:36,274:INFO:Creating metrics dataframe
2024-04-15 09:31:36,291:INFO:Initializing Lasso Least Angle Regression
2024-04-15 09:31:36,291:INFO:Total runtime is 0.37696535984675095 minutes
2024-04-15 09:31:36,297:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:36,298:INFO:Initializing create_model()
2024-04-15 09:31:36,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:36,298:INFO:Checking exceptions
2024-04-15 09:31:36,298:INFO:Importing libraries
2024-04-15 09:31:36,298:INFO:Copying training dataset
2024-04-15 09:31:36,308:INFO:Defining folds
2024-04-15 09:31:36,308:INFO:Declaring metric variables
2024-04-15 09:31:36,316:INFO:Importing untrained model
2024-04-15 09:31:36,323:INFO:Lasso Least Angle Regression Imported successfully
2024-04-15 09:31:36,332:INFO:Starting cross validation
2024-04-15 09:31:36,334:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:36,478:INFO:Calculating mean and std
2024-04-15 09:31:36,482:INFO:Creating metrics dataframe
2024-04-15 09:31:36,488:INFO:Uploading results into container
2024-04-15 09:31:36,489:INFO:Uploading model into container now
2024-04-15 09:31:36,489:INFO:_master_model_container: 6
2024-04-15 09:31:36,489:INFO:_display_container: 2
2024-04-15 09:31:36,490:INFO:LassoLars(random_state=123)
2024-04-15 09:31:36,490:INFO:create_model() successfully completed......................................
2024-04-15 09:31:36,601:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:36,601:INFO:Creating metrics dataframe
2024-04-15 09:31:36,617:INFO:Initializing Orthogonal Matching Pursuit
2024-04-15 09:31:36,618:INFO:Total runtime is 0.38241059382756554 minutes
2024-04-15 09:31:36,624:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:36,625:INFO:Initializing create_model()
2024-04-15 09:31:36,625:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:36,625:INFO:Checking exceptions
2024-04-15 09:31:36,626:INFO:Importing libraries
2024-04-15 09:31:36,626:INFO:Copying training dataset
2024-04-15 09:31:36,632:INFO:Defining folds
2024-04-15 09:31:36,633:INFO:Declaring metric variables
2024-04-15 09:31:36,638:INFO:Importing untrained model
2024-04-15 09:31:36,646:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-15 09:31:36,660:INFO:Starting cross validation
2024-04-15 09:31:36,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:36,791:INFO:Calculating mean and std
2024-04-15 09:31:36,793:INFO:Creating metrics dataframe
2024-04-15 09:31:36,798:INFO:Uploading results into container
2024-04-15 09:31:36,799:INFO:Uploading model into container now
2024-04-15 09:31:36,799:INFO:_master_model_container: 7
2024-04-15 09:31:36,799:INFO:_display_container: 2
2024-04-15 09:31:36,799:INFO:OrthogonalMatchingPursuit()
2024-04-15 09:31:36,799:INFO:create_model() successfully completed......................................
2024-04-15 09:31:36,914:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:36,914:INFO:Creating metrics dataframe
2024-04-15 09:31:36,933:INFO:Initializing Bayesian Ridge
2024-04-15 09:31:36,933:INFO:Total runtime is 0.38765475749969486 minutes
2024-04-15 09:31:36,939:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:36,939:INFO:Initializing create_model()
2024-04-15 09:31:36,939:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:36,940:INFO:Checking exceptions
2024-04-15 09:31:36,940:INFO:Importing libraries
2024-04-15 09:31:36,940:INFO:Copying training dataset
2024-04-15 09:31:36,951:INFO:Defining folds
2024-04-15 09:31:36,974:INFO:Declaring metric variables
2024-04-15 09:31:36,982:INFO:Importing untrained model
2024-04-15 09:31:36,993:INFO:Bayesian Ridge Imported successfully
2024-04-15 09:31:37,007:INFO:Starting cross validation
2024-04-15 09:31:37,011:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:37,152:INFO:Calculating mean and std
2024-04-15 09:31:37,155:INFO:Creating metrics dataframe
2024-04-15 09:31:37,160:INFO:Uploading results into container
2024-04-15 09:31:37,161:INFO:Uploading model into container now
2024-04-15 09:31:37,161:INFO:_master_model_container: 8
2024-04-15 09:31:37,161:INFO:_display_container: 2
2024-04-15 09:31:37,162:INFO:BayesianRidge()
2024-04-15 09:31:37,163:INFO:create_model() successfully completed......................................
2024-04-15 09:31:37,287:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:37,287:INFO:Creating metrics dataframe
2024-04-15 09:31:37,305:INFO:Initializing Passive Aggressive Regressor
2024-04-15 09:31:37,305:INFO:Total runtime is 0.3938625494639079 minutes
2024-04-15 09:31:37,311:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:37,311:INFO:Initializing create_model()
2024-04-15 09:31:37,311:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:37,311:INFO:Checking exceptions
2024-04-15 09:31:37,311:INFO:Importing libraries
2024-04-15 09:31:37,313:INFO:Copying training dataset
2024-04-15 09:31:37,321:INFO:Defining folds
2024-04-15 09:31:37,321:INFO:Declaring metric variables
2024-04-15 09:31:37,329:INFO:Importing untrained model
2024-04-15 09:31:37,337:INFO:Passive Aggressive Regressor Imported successfully
2024-04-15 09:31:37,348:INFO:Starting cross validation
2024-04-15 09:31:37,350:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:37,511:INFO:Calculating mean and std
2024-04-15 09:31:37,515:INFO:Creating metrics dataframe
2024-04-15 09:31:37,525:INFO:Uploading results into container
2024-04-15 09:31:37,526:INFO:Uploading model into container now
2024-04-15 09:31:37,527:INFO:_master_model_container: 9
2024-04-15 09:31:37,527:INFO:_display_container: 2
2024-04-15 09:31:37,527:INFO:PassiveAggressiveRegressor(random_state=123)
2024-04-15 09:31:37,528:INFO:create_model() successfully completed......................................
2024-04-15 09:31:37,643:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:37,643:INFO:Creating metrics dataframe
2024-04-15 09:31:37,672:INFO:Initializing Huber Regressor
2024-04-15 09:31:37,672:INFO:Total runtime is 0.3999816457430522 minutes
2024-04-15 09:31:37,678:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:37,679:INFO:Initializing create_model()
2024-04-15 09:31:37,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:37,679:INFO:Checking exceptions
2024-04-15 09:31:37,679:INFO:Importing libraries
2024-04-15 09:31:37,679:INFO:Copying training dataset
2024-04-15 09:31:37,691:INFO:Defining folds
2024-04-15 09:31:37,692:INFO:Declaring metric variables
2024-04-15 09:31:37,701:INFO:Importing untrained model
2024-04-15 09:31:37,710:INFO:Huber Regressor Imported successfully
2024-04-15 09:31:37,724:INFO:Starting cross validation
2024-04-15 09:31:37,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:37,926:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-15 09:31:37,926:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-15 09:31:37,926:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-15 09:31:37,927:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-15 09:31:37,938:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-15 09:31:37,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-15 09:31:38,024:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-15 09:31:38,026:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-15 09:31:38,043:INFO:Calculating mean and std
2024-04-15 09:31:38,046:INFO:Creating metrics dataframe
2024-04-15 09:31:38,052:INFO:Uploading results into container
2024-04-15 09:31:38,053:INFO:Uploading model into container now
2024-04-15 09:31:38,053:INFO:_master_model_container: 10
2024-04-15 09:31:38,054:INFO:_display_container: 2
2024-04-15 09:31:38,054:INFO:HuberRegressor()
2024-04-15 09:31:38,054:INFO:create_model() successfully completed......................................
2024-04-15 09:31:38,163:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:38,163:INFO:Creating metrics dataframe
2024-04-15 09:31:38,182:INFO:Initializing K Neighbors Regressor
2024-04-15 09:31:38,183:INFO:Total runtime is 0.4084975957870484 minutes
2024-04-15 09:31:38,191:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:38,192:INFO:Initializing create_model()
2024-04-15 09:31:38,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:38,192:INFO:Checking exceptions
2024-04-15 09:31:38,193:INFO:Importing libraries
2024-04-15 09:31:38,193:INFO:Copying training dataset
2024-04-15 09:31:38,204:INFO:Defining folds
2024-04-15 09:31:38,205:INFO:Declaring metric variables
2024-04-15 09:31:38,213:INFO:Importing untrained model
2024-04-15 09:31:38,224:INFO:K Neighbors Regressor Imported successfully
2024-04-15 09:31:38,238:INFO:Starting cross validation
2024-04-15 09:31:38,240:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:38,532:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,533:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,535:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,538:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,539:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,539:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,540:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,541:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,542:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,542:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,545:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,545:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,547:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,549:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,553:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,583:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,583:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,584:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,586:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,587:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,589:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,646:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,653:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,654:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,657:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,663:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,663:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:38,665:INFO:Calculating mean and std
2024-04-15 09:31:38,670:INFO:Creating metrics dataframe
2024-04-15 09:31:38,678:INFO:Uploading results into container
2024-04-15 09:31:38,679:INFO:Uploading model into container now
2024-04-15 09:31:38,680:INFO:_master_model_container: 11
2024-04-15 09:31:38,681:INFO:_display_container: 2
2024-04-15 09:31:38,681:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-15 09:31:38,681:INFO:create_model() successfully completed......................................
2024-04-15 09:31:38,829:WARNING:create_model() for KNeighborsRegressor(n_jobs=-1) raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 09:31:38,832:WARNING:Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 796, in compare_models
    assert (
AssertionError

2024-04-15 09:31:38,833:INFO:Initializing create_model()
2024-04-15 09:31:38,833:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:38,833:INFO:Checking exceptions
2024-04-15 09:31:38,834:INFO:Importing libraries
2024-04-15 09:31:38,834:INFO:Copying training dataset
2024-04-15 09:31:38,847:INFO:Defining folds
2024-04-15 09:31:38,847:INFO:Declaring metric variables
2024-04-15 09:31:38,856:INFO:Importing untrained model
2024-04-15 09:31:38,863:INFO:K Neighbors Regressor Imported successfully
2024-04-15 09:31:38,881:INFO:Starting cross validation
2024-04-15 09:31:38,885:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:38,998:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,018:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,020:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,023:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,034:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,042:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,043:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,044:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,045:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,054:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,055:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,090:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,095:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,095:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,097:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,098:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,098:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,098:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,105:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,109:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,110:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,113:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,113:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,117:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,117:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,118:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,118:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,136:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,141:WARNING:c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,141:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "c:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:31:39,150:INFO:Calculating mean and std
2024-04-15 09:31:39,154:INFO:Creating metrics dataframe
2024-04-15 09:31:39,162:INFO:Uploading results into container
2024-04-15 09:31:39,164:INFO:Uploading model into container now
2024-04-15 09:31:39,164:INFO:_master_model_container: 12
2024-04-15 09:31:39,164:INFO:_display_container: 2
2024-04-15 09:31:39,165:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-15 09:31:39,165:INFO:create_model() successfully completed......................................
2024-04-15 09:31:39,322:ERROR:create_model() for KNeighborsRegressor(n_jobs=-1) raised an exception or returned all 0.0:
2024-04-15 09:31:39,322:ERROR:Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 796, in compare_models
    assert (
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 817, in compare_models
    assert (
AssertionError

2024-04-15 09:31:39,323:INFO:Initializing Decision Tree Regressor
2024-04-15 09:31:39,323:INFO:Total runtime is 0.42748785018920904 minutes
2024-04-15 09:31:39,328:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:39,329:INFO:Initializing create_model()
2024-04-15 09:31:39,329:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:39,329:INFO:Checking exceptions
2024-04-15 09:31:39,329:INFO:Importing libraries
2024-04-15 09:31:39,329:INFO:Copying training dataset
2024-04-15 09:31:39,345:INFO:Defining folds
2024-04-15 09:31:39,350:INFO:Declaring metric variables
2024-04-15 09:31:39,359:INFO:Importing untrained model
2024-04-15 09:31:39,369:INFO:Decision Tree Regressor Imported successfully
2024-04-15 09:31:39,385:INFO:Starting cross validation
2024-04-15 09:31:39,387:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:39,586:INFO:Calculating mean and std
2024-04-15 09:31:39,591:INFO:Creating metrics dataframe
2024-04-15 09:31:39,601:INFO:Uploading results into container
2024-04-15 09:31:39,602:INFO:Uploading model into container now
2024-04-15 09:31:39,603:INFO:_master_model_container: 13
2024-04-15 09:31:39,604:INFO:_display_container: 2
2024-04-15 09:31:39,604:INFO:DecisionTreeRegressor(random_state=123)
2024-04-15 09:31:39,605:INFO:create_model() successfully completed......................................
2024-04-15 09:31:39,772:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:39,772:INFO:Creating metrics dataframe
2024-04-15 09:31:39,804:INFO:Initializing Random Forest Regressor
2024-04-15 09:31:39,804:INFO:Total runtime is 0.4355164845784506 minutes
2024-04-15 09:31:39,811:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:39,812:INFO:Initializing create_model()
2024-04-15 09:31:39,812:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:39,813:INFO:Checking exceptions
2024-04-15 09:31:39,813:INFO:Importing libraries
2024-04-15 09:31:39,813:INFO:Copying training dataset
2024-04-15 09:31:39,825:INFO:Defining folds
2024-04-15 09:31:39,825:INFO:Declaring metric variables
2024-04-15 09:31:39,835:INFO:Importing untrained model
2024-04-15 09:31:39,844:INFO:Random Forest Regressor Imported successfully
2024-04-15 09:31:39,860:INFO:Starting cross validation
2024-04-15 09:31:39,863:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:41,288:INFO:Calculating mean and std
2024-04-15 09:31:41,290:INFO:Creating metrics dataframe
2024-04-15 09:31:41,296:INFO:Uploading results into container
2024-04-15 09:31:41,297:INFO:Uploading model into container now
2024-04-15 09:31:41,298:INFO:_master_model_container: 14
2024-04-15 09:31:41,298:INFO:_display_container: 2
2024-04-15 09:31:41,299:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-04-15 09:31:41,300:INFO:create_model() successfully completed......................................
2024-04-15 09:31:41,439:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:41,439:INFO:Creating metrics dataframe
2024-04-15 09:31:41,469:INFO:Initializing Extra Trees Regressor
2024-04-15 09:31:41,470:INFO:Total runtime is 0.4632787863413494 minutes
2024-04-15 09:31:41,477:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:41,479:INFO:Initializing create_model()
2024-04-15 09:31:41,479:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:41,479:INFO:Checking exceptions
2024-04-15 09:31:41,479:INFO:Importing libraries
2024-04-15 09:31:41,479:INFO:Copying training dataset
2024-04-15 09:31:41,490:INFO:Defining folds
2024-04-15 09:31:41,490:INFO:Declaring metric variables
2024-04-15 09:31:41,500:INFO:Importing untrained model
2024-04-15 09:31:41,510:INFO:Extra Trees Regressor Imported successfully
2024-04-15 09:31:41,527:INFO:Starting cross validation
2024-04-15 09:31:41,529:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:42,475:INFO:Calculating mean and std
2024-04-15 09:31:42,478:INFO:Creating metrics dataframe
2024-04-15 09:31:42,486:INFO:Uploading results into container
2024-04-15 09:31:42,489:INFO:Uploading model into container now
2024-04-15 09:31:42,490:INFO:_master_model_container: 15
2024-04-15 09:31:42,490:INFO:_display_container: 2
2024-04-15 09:31:42,491:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-04-15 09:31:42,491:INFO:create_model() successfully completed......................................
2024-04-15 09:31:42,639:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:42,639:INFO:Creating metrics dataframe
2024-04-15 09:31:42,671:INFO:Initializing AdaBoost Regressor
2024-04-15 09:31:42,672:INFO:Total runtime is 0.48331671953201305 minutes
2024-04-15 09:31:42,681:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:42,682:INFO:Initializing create_model()
2024-04-15 09:31:42,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:42,683:INFO:Checking exceptions
2024-04-15 09:31:42,683:INFO:Importing libraries
2024-04-15 09:31:42,683:INFO:Copying training dataset
2024-04-15 09:31:42,696:INFO:Defining folds
2024-04-15 09:31:42,696:INFO:Declaring metric variables
2024-04-15 09:31:42,707:INFO:Importing untrained model
2024-04-15 09:31:42,717:INFO:AdaBoost Regressor Imported successfully
2024-04-15 09:31:42,732:INFO:Starting cross validation
2024-04-15 09:31:42,735:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:43,430:INFO:Calculating mean and std
2024-04-15 09:31:43,433:INFO:Creating metrics dataframe
2024-04-15 09:31:43,438:INFO:Uploading results into container
2024-04-15 09:31:43,439:INFO:Uploading model into container now
2024-04-15 09:31:43,439:INFO:_master_model_container: 16
2024-04-15 09:31:43,439:INFO:_display_container: 2
2024-04-15 09:31:43,439:INFO:AdaBoostRegressor(random_state=123)
2024-04-15 09:31:43,440:INFO:create_model() successfully completed......................................
2024-04-15 09:31:43,565:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:43,565:INFO:Creating metrics dataframe
2024-04-15 09:31:43,587:INFO:Initializing Gradient Boosting Regressor
2024-04-15 09:31:43,588:INFO:Total runtime is 0.49856989781061817 minutes
2024-04-15 09:31:43,595:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:43,595:INFO:Initializing create_model()
2024-04-15 09:31:43,595:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:43,595:INFO:Checking exceptions
2024-04-15 09:31:43,595:INFO:Importing libraries
2024-04-15 09:31:43,596:INFO:Copying training dataset
2024-04-15 09:31:43,605:INFO:Defining folds
2024-04-15 09:31:43,606:INFO:Declaring metric variables
2024-04-15 09:31:43,612:INFO:Importing untrained model
2024-04-15 09:31:43,620:INFO:Gradient Boosting Regressor Imported successfully
2024-04-15 09:31:43,634:INFO:Starting cross validation
2024-04-15 09:31:43,636:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:44,214:INFO:Calculating mean and std
2024-04-15 09:31:44,218:INFO:Creating metrics dataframe
2024-04-15 09:31:44,224:INFO:Uploading results into container
2024-04-15 09:31:44,225:INFO:Uploading model into container now
2024-04-15 09:31:44,226:INFO:_master_model_container: 17
2024-04-15 09:31:44,226:INFO:_display_container: 2
2024-04-15 09:31:44,227:INFO:GradientBoostingRegressor(random_state=123)
2024-04-15 09:31:44,227:INFO:create_model() successfully completed......................................
2024-04-15 09:31:44,354:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:44,354:INFO:Creating metrics dataframe
2024-04-15 09:31:44,375:INFO:Initializing Light Gradient Boosting Machine
2024-04-15 09:31:44,375:INFO:Total runtime is 0.5116974790891012 minutes
2024-04-15 09:31:44,382:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:44,382:INFO:Initializing create_model()
2024-04-15 09:31:44,384:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:44,384:INFO:Checking exceptions
2024-04-15 09:31:44,384:INFO:Importing libraries
2024-04-15 09:31:44,384:INFO:Copying training dataset
2024-04-15 09:31:44,398:INFO:Defining folds
2024-04-15 09:31:44,398:INFO:Declaring metric variables
2024-04-15 09:31:44,406:INFO:Importing untrained model
2024-04-15 09:31:44,415:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-15 09:31:44,428:INFO:Starting cross validation
2024-04-15 09:31:44,430:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:44,948:INFO:Calculating mean and std
2024-04-15 09:31:44,952:INFO:Creating metrics dataframe
2024-04-15 09:31:44,960:INFO:Uploading results into container
2024-04-15 09:31:44,961:INFO:Uploading model into container now
2024-04-15 09:31:44,962:INFO:_master_model_container: 18
2024-04-15 09:31:44,962:INFO:_display_container: 2
2024-04-15 09:31:44,963:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-04-15 09:31:44,964:INFO:create_model() successfully completed......................................
2024-04-15 09:31:45,089:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:45,089:INFO:Creating metrics dataframe
2024-04-15 09:31:45,110:INFO:Initializing Dummy Regressor
2024-04-15 09:31:45,110:INFO:Total runtime is 0.5239368995030722 minutes
2024-04-15 09:31:45,118:INFO:SubProcess create_model() called ==================================
2024-04-15 09:31:45,119:INFO:Initializing create_model()
2024-04-15 09:31:45,119:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020F3BAF9970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:45,119:INFO:Checking exceptions
2024-04-15 09:31:45,119:INFO:Importing libraries
2024-04-15 09:31:45,119:INFO:Copying training dataset
2024-04-15 09:31:45,127:INFO:Defining folds
2024-04-15 09:31:45,127:INFO:Declaring metric variables
2024-04-15 09:31:45,135:INFO:Importing untrained model
2024-04-15 09:31:45,141:INFO:Dummy Regressor Imported successfully
2024-04-15 09:31:45,155:INFO:Starting cross validation
2024-04-15 09:31:45,157:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:31:45,321:INFO:Calculating mean and std
2024-04-15 09:31:45,329:INFO:Creating metrics dataframe
2024-04-15 09:31:45,335:INFO:Uploading results into container
2024-04-15 09:31:45,336:INFO:Uploading model into container now
2024-04-15 09:31:45,337:INFO:_master_model_container: 19
2024-04-15 09:31:45,339:INFO:_display_container: 2
2024-04-15 09:31:45,339:INFO:DummyRegressor()
2024-04-15 09:31:45,339:INFO:create_model() successfully completed......................................
2024-04-15 09:31:45,486:INFO:SubProcess create_model() end ==================================
2024-04-15 09:31:45,486:INFO:Creating metrics dataframe
2024-04-15 09:31:45,528:INFO:Initializing create_model()
2024-04-15 09:31:45,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020F276CC820>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:31:45,530:INFO:Checking exceptions
2024-04-15 09:31:45,535:INFO:Importing libraries
2024-04-15 09:31:45,535:INFO:Copying training dataset
2024-04-15 09:31:45,544:INFO:Defining folds
2024-04-15 09:31:45,544:INFO:Declaring metric variables
2024-04-15 09:31:45,544:INFO:Importing untrained model
2024-04-15 09:31:45,545:INFO:Declaring custom model
2024-04-15 09:31:45,546:INFO:Huber Regressor Imported successfully
2024-04-15 09:31:45,548:INFO:Cross validation set to False
2024-04-15 09:31:45,548:INFO:Fitting Model
2024-04-15 09:31:45,620:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-15 09:31:45,620:INFO:HuberRegressor()
2024-04-15 09:31:45,620:INFO:create_model() successfully completed......................................
2024-04-15 09:31:45,807:INFO:_master_model_container: 19
2024-04-15 09:31:45,807:INFO:_display_container: 2
2024-04-15 09:31:45,807:INFO:HuberRegressor()
2024-04-15 09:31:45,807:INFO:compare_models() successfully completed......................................
2024-04-15 09:36:47,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:36:47,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:36:47,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:36:47,489:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:49:13,116:INFO:PyCaret RegressionExperiment
2024-04-15 09:49:13,116:INFO:Logging name: reg-default-name
2024-04-15 09:49:13,116:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-15 09:49:13,116:INFO:version 3.3.0
2024-04-15 09:49:13,116:INFO:Initializing setup()
2024-04-15 09:49:13,116:INFO:self.USI: ed27
2024-04-15 09:49:13,116:INFO:self._variable_keys: {'X_train', 'y', 'fold_shuffle_param', 'X', 'transform_target_param', 'gpu_param', 'y_test', 'pipeline', 'exp_name_log', 'exp_id', '_ml_usecase', 'y_train', 'gpu_n_jobs_param', 'seed', 'target_param', 'memory', 'X_test', 'fold_groups_param', 'logging_param', 'idx', 'n_jobs_param', 'fold_generator', '_available_plots', 'data', 'log_plots_param', 'USI', 'html_param'}
2024-04-15 09:49:13,116:INFO:Checking environment
2024-04-15 09:49:13,116:INFO:python_version: 3.9.12
2024-04-15 09:49:13,116:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-15 09:49:13,117:INFO:machine: AMD64
2024-04-15 09:49:13,132:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-15 09:49:13,135:INFO:Memory: svmem(total=8376537088, available=2053165056, percent=75.5, used=6323372032, free=2053165056)
2024-04-15 09:49:13,136:INFO:Physical Core: 4
2024-04-15 09:49:13,136:INFO:Logical Core: 8
2024-04-15 09:49:13,136:INFO:Checking libraries
2024-04-15 09:49:13,136:INFO:System:
2024-04-15 09:49:13,136:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-15 09:49:13,136:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-15 09:49:13,136:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-15 09:49:13,136:INFO:PyCaret required dependencies:
2024-04-15 09:49:13,362:INFO:                 pip: 21.2.4
2024-04-15 09:49:13,363:INFO:          setuptools: 61.2.0
2024-04-15 09:49:13,363:INFO:             pycaret: 3.3.0
2024-04-15 09:49:13,363:INFO:             IPython: 8.2.0
2024-04-15 09:49:13,363:INFO:          ipywidgets: 7.6.5
2024-04-15 09:49:13,363:INFO:                tqdm: 4.64.0
2024-04-15 09:49:13,363:INFO:               numpy: 1.24.4
2024-04-15 09:49:13,363:INFO:              pandas: 1.5.3
2024-04-15 09:49:13,363:INFO:              jinja2: 2.11.3
2024-04-15 09:49:13,363:INFO:               scipy: 1.11.4
2024-04-15 09:49:13,363:INFO:              joblib: 1.1.0
2024-04-15 09:49:13,363:INFO:             sklearn: 1.0.2
2024-04-15 09:49:13,363:INFO:                pyod: 1.1.3
2024-04-15 09:49:13,363:INFO:            imblearn: 0.12.0
2024-04-15 09:49:13,363:INFO:   category_encoders: 2.6.3
2024-04-15 09:49:13,363:INFO:            lightgbm: 4.3.0
2024-04-15 09:49:13,363:INFO:               numba: 0.55.1
2024-04-15 09:49:13,363:INFO:            requests: 2.27.1
2024-04-15 09:49:13,363:INFO:          matplotlib: 3.8.0
2024-04-15 09:49:13,363:INFO:          scikitplot: 0.3.7
2024-04-15 09:49:13,363:INFO:         yellowbrick: 1.5
2024-04-15 09:49:13,363:INFO:              plotly: 5.6.0
2024-04-15 09:49:13,363:INFO:    plotly-resampler: Not installed
2024-04-15 09:49:13,364:INFO:             kaleido: 0.2.1
2024-04-15 09:49:13,364:INFO:           schemdraw: 0.15
2024-04-15 09:49:13,364:INFO:         statsmodels: 0.14.0
2024-04-15 09:49:13,364:INFO:              sktime: 0.26.1
2024-04-15 09:49:13,364:INFO:               tbats: 1.1.3
2024-04-15 09:49:13,364:INFO:            pmdarima: 2.0.4
2024-04-15 09:49:13,364:INFO:              psutil: 5.8.0
2024-04-15 09:49:13,364:INFO:          markupsafe: 2.0.1
2024-04-15 09:49:13,364:INFO:             pickle5: Not installed
2024-04-15 09:49:13,364:INFO:         cloudpickle: 2.0.0
2024-04-15 09:49:13,364:INFO:         deprecation: 2.1.0
2024-04-15 09:49:13,364:INFO:              xxhash: 3.4.1
2024-04-15 09:49:13,364:INFO:           wurlitzer: Not installed
2024-04-15 09:49:13,364:INFO:PyCaret optional dependencies:
2024-04-15 09:49:13,375:INFO:                shap: Not installed
2024-04-15 09:49:13,375:INFO:           interpret: Not installed
2024-04-15 09:49:13,375:INFO:                umap: Not installed
2024-04-15 09:49:13,375:INFO:     ydata_profiling: Not installed
2024-04-15 09:49:13,375:INFO:  explainerdashboard: Not installed
2024-04-15 09:49:13,375:INFO:             autoviz: Not installed
2024-04-15 09:49:13,375:INFO:           fairlearn: Not installed
2024-04-15 09:49:13,376:INFO:          deepchecks: Not installed
2024-04-15 09:49:13,376:INFO:             xgboost: Not installed
2024-04-15 09:49:13,376:INFO:            catboost: Not installed
2024-04-15 09:49:13,376:INFO:              kmodes: Not installed
2024-04-15 09:49:13,376:INFO:             mlxtend: 0.23.1
2024-04-15 09:49:13,376:INFO:       statsforecast: Not installed
2024-04-15 09:49:13,376:INFO:        tune_sklearn: Not installed
2024-04-15 09:49:13,376:INFO:                 ray: Not installed
2024-04-15 09:49:13,376:INFO:            hyperopt: Not installed
2024-04-15 09:49:13,376:INFO:              optuna: Not installed
2024-04-15 09:49:13,376:INFO:               skopt: Not installed
2024-04-15 09:49:13,376:INFO:              mlflow: Not installed
2024-04-15 09:49:13,376:INFO:              gradio: Not installed
2024-04-15 09:49:13,376:INFO:             fastapi: Not installed
2024-04-15 09:49:13,376:INFO:             uvicorn: Not installed
2024-04-15 09:49:13,376:INFO:              m2cgen: Not installed
2024-04-15 09:49:13,376:INFO:           evidently: Not installed
2024-04-15 09:49:13,376:INFO:               fugue: Not installed
2024-04-15 09:49:13,376:INFO:           streamlit: 1.32.2
2024-04-15 09:49:13,376:INFO:             prophet: Not installed
2024-04-15 09:49:13,376:INFO:None
2024-04-15 09:49:13,376:INFO:Set up data.
2024-04-15 09:49:13,384:INFO:Set up folding strategy.
2024-04-15 09:49:13,384:INFO:Set up train/test split.
2024-04-15 09:49:13,388:INFO:Set up index.
2024-04-15 09:49:13,388:INFO:Assigning column types.
2024-04-15 09:49:13,391:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-15 09:49:13,391:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,395:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,399:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,449:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,489:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,490:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,494:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,498:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,550:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,588:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,589:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-15 09:49:13,593:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,597:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,645:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,683:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,687:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,691:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,740:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,779:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-15 09:49:13,787:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,836:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,873:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,883:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,933:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,971:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:49:13,972:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:13,972:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-15 09:49:14,028:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:14,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:49:14,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,129:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:14,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:49:14,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,168:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-15 09:49:14,223:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:14,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,323:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 09:49:14,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,362:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-15 09:49:14,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,561:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,563:INFO:Preparing preprocessing pipeline...
2024-04-15 09:49:14,563:INFO:Set up simple imputation.
2024-04-15 09:49:14,602:INFO:Finished creating preprocessing pipeline.
2024-04-15 09:49:14,607:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['zipconvert2', 'zipconvert3',
                                             'zipconvert4', 'zipconvert5',
                                             'homeowner', 'num_child', 'income',
                                             'female', 'wealth', 'home_value',
                                             'med_fam_inc', 'avg_fam_inc',
                                             'pct_lt15k', 'num_prom',
                                             'lifetime_gifts', 'largest_gift',
                                             'last_gift', 'months_since_donate',
                                             'time_lag', 'avg_gift'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-04-15 09:49:14,607:INFO:Creating final display dataframe.
2024-04-15 09:49:14,679:INFO:Setup _display_container:                     Description             Value
0                    Session id                27
1                        Target            target
2                   Target type        Regression
3           Original data shape        (3000, 21)
4        Transformed data shape        (3000, 21)
5   Transformed train set shape        (2100, 21)
6    Transformed test set shape         (900, 21)
7              Numeric features                20
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              ed27
2024-04-15 09:49:14,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:49:14,929:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-15 09:49:14,929:INFO:setup() successfully completed in 1.82s...............
2024-04-15 09:50:16,715:INFO:PyCaret ClassificationExperiment
2024-04-15 09:50:16,716:INFO:Logging name: clf-default-name
2024-04-15 09:50:16,716:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-15 09:50:16,716:INFO:version 3.3.0
2024-04-15 09:50:16,716:INFO:Initializing setup()
2024-04-15 09:50:16,716:INFO:self.USI: 6f38
2024-04-15 09:50:16,716:INFO:self._variable_keys: {'X_train', 'y', 'fold_shuffle_param', 'X', 'gpu_param', 'y_test', 'pipeline', 'exp_name_log', 'exp_id', '_ml_usecase', 'y_train', 'gpu_n_jobs_param', 'seed', 'target_param', 'memory', 'X_test', 'fold_groups_param', 'logging_param', 'idx', 'n_jobs_param', 'fold_generator', '_available_plots', 'data', 'fix_imbalance', 'log_plots_param', 'is_multiclass', 'USI', 'html_param'}
2024-04-15 09:50:16,716:INFO:Checking environment
2024-04-15 09:50:16,716:INFO:python_version: 3.9.12
2024-04-15 09:50:16,716:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-15 09:50:16,716:INFO:machine: AMD64
2024-04-15 09:50:16,716:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-15 09:50:16,719:INFO:Memory: svmem(total=8376537088, available=1826668544, percent=78.2, used=6549868544, free=1826668544)
2024-04-15 09:50:16,719:INFO:Physical Core: 4
2024-04-15 09:50:16,719:INFO:Logical Core: 8
2024-04-15 09:50:16,719:INFO:Checking libraries
2024-04-15 09:50:16,719:INFO:System:
2024-04-15 09:50:16,719:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-15 09:50:16,719:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-15 09:50:16,719:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-15 09:50:16,719:INFO:PyCaret required dependencies:
2024-04-15 09:50:16,719:INFO:                 pip: 21.2.4
2024-04-15 09:50:16,719:INFO:          setuptools: 61.2.0
2024-04-15 09:50:16,719:INFO:             pycaret: 3.3.0
2024-04-15 09:50:16,719:INFO:             IPython: 8.2.0
2024-04-15 09:50:16,719:INFO:          ipywidgets: 7.6.5
2024-04-15 09:50:16,719:INFO:                tqdm: 4.64.0
2024-04-15 09:50:16,719:INFO:               numpy: 1.24.4
2024-04-15 09:50:16,719:INFO:              pandas: 1.5.3
2024-04-15 09:50:16,719:INFO:              jinja2: 2.11.3
2024-04-15 09:50:16,719:INFO:               scipy: 1.11.4
2024-04-15 09:50:16,719:INFO:              joblib: 1.1.0
2024-04-15 09:50:16,720:INFO:             sklearn: 1.0.2
2024-04-15 09:50:16,720:INFO:                pyod: 1.1.3
2024-04-15 09:50:16,720:INFO:            imblearn: 0.12.0
2024-04-15 09:50:16,720:INFO:   category_encoders: 2.6.3
2024-04-15 09:50:16,720:INFO:            lightgbm: 4.3.0
2024-04-15 09:50:16,720:INFO:               numba: 0.55.1
2024-04-15 09:50:16,720:INFO:            requests: 2.27.1
2024-04-15 09:50:16,720:INFO:          matplotlib: 3.8.0
2024-04-15 09:50:16,720:INFO:          scikitplot: 0.3.7
2024-04-15 09:50:16,720:INFO:         yellowbrick: 1.5
2024-04-15 09:50:16,720:INFO:              plotly: 5.6.0
2024-04-15 09:50:16,720:INFO:    plotly-resampler: Not installed
2024-04-15 09:50:16,720:INFO:             kaleido: 0.2.1
2024-04-15 09:50:16,720:INFO:           schemdraw: 0.15
2024-04-15 09:50:16,720:INFO:         statsmodels: 0.14.0
2024-04-15 09:50:16,720:INFO:              sktime: 0.26.1
2024-04-15 09:50:16,720:INFO:               tbats: 1.1.3
2024-04-15 09:50:16,720:INFO:            pmdarima: 2.0.4
2024-04-15 09:50:16,720:INFO:              psutil: 5.8.0
2024-04-15 09:50:16,720:INFO:          markupsafe: 2.0.1
2024-04-15 09:50:16,720:INFO:             pickle5: Not installed
2024-04-15 09:50:16,720:INFO:         cloudpickle: 2.0.0
2024-04-15 09:50:16,720:INFO:         deprecation: 2.1.0
2024-04-15 09:50:16,720:INFO:              xxhash: 3.4.1
2024-04-15 09:50:16,720:INFO:           wurlitzer: Not installed
2024-04-15 09:50:16,720:INFO:PyCaret optional dependencies:
2024-04-15 09:50:16,721:INFO:                shap: Not installed
2024-04-15 09:50:16,721:INFO:           interpret: Not installed
2024-04-15 09:50:16,721:INFO:                umap: Not installed
2024-04-15 09:50:16,721:INFO:     ydata_profiling: Not installed
2024-04-15 09:50:16,721:INFO:  explainerdashboard: Not installed
2024-04-15 09:50:16,721:INFO:             autoviz: Not installed
2024-04-15 09:50:16,721:INFO:           fairlearn: Not installed
2024-04-15 09:50:16,721:INFO:          deepchecks: Not installed
2024-04-15 09:50:16,721:INFO:             xgboost: Not installed
2024-04-15 09:50:16,721:INFO:            catboost: Not installed
2024-04-15 09:50:16,721:INFO:              kmodes: Not installed
2024-04-15 09:50:16,721:INFO:             mlxtend: 0.23.1
2024-04-15 09:50:16,721:INFO:       statsforecast: Not installed
2024-04-15 09:50:16,721:INFO:        tune_sklearn: Not installed
2024-04-15 09:50:16,721:INFO:                 ray: Not installed
2024-04-15 09:50:16,721:INFO:            hyperopt: Not installed
2024-04-15 09:50:16,721:INFO:              optuna: Not installed
2024-04-15 09:50:16,721:INFO:               skopt: Not installed
2024-04-15 09:50:16,721:INFO:              mlflow: Not installed
2024-04-15 09:50:16,721:INFO:              gradio: Not installed
2024-04-15 09:50:16,721:INFO:             fastapi: Not installed
2024-04-15 09:50:16,721:INFO:             uvicorn: Not installed
2024-04-15 09:50:16,721:INFO:              m2cgen: Not installed
2024-04-15 09:50:16,721:INFO:           evidently: Not installed
2024-04-15 09:50:16,721:INFO:               fugue: Not installed
2024-04-15 09:50:16,722:INFO:           streamlit: 1.32.2
2024-04-15 09:50:16,722:INFO:             prophet: Not installed
2024-04-15 09:50:16,722:INFO:None
2024-04-15 09:50:16,722:INFO:Set up data.
2024-04-15 09:50:16,729:INFO:Set up folding strategy.
2024-04-15 09:50:16,730:INFO:Set up train/test split.
2024-04-15 09:50:16,751:INFO:Set up index.
2024-04-15 09:50:16,752:INFO:Assigning column types.
2024-04-15 09:50:16,759:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-15 09:50:16,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:50:16,814:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:50:16,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:16,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:16,889:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:50:16,890:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:50:16,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:16,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:16,916:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-15 09:50:16,957:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:50:16,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:16,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,032:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:50:17,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,063:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-15 09:50:17,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,200:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,201:INFO:Preparing preprocessing pipeline...
2024-04-15 09:50:17,202:INFO:Set up simple imputation.
2024-04-15 09:50:17,218:INFO:Finished creating preprocessing pipeline.
2024-04-15 09:50:17,222:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['zipconvert2', 'zipconvert3',
                                             'zipconvert4', 'zipconvert5',
                                             'homeowner', 'num_child', 'income',
                                             'female', 'wealth', 'home_value',
                                             'med_fam_inc', 'avg_fam_inc',
                                             'pct_lt15k', 'num_prom',
                                             'lifetime_gifts', 'largest_gift',...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-15 09:50:17,222:INFO:Creating final display dataframe.
2024-04-15 09:50:17,279:INFO:Setup _display_container:                     Description             Value
0                    Session id                27
1                        Target            target
2                   Target type        Multiclass
3           Original data shape        (3000, 21)
4        Transformed data shape        (3000, 21)
5   Transformed train set shape        (2100, 21)
6    Transformed test set shape         (900, 21)
7              Numeric features                20
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              6f38
2024-04-15 09:50:17,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:50:17,429:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-15 09:50:17,429:INFO:setup() successfully completed in 0.72s...............
2024-04-15 09:50:33,168:INFO:Initializing compare_models()
2024-04-15 09:50:33,168:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-04-15 09:50:33,168:INFO:Checking exceptions
2024-04-15 09:50:33,169:INFO:Preparing display monitor
2024-04-15 09:50:33,181:INFO:Initializing Linear Regression
2024-04-15 09:50:33,181:INFO:Total runtime is 0.0 minutes
2024-04-15 09:50:33,181:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:33,181:INFO:Initializing create_model()
2024-04-15 09:50:33,181:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:33,181:INFO:Checking exceptions
2024-04-15 09:50:33,182:INFO:Importing libraries
2024-04-15 09:50:33,182:INFO:Copying training dataset
2024-04-15 09:50:33,185:INFO:Defining folds
2024-04-15 09:50:33,185:INFO:Declaring metric variables
2024-04-15 09:50:33,185:INFO:Importing untrained model
2024-04-15 09:50:33,185:INFO:Linear Regression Imported successfully
2024-04-15 09:50:33,186:INFO:Starting cross validation
2024-04-15 09:50:33,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:40,215:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,217:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,235:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,238:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,239:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,246:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,246:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,272:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,278:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,279:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,319:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,320:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,375:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,376:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,397:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,397:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,397:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,397:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,401:INFO:Calculating mean and std
2024-04-15 09:50:40,403:INFO:Creating metrics dataframe
2024-04-15 09:50:40,408:INFO:Uploading results into container
2024-04-15 09:50:40,408:INFO:Uploading model into container now
2024-04-15 09:50:40,409:INFO:_master_model_container: 1
2024-04-15 09:50:40,409:INFO:_display_container: 2
2024-04-15 09:50:40,409:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2024-04-15 09:50:40,409:INFO:create_model() successfully completed......................................
2024-04-15 09:50:40,507:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:40,507:INFO:Creating metrics dataframe
2024-04-15 09:50:40,513:INFO:Initializing Lasso Regression
2024-04-15 09:50:40,514:INFO:Total runtime is 0.12220311562220255 minutes
2024-04-15 09:50:40,514:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:40,514:INFO:Initializing create_model()
2024-04-15 09:50:40,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:40,514:INFO:Checking exceptions
2024-04-15 09:50:40,514:INFO:Importing libraries
2024-04-15 09:50:40,514:INFO:Copying training dataset
2024-04-15 09:50:40,520:INFO:Defining folds
2024-04-15 09:50:40,520:INFO:Declaring metric variables
2024-04-15 09:50:40,520:INFO:Importing untrained model
2024-04-15 09:50:40,520:INFO:Lasso Regression Imported successfully
2024-04-15 09:50:40,521:INFO:Starting cross validation
2024-04-15 09:50:40,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:40,586:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,586:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,590:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,590:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,599:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,599:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,599:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,599:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,600:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,601:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,602:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,602:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,603:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,603:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,604:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,610:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,610:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,615:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,615:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,619:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,620:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,622:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,627:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,628:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,628:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,634:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,634:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,650:INFO:Calculating mean and std
2024-04-15 09:50:40,651:INFO:Creating metrics dataframe
2024-04-15 09:50:40,654:INFO:Uploading results into container
2024-04-15 09:50:40,654:INFO:Uploading model into container now
2024-04-15 09:50:40,655:INFO:_master_model_container: 2
2024-04-15 09:50:40,655:INFO:_display_container: 2
2024-04-15 09:50:40,655:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=27, selection='cyclic', tol=0.0001,
      warm_start=False)
2024-04-15 09:50:40,655:INFO:create_model() successfully completed......................................
2024-04-15 09:50:40,732:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:40,732:INFO:Creating metrics dataframe
2024-04-15 09:50:40,739:INFO:Initializing Ridge Regression
2024-04-15 09:50:40,739:INFO:Total runtime is 0.12597157955169677 minutes
2024-04-15 09:50:40,739:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:40,740:INFO:Initializing create_model()
2024-04-15 09:50:40,740:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:40,740:INFO:Checking exceptions
2024-04-15 09:50:40,740:INFO:Importing libraries
2024-04-15 09:50:40,740:INFO:Copying training dataset
2024-04-15 09:50:40,745:INFO:Defining folds
2024-04-15 09:50:40,745:INFO:Declaring metric variables
2024-04-15 09:50:40,745:INFO:Importing untrained model
2024-04-15 09:50:40,746:INFO:Ridge Regression Imported successfully
2024-04-15 09:50:40,746:INFO:Starting cross validation
2024-04-15 09:50:40,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:40,783:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,783:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,787:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,787:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,791:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,791:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,801:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,801:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,802:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,802:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,805:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,805:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,812:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,812:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,814:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,814:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,819:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,819:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,822:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,822:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,836:INFO:Calculating mean and std
2024-04-15 09:50:40,837:INFO:Creating metrics dataframe
2024-04-15 09:50:40,840:INFO:Uploading results into container
2024-04-15 09:50:40,840:INFO:Uploading model into container now
2024-04-15 09:50:40,841:INFO:_master_model_container: 3
2024-04-15 09:50:40,841:INFO:_display_container: 2
2024-04-15 09:50:40,841:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=27, solver='auto', tol=0.0001)
2024-04-15 09:50:40,841:INFO:create_model() successfully completed......................................
2024-04-15 09:50:40,914:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:40,914:INFO:Creating metrics dataframe
2024-04-15 09:50:40,921:INFO:Initializing Elastic Net
2024-04-15 09:50:40,922:INFO:Total runtime is 0.12902448574701944 minutes
2024-04-15 09:50:40,922:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:40,922:INFO:Initializing create_model()
2024-04-15 09:50:40,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:40,922:INFO:Checking exceptions
2024-04-15 09:50:40,922:INFO:Importing libraries
2024-04-15 09:50:40,922:INFO:Copying training dataset
2024-04-15 09:50:40,927:INFO:Defining folds
2024-04-15 09:50:40,927:INFO:Declaring metric variables
2024-04-15 09:50:40,928:INFO:Importing untrained model
2024-04-15 09:50:40,928:INFO:Elastic Net Imported successfully
2024-04-15 09:50:40,928:INFO:Starting cross validation
2024-04-15 09:50:40,929:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:40,969:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,972:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,974:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,983:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,983:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,985:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,985:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:40,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:40,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,989:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:40,994:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:41,000:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,000:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,000:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,000:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,001:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:41,003:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,003:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,007:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:41,009:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,009:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,014:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,014:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,025:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:41,029:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2024-04-15 09:50:41,031:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,031:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,035:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,035:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,040:INFO:Calculating mean and std
2024-04-15 09:50:41,041:INFO:Creating metrics dataframe
2024-04-15 09:50:41,044:INFO:Uploading results into container
2024-04-15 09:50:41,044:INFO:Uploading model into container now
2024-04-15 09:50:41,045:INFO:_master_model_container: 4
2024-04-15 09:50:41,045:INFO:_display_container: 2
2024-04-15 09:50:41,045:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=27,
           selection='cyclic', tol=0.0001, warm_start=False)
2024-04-15 09:50:41,045:INFO:create_model() successfully completed......................................
2024-04-15 09:50:41,120:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:41,120:INFO:Creating metrics dataframe
2024-04-15 09:50:41,126:INFO:Initializing Least Angle Regression
2024-04-15 09:50:41,126:INFO:Total runtime is 0.13242081801096597 minutes
2024-04-15 09:50:41,127:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:41,127:INFO:Initializing create_model()
2024-04-15 09:50:41,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:41,127:INFO:Checking exceptions
2024-04-15 09:50:41,127:INFO:Importing libraries
2024-04-15 09:50:41,127:INFO:Copying training dataset
2024-04-15 09:50:41,132:INFO:Defining folds
2024-04-15 09:50:41,132:INFO:Declaring metric variables
2024-04-15 09:50:41,132:INFO:Importing untrained model
2024-04-15 09:50:41,133:INFO:Least Angle Regression Imported successfully
2024-04-15 09:50:41,133:INFO:Starting cross validation
2024-04-15 09:50:41,134:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:41,167:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,167:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,173:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,173:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,176:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,176:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,186:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,186:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,190:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,190:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,193:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,193:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,197:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,197:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,197:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,198:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,201:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,201:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,202:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,203:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,212:INFO:Calculating mean and std
2024-04-15 09:50:41,213:INFO:Creating metrics dataframe
2024-04-15 09:50:41,216:INFO:Uploading results into container
2024-04-15 09:50:41,216:INFO:Uploading model into container now
2024-04-15 09:50:41,217:INFO:_master_model_container: 5
2024-04-15 09:50:41,217:INFO:_display_container: 2
2024-04-15 09:50:41,217:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, precompute='auto', random_state=27,
     verbose=False)
2024-04-15 09:50:41,217:INFO:create_model() successfully completed......................................
2024-04-15 09:50:41,289:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:41,290:INFO:Creating metrics dataframe
2024-04-15 09:50:41,296:INFO:Initializing Lasso Least Angle Regression
2024-04-15 09:50:41,298:INFO:Total runtime is 0.13528312444686888 minutes
2024-04-15 09:50:41,298:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:41,298:INFO:Initializing create_model()
2024-04-15 09:50:41,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:41,298:INFO:Checking exceptions
2024-04-15 09:50:41,298:INFO:Importing libraries
2024-04-15 09:50:41,298:INFO:Copying training dataset
2024-04-15 09:50:41,303:INFO:Defining folds
2024-04-15 09:50:41,303:INFO:Declaring metric variables
2024-04-15 09:50:41,303:INFO:Importing untrained model
2024-04-15 09:50:41,303:INFO:Lasso Least Angle Regression Imported successfully
2024-04-15 09:50:41,304:INFO:Starting cross validation
2024-04-15 09:50:41,305:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:41,340:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,340:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,344:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,344:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,348:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,349:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,357:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,357:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,361:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,361:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,364:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,364:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,370:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,370:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,370:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,370:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,370:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,370:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,379:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,379:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,384:INFO:Calculating mean and std
2024-04-15 09:50:41,385:INFO:Creating metrics dataframe
2024-04-15 09:50:41,388:INFO:Uploading results into container
2024-04-15 09:50:41,388:INFO:Uploading model into container now
2024-04-15 09:50:41,388:INFO:_master_model_container: 6
2024-04-15 09:50:41,389:INFO:_display_container: 2
2024-04-15 09:50:41,389:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, positive=False,
          precompute='auto', random_state=27, verbose=False)
2024-04-15 09:50:41,389:INFO:create_model() successfully completed......................................
2024-04-15 09:50:41,463:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:41,463:INFO:Creating metrics dataframe
2024-04-15 09:50:41,470:INFO:Initializing Orthogonal Matching Pursuit
2024-04-15 09:50:41,470:INFO:Total runtime is 0.1381592273712158 minutes
2024-04-15 09:50:41,470:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:41,470:INFO:Initializing create_model()
2024-04-15 09:50:41,470:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:41,470:INFO:Checking exceptions
2024-04-15 09:50:41,470:INFO:Importing libraries
2024-04-15 09:50:41,470:INFO:Copying training dataset
2024-04-15 09:50:41,475:INFO:Defining folds
2024-04-15 09:50:41,475:INFO:Declaring metric variables
2024-04-15 09:50:41,476:INFO:Importing untrained model
2024-04-15 09:50:41,476:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-15 09:50:41,476:INFO:Starting cross validation
2024-04-15 09:50:41,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:41,516:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,516:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,516:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,516:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,518:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,528:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,528:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,528:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,528:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,528:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,528:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,530:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,530:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,531:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,532:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,532:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,534:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,538:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,538:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,538:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,545:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,545:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,546:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,546:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,548:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,548:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_param_validation.py:186: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  return func(*args, **kwargs)

2024-04-15 09:50:41,554:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,554:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,554:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,555:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,556:INFO:Calculating mean and std
2024-04-15 09:50:41,556:INFO:Creating metrics dataframe
2024-04-15 09:50:41,560:INFO:Uploading results into container
2024-04-15 09:50:41,560:INFO:Uploading model into container now
2024-04-15 09:50:41,560:INFO:_master_model_container: 7
2024-04-15 09:50:41,561:INFO:_display_container: 2
2024-04-15 09:50:41,561:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          precompute='auto', tol=None)
2024-04-15 09:50:41,561:INFO:create_model() successfully completed......................................
2024-04-15 09:50:41,634:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:41,635:INFO:Creating metrics dataframe
2024-04-15 09:50:41,641:INFO:Initializing Bayesian Ridge
2024-04-15 09:50:41,642:INFO:Total runtime is 0.14100563128789265 minutes
2024-04-15 09:50:41,642:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:41,643:INFO:Initializing create_model()
2024-04-15 09:50:41,643:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:41,643:INFO:Checking exceptions
2024-04-15 09:50:41,643:INFO:Importing libraries
2024-04-15 09:50:41,643:INFO:Copying training dataset
2024-04-15 09:50:41,648:INFO:Defining folds
2024-04-15 09:50:41,648:INFO:Declaring metric variables
2024-04-15 09:50:41,648:INFO:Importing untrained model
2024-04-15 09:50:41,648:INFO:Bayesian Ridge Imported successfully
2024-04-15 09:50:41,649:INFO:Starting cross validation
2024-04-15 09:50:41,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:41,684:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,685:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,688:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,688:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,693:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,693:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,701:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,701:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,705:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,705:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,708:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,708:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,709:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,709:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,715:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,716:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,720:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,721:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,723:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,723:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,728:INFO:Calculating mean and std
2024-04-15 09:50:41,729:INFO:Creating metrics dataframe
2024-04-15 09:50:41,732:INFO:Uploading results into container
2024-04-15 09:50:41,733:INFO:Uploading model into container now
2024-04-15 09:50:41,733:INFO:_master_model_container: 8
2024-04-15 09:50:41,733:INFO:_display_container: 2
2024-04-15 09:50:41,733:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, max_iter=None,
              n_iter='deprecated', tol=0.001, verbose=False)
2024-04-15 09:50:41,733:INFO:create_model() successfully completed......................................
2024-04-15 09:50:41,805:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:41,805:INFO:Creating metrics dataframe
2024-04-15 09:50:41,813:INFO:Initializing Passive Aggressive Regressor
2024-04-15 09:50:41,813:INFO:Total runtime is 0.1438731829325358 minutes
2024-04-15 09:50:41,813:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:41,813:INFO:Initializing create_model()
2024-04-15 09:50:41,813:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:41,813:INFO:Checking exceptions
2024-04-15 09:50:41,813:INFO:Importing libraries
2024-04-15 09:50:41,814:INFO:Copying training dataset
2024-04-15 09:50:41,818:INFO:Defining folds
2024-04-15 09:50:41,818:INFO:Declaring metric variables
2024-04-15 09:50:41,819:INFO:Importing untrained model
2024-04-15 09:50:41,819:INFO:Passive Aggressive Regressor Imported successfully
2024-04-15 09:50:41,819:INFO:Starting cross validation
2024-04-15 09:50:41,820:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:41,856:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,856:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,860:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,860:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,861:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,861:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,871:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,872:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,874:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,874:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,878:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,878:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,885:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,885:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,886:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,887:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,888:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,888:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,896:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:41,896:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:41,900:INFO:Calculating mean and std
2024-04-15 09:50:41,901:INFO:Creating metrics dataframe
2024-04-15 09:50:41,903:INFO:Uploading results into container
2024-04-15 09:50:41,904:INFO:Uploading model into container now
2024-04-15 09:50:41,904:INFO:_master_model_container: 9
2024-04-15 09:50:41,904:INFO:_display_container: 2
2024-04-15 09:50:41,904:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=27, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-15 09:50:41,904:INFO:create_model() successfully completed......................................
2024-04-15 09:50:41,977:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:41,977:INFO:Creating metrics dataframe
2024-04-15 09:50:41,983:INFO:Initializing Huber Regressor
2024-04-15 09:50:41,984:INFO:Total runtime is 0.14672747850418089 minutes
2024-04-15 09:50:41,984:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:41,984:INFO:Initializing create_model()
2024-04-15 09:50:41,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:41,984:INFO:Checking exceptions
2024-04-15 09:50:41,984:INFO:Importing libraries
2024-04-15 09:50:41,984:INFO:Copying training dataset
2024-04-15 09:50:41,989:INFO:Defining folds
2024-04-15 09:50:41,989:INFO:Declaring metric variables
2024-04-15 09:50:41,990:INFO:Importing untrained model
2024-04-15 09:50:41,990:INFO:Huber Regressor Imported successfully
2024-04-15 09:50:41,990:INFO:Starting cross validation
2024-04-15 09:50:41,991:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:42,030:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,030:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,034:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,034:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,036:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,036:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,044:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,044:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,048:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,048:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,048:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,048:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,054:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,054:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,060:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,060:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,066:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,066:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,066:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,066:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,070:INFO:Calculating mean and std
2024-04-15 09:50:42,071:INFO:Creating metrics dataframe
2024-04-15 09:50:42,074:INFO:Uploading results into container
2024-04-15 09:50:42,075:INFO:Uploading model into container now
2024-04-15 09:50:42,075:INFO:_master_model_container: 10
2024-04-15 09:50:42,075:INFO:_display_container: 2
2024-04-15 09:50:42,075:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2024-04-15 09:50:42,075:INFO:create_model() successfully completed......................................
2024-04-15 09:50:42,148:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:42,148:INFO:Creating metrics dataframe
2024-04-15 09:50:42,155:INFO:Initializing K Neighbors Regressor
2024-04-15 09:50:42,155:INFO:Total runtime is 0.1495651046435038 minutes
2024-04-15 09:50:42,155:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:42,156:INFO:Initializing create_model()
2024-04-15 09:50:42,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:42,156:INFO:Checking exceptions
2024-04-15 09:50:42,156:INFO:Importing libraries
2024-04-15 09:50:42,156:INFO:Copying training dataset
2024-04-15 09:50:42,161:INFO:Defining folds
2024-04-15 09:50:42,161:INFO:Declaring metric variables
2024-04-15 09:50:42,161:INFO:Importing untrained model
2024-04-15 09:50:42,161:INFO:K Neighbors Regressor Imported successfully
2024-04-15 09:50:42,162:INFO:Starting cross validation
2024-04-15 09:50:42,162:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:42,233:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,233:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,233:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,238:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,238:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,238:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,239:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,240:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,243:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,248:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,248:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,249:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,249:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,253:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,253:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,254:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,254:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,257:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,260:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,261:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,271:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,274:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,275:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,277:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,279:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,280:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,280:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,282:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,282:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,290:INFO:Calculating mean and std
2024-04-15 09:50:42,292:INFO:Creating metrics dataframe
2024-04-15 09:50:42,299:INFO:Uploading results into container
2024-04-15 09:50:42,300:INFO:Uploading model into container now
2024-04-15 09:50:42,301:INFO:_master_model_container: 11
2024-04-15 09:50:42,301:INFO:_display_container: 2
2024-04-15 09:50:42,303:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2024-04-15 09:50:42,303:INFO:create_model() successfully completed......................................
2024-04-15 09:50:42,380:WARNING:create_model() for KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 09:50:42,381:WARNING:Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 796, in compare_models
    assert (
AssertionError

2024-04-15 09:50:42,382:INFO:Initializing create_model()
2024-04-15 09:50:42,382:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:42,382:INFO:Checking exceptions
2024-04-15 09:50:42,382:INFO:Importing libraries
2024-04-15 09:50:42,382:INFO:Copying training dataset
2024-04-15 09:50:42,388:INFO:Defining folds
2024-04-15 09:50:42,388:INFO:Declaring metric variables
2024-04-15 09:50:42,388:INFO:Importing untrained model
2024-04-15 09:50:42,389:INFO:K Neighbors Regressor Imported successfully
2024-04-15 09:50:42,389:INFO:Starting cross validation
2024-04-15 09:50:42,390:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:42,444:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,445:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,449:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,449:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,450:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,450:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,454:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,459:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,460:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,462:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,464:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,468:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,468:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,469:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,469:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,469:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,473:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,474:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,474:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,478:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,478:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,480:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,484:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,484:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,492:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,494:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(root_mean_squared_log_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,494:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,494:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,497:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(mean_absolute_percentage_error, greater_is_better=False, response_method='predict')' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,497:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 238, in _get_response_values
    y_pred, pos_label = prediction_method(X), None
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_regression.py", line 242, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:50:42,509:INFO:Calculating mean and std
2024-04-15 09:50:42,510:INFO:Creating metrics dataframe
2024-04-15 09:50:42,517:INFO:Uploading results into container
2024-04-15 09:50:42,518:INFO:Uploading model into container now
2024-04-15 09:50:42,519:INFO:_master_model_container: 12
2024-04-15 09:50:42,519:INFO:_display_container: 2
2024-04-15 09:50:42,519:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2024-04-15 09:50:42,520:INFO:create_model() successfully completed......................................
2024-04-15 09:50:42,594:ERROR:create_model() for KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform') raised an exception or returned all 0.0:
2024-04-15 09:50:42,595:ERROR:Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 796, in compare_models
    assert (
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dansc\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 817, in compare_models
    assert (
AssertionError

2024-04-15 09:50:42,595:INFO:Initializing Decision Tree Regressor
2024-04-15 09:50:42,595:INFO:Total runtime is 0.15690488815307616 minutes
2024-04-15 09:50:42,595:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:42,595:INFO:Initializing create_model()
2024-04-15 09:50:42,596:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:42,596:INFO:Checking exceptions
2024-04-15 09:50:42,596:INFO:Importing libraries
2024-04-15 09:50:42,596:INFO:Copying training dataset
2024-04-15 09:50:42,601:INFO:Defining folds
2024-04-15 09:50:42,601:INFO:Declaring metric variables
2024-04-15 09:50:42,601:INFO:Importing untrained model
2024-04-15 09:50:42,602:INFO:Decision Tree Regressor Imported successfully
2024-04-15 09:50:42,603:INFO:Starting cross validation
2024-04-15 09:50:42,604:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:42,636:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,637:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,644:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,644:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,648:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,656:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,656:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,659:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,659:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,664:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,664:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,668:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,668:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,670:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,670:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,673:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,674:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,681:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:42,681:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:42,696:INFO:Calculating mean and std
2024-04-15 09:50:42,698:INFO:Creating metrics dataframe
2024-04-15 09:50:42,706:INFO:Uploading results into container
2024-04-15 09:50:42,707:INFO:Uploading model into container now
2024-04-15 09:50:42,707:INFO:_master_model_container: 13
2024-04-15 09:50:42,708:INFO:_display_container: 2
2024-04-15 09:50:42,708:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      monotonic_cst=None, random_state=27, splitter='best')
2024-04-15 09:50:42,708:INFO:create_model() successfully completed......................................
2024-04-15 09:50:42,783:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:42,783:INFO:Creating metrics dataframe
2024-04-15 09:50:42,790:INFO:Initializing Random Forest Regressor
2024-04-15 09:50:42,790:INFO:Total runtime is 0.16016429662704465 minutes
2024-04-15 09:50:42,790:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:42,790:INFO:Initializing create_model()
2024-04-15 09:50:42,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:42,790:INFO:Checking exceptions
2024-04-15 09:50:42,790:INFO:Importing libraries
2024-04-15 09:50:42,791:INFO:Copying training dataset
2024-04-15 09:50:42,795:INFO:Defining folds
2024-04-15 09:50:42,795:INFO:Declaring metric variables
2024-04-15 09:50:42,796:INFO:Importing untrained model
2024-04-15 09:50:42,796:INFO:Random Forest Regressor Imported successfully
2024-04-15 09:50:42,796:INFO:Starting cross validation
2024-04-15 09:50:42,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:43,079:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,079:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,094:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,094:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,097:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,097:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,124:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,124:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,126:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,126:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,247:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,247:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,263:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,263:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,275:INFO:Calculating mean and std
2024-04-15 09:50:43,276:INFO:Creating metrics dataframe
2024-04-15 09:50:43,279:INFO:Uploading results into container
2024-04-15 09:50:43,280:INFO:Uploading model into container now
2024-04-15 09:50:43,280:INFO:_master_model_container: 14
2024-04-15 09:50:43,280:INFO:_display_container: 2
2024-04-15 09:50:43,280:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, monotonic_cst=None,
                      n_estimators=100, n_jobs=-1, oob_score=False,
                      random_state=27, verbose=0, warm_start=False)
2024-04-15 09:50:43,281:INFO:create_model() successfully completed......................................
2024-04-15 09:50:43,353:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:43,353:INFO:Creating metrics dataframe
2024-04-15 09:50:43,360:INFO:Initializing Extra Trees Regressor
2024-04-15 09:50:43,360:INFO:Total runtime is 0.1696573972702026 minutes
2024-04-15 09:50:43,360:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:43,361:INFO:Initializing create_model()
2024-04-15 09:50:43,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:43,361:INFO:Checking exceptions
2024-04-15 09:50:43,361:INFO:Importing libraries
2024-04-15 09:50:43,361:INFO:Copying training dataset
2024-04-15 09:50:43,366:INFO:Defining folds
2024-04-15 09:50:43,366:INFO:Declaring metric variables
2024-04-15 09:50:43,366:INFO:Importing untrained model
2024-04-15 09:50:43,367:INFO:Extra Trees Regressor Imported successfully
2024-04-15 09:50:43,367:INFO:Starting cross validation
2024-04-15 09:50:43,368:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:43,582:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,582:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,583:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,583:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,596:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,596:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,596:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,597:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,626:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,626:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,717:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,717:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,717:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,717:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,729:INFO:Calculating mean and std
2024-04-15 09:50:43,730:INFO:Creating metrics dataframe
2024-04-15 09:50:43,733:INFO:Uploading results into container
2024-04-15 09:50:43,733:INFO:Uploading model into container now
2024-04-15 09:50:43,734:INFO:_master_model_container: 15
2024-04-15 09:50:43,734:INFO:_display_container: 2
2024-04-15 09:50:43,734:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, monotonic_cst=None,
                    n_estimators=100, n_jobs=-1, oob_score=False,
                    random_state=27, verbose=0, warm_start=False)
2024-04-15 09:50:43,734:INFO:create_model() successfully completed......................................
2024-04-15 09:50:43,810:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:43,811:INFO:Creating metrics dataframe
2024-04-15 09:50:43,818:INFO:Initializing AdaBoost Regressor
2024-04-15 09:50:43,818:INFO:Total runtime is 0.17728221019109086 minutes
2024-04-15 09:50:43,818:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:43,818:INFO:Initializing create_model()
2024-04-15 09:50:43,818:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:43,818:INFO:Checking exceptions
2024-04-15 09:50:43,819:INFO:Importing libraries
2024-04-15 09:50:43,819:INFO:Copying training dataset
2024-04-15 09:50:43,823:INFO:Defining folds
2024-04-15 09:50:43,824:INFO:Declaring metric variables
2024-04-15 09:50:43,824:INFO:Importing untrained model
2024-04-15 09:50:43,824:INFO:AdaBoost Regressor Imported successfully
2024-04-15 09:50:43,824:INFO:Starting cross validation
2024-04-15 09:50:43,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:43,856:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,857:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,869:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,869:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,872:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,872:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,874:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,874:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,880:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,880:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,886:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,887:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,891:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,891:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,896:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,896:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,897:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,897:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,902:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:43,902:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:43,915:INFO:Calculating mean and std
2024-04-15 09:50:43,918:INFO:Creating metrics dataframe
2024-04-15 09:50:43,925:INFO:Uploading results into container
2024-04-15 09:50:43,926:INFO:Uploading model into container now
2024-04-15 09:50:43,927:INFO:_master_model_container: 16
2024-04-15 09:50:43,927:INFO:_display_container: 2
2024-04-15 09:50:43,928:INFO:AdaBoostRegressor(estimator=None, learning_rate=1.0, loss='linear',
                  n_estimators=50, random_state=27)
2024-04-15 09:50:43,928:INFO:create_model() successfully completed......................................
2024-04-15 09:50:44,006:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:44,006:INFO:Creating metrics dataframe
2024-04-15 09:50:44,014:INFO:Initializing Gradient Boosting Regressor
2024-04-15 09:50:44,014:INFO:Total runtime is 0.18056359688440954 minutes
2024-04-15 09:50:44,014:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:44,014:INFO:Initializing create_model()
2024-04-15 09:50:44,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:44,014:INFO:Checking exceptions
2024-04-15 09:50:44,015:INFO:Importing libraries
2024-04-15 09:50:44,015:INFO:Copying training dataset
2024-04-15 09:50:44,020:INFO:Defining folds
2024-04-15 09:50:44,020:INFO:Declaring metric variables
2024-04-15 09:50:44,020:INFO:Importing untrained model
2024-04-15 09:50:44,020:INFO:Gradient Boosting Regressor Imported successfully
2024-04-15 09:50:44,022:INFO:Starting cross validation
2024-04-15 09:50:44,022:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:44,166:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,166:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,183:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,183:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,184:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,185:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,195:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,196:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,196:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,196:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,215:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,215:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,219:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,219:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,219:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,219:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:44,276:INFO:Calculating mean and std
2024-04-15 09:50:44,277:INFO:Creating metrics dataframe
2024-04-15 09:50:44,281:INFO:Uploading results into container
2024-04-15 09:50:44,282:INFO:Uploading model into container now
2024-04-15 09:50:44,282:INFO:_master_model_container: 17
2024-04-15 09:50:44,282:INFO:_display_container: 2
2024-04-15 09:50:44,283:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=27, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-15 09:50:44,283:INFO:create_model() successfully completed......................................
2024-04-15 09:50:44,367:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:44,367:INFO:Creating metrics dataframe
2024-04-15 09:50:44,373:INFO:Initializing Light Gradient Boosting Machine
2024-04-15 09:50:44,373:INFO:Total runtime is 0.1865477879842122 minutes
2024-04-15 09:50:44,373:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:44,374:INFO:Initializing create_model()
2024-04-15 09:50:44,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:44,374:INFO:Checking exceptions
2024-04-15 09:50:44,374:INFO:Importing libraries
2024-04-15 09:50:44,374:INFO:Copying training dataset
2024-04-15 09:50:44,378:INFO:Defining folds
2024-04-15 09:50:44,379:INFO:Declaring metric variables
2024-04-15 09:50:44,379:INFO:Importing untrained model
2024-04-15 09:50:44,379:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-15 09:50:44,379:INFO:Starting cross validation
2024-04-15 09:50:44,380:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:44,968:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:44,969:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,012:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,012:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,019:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,019:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,025:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,026:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,041:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,042:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,051:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,052:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,061:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,061:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,071:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,072:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,165:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,165:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,167:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,167:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,177:INFO:Calculating mean and std
2024-04-15 09:50:45,178:INFO:Creating metrics dataframe
2024-04-15 09:50:45,185:INFO:Uploading results into container
2024-04-15 09:50:45,186:INFO:Uploading model into container now
2024-04-15 09:50:45,186:INFO:_master_model_container: 18
2024-04-15 09:50:45,186:INFO:_display_container: 2
2024-04-15 09:50:45,187:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2024-04-15 09:50:45,187:INFO:create_model() successfully completed......................................
2024-04-15 09:50:45,274:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:45,274:INFO:Creating metrics dataframe
2024-04-15 09:50:45,279:INFO:Initializing Dummy Regressor
2024-04-15 09:50:45,280:INFO:Total runtime is 0.20164022843043006 minutes
2024-04-15 09:50:45,280:INFO:SubProcess create_model() called ==================================
2024-04-15 09:50:45,280:INFO:Initializing create_model()
2024-04-15 09:50:45,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000210C84207F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:45,280:INFO:Checking exceptions
2024-04-15 09:50:45,280:INFO:Importing libraries
2024-04-15 09:50:45,280:INFO:Copying training dataset
2024-04-15 09:50:45,285:INFO:Defining folds
2024-04-15 09:50:45,285:INFO:Declaring metric variables
2024-04-15 09:50:45,285:INFO:Importing untrained model
2024-04-15 09:50:45,285:INFO:Dummy Regressor Imported successfully
2024-04-15 09:50:45,285:INFO:Starting cross validation
2024-04-15 09:50:45,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:50:45,313:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,314:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,321:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,321:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,321:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,322:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,334:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,335:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,335:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,335:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,340:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,340:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,345:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,345:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,351:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,351:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,358:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,358:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,362:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\lib\function_base.py:518: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2024-04-15 09:50:45,362:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\numpy\core\_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2024-04-15 09:50:45,368:INFO:Calculating mean and std
2024-04-15 09:50:45,370:INFO:Creating metrics dataframe
2024-04-15 09:50:45,379:INFO:Uploading results into container
2024-04-15 09:50:45,380:INFO:Uploading model into container now
2024-04-15 09:50:45,381:INFO:_master_model_container: 19
2024-04-15 09:50:45,381:INFO:_display_container: 2
2024-04-15 09:50:45,382:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2024-04-15 09:50:45,382:INFO:create_model() successfully completed......................................
2024-04-15 09:50:45,460:INFO:SubProcess create_model() end ==================================
2024-04-15 09:50:45,460:INFO:Creating metrics dataframe
2024-04-15 09:50:45,469:INFO:Initializing create_model()
2024-04-15 09:50:45,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000210C7001100>, estimator=LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:50:45,469:INFO:Checking exceptions
2024-04-15 09:50:45,470:INFO:Importing libraries
2024-04-15 09:50:45,470:INFO:Copying training dataset
2024-04-15 09:50:45,475:INFO:Defining folds
2024-04-15 09:50:45,475:INFO:Declaring metric variables
2024-04-15 09:50:45,475:INFO:Importing untrained model
2024-04-15 09:50:45,475:INFO:Declaring custom model
2024-04-15 09:50:45,476:INFO:Linear Regression Imported successfully
2024-04-15 09:50:45,476:INFO:Cross validation set to False
2024-04-15 09:50:45,477:INFO:Fitting Model
2024-04-15 09:50:45,487:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2024-04-15 09:50:45,487:INFO:create_model() successfully completed......................................
2024-04-15 09:50:45,582:INFO:_master_model_container: 19
2024-04-15 09:50:45,582:INFO:_display_container: 2
2024-04-15 09:50:45,583:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2024-04-15 09:50:45,583:INFO:compare_models() successfully completed......................................
2024-04-15 09:56:29,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:56:29,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:56:29,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:56:29,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 09:56:36,671:INFO:PyCaret ClassificationExperiment
2024-04-15 09:56:36,671:INFO:Logging name: clf-default-name
2024-04-15 09:56:36,672:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-15 09:56:36,672:INFO:version 3.3.0
2024-04-15 09:56:36,672:INFO:Initializing setup()
2024-04-15 09:56:36,672:INFO:self.USI: b9a0
2024-04-15 09:56:36,672:INFO:self._variable_keys: {'y', 'y_test', 'log_plots_param', 'USI', 'X_test', 'fold_generator', 'fold_groups_param', 'pipeline', 'logging_param', 'fix_imbalance', 'y_train', 'idx', 'X_train', 'exp_name_log', 'exp_id', 'seed', 'gpu_n_jobs_param', 'html_param', 'fold_shuffle_param', 'n_jobs_param', '_available_plots', 'is_multiclass', 'memory', 'X', '_ml_usecase', 'target_param', 'data', 'gpu_param'}
2024-04-15 09:56:36,672:INFO:Checking environment
2024-04-15 09:56:36,672:INFO:python_version: 3.9.12
2024-04-15 09:56:36,672:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-15 09:56:36,672:INFO:machine: AMD64
2024-04-15 09:56:36,684:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-15 09:56:36,686:INFO:Memory: svmem(total=8376537088, available=2520330240, percent=69.9, used=5856206848, free=2520330240)
2024-04-15 09:56:36,686:INFO:Physical Core: 4
2024-04-15 09:56:36,686:INFO:Logical Core: 8
2024-04-15 09:56:36,687:INFO:Checking libraries
2024-04-15 09:56:36,687:INFO:System:
2024-04-15 09:56:36,687:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-15 09:56:36,687:INFO:executable: C:\Users\dansc\Anaconda3\python.exe
2024-04-15 09:56:36,687:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-15 09:56:36,687:INFO:PyCaret required dependencies:
2024-04-15 09:56:36,913:INFO:                 pip: 21.2.4
2024-04-15 09:56:36,913:INFO:          setuptools: 61.2.0
2024-04-15 09:56:36,913:INFO:             pycaret: 3.3.0
2024-04-15 09:56:36,913:INFO:             IPython: 8.2.0
2024-04-15 09:56:36,913:INFO:          ipywidgets: 7.6.5
2024-04-15 09:56:36,913:INFO:                tqdm: 4.64.0
2024-04-15 09:56:36,913:INFO:               numpy: 1.24.4
2024-04-15 09:56:36,913:INFO:              pandas: 1.5.3
2024-04-15 09:56:36,913:INFO:              jinja2: 2.11.3
2024-04-15 09:56:36,913:INFO:               scipy: 1.11.4
2024-04-15 09:56:36,913:INFO:              joblib: 1.1.0
2024-04-15 09:56:36,913:INFO:             sklearn: 1.0.2
2024-04-15 09:56:36,913:INFO:                pyod: 1.1.3
2024-04-15 09:56:36,913:INFO:            imblearn: 0.12.0
2024-04-15 09:56:36,913:INFO:   category_encoders: 2.6.3
2024-04-15 09:56:36,913:INFO:            lightgbm: 4.3.0
2024-04-15 09:56:36,913:INFO:               numba: 0.55.1
2024-04-15 09:56:36,913:INFO:            requests: 2.27.1
2024-04-15 09:56:36,913:INFO:          matplotlib: 3.8.0
2024-04-15 09:56:36,914:INFO:          scikitplot: 0.3.7
2024-04-15 09:56:36,914:INFO:         yellowbrick: 1.5
2024-04-15 09:56:36,914:INFO:              plotly: 5.6.0
2024-04-15 09:56:36,914:INFO:    plotly-resampler: Not installed
2024-04-15 09:56:36,914:INFO:             kaleido: 0.2.1
2024-04-15 09:56:36,914:INFO:           schemdraw: 0.15
2024-04-15 09:56:36,914:INFO:         statsmodels: 0.14.0
2024-04-15 09:56:36,914:INFO:              sktime: 0.26.1
2024-04-15 09:56:36,914:INFO:               tbats: 1.1.3
2024-04-15 09:56:36,914:INFO:            pmdarima: 2.0.4
2024-04-15 09:56:36,914:INFO:              psutil: 5.8.0
2024-04-15 09:56:36,914:INFO:          markupsafe: 2.0.1
2024-04-15 09:56:36,914:INFO:             pickle5: Not installed
2024-04-15 09:56:36,914:INFO:         cloudpickle: 2.0.0
2024-04-15 09:56:36,914:INFO:         deprecation: 2.1.0
2024-04-15 09:56:36,914:INFO:              xxhash: 3.4.1
2024-04-15 09:56:36,914:INFO:           wurlitzer: Not installed
2024-04-15 09:56:36,914:INFO:PyCaret optional dependencies:
2024-04-15 09:56:36,926:INFO:                shap: Not installed
2024-04-15 09:56:36,926:INFO:           interpret: Not installed
2024-04-15 09:56:36,926:INFO:                umap: Not installed
2024-04-15 09:56:36,926:INFO:     ydata_profiling: Not installed
2024-04-15 09:56:36,926:INFO:  explainerdashboard: Not installed
2024-04-15 09:56:36,926:INFO:             autoviz: Not installed
2024-04-15 09:56:36,926:INFO:           fairlearn: Not installed
2024-04-15 09:56:36,926:INFO:          deepchecks: Not installed
2024-04-15 09:56:36,926:INFO:             xgboost: Not installed
2024-04-15 09:56:36,926:INFO:            catboost: Not installed
2024-04-15 09:56:36,926:INFO:              kmodes: Not installed
2024-04-15 09:56:36,926:INFO:             mlxtend: 0.23.1
2024-04-15 09:56:36,926:INFO:       statsforecast: Not installed
2024-04-15 09:56:36,926:INFO:        tune_sklearn: Not installed
2024-04-15 09:56:36,926:INFO:                 ray: Not installed
2024-04-15 09:56:36,927:INFO:            hyperopt: Not installed
2024-04-15 09:56:36,927:INFO:              optuna: Not installed
2024-04-15 09:56:36,927:INFO:               skopt: Not installed
2024-04-15 09:56:36,927:INFO:              mlflow: Not installed
2024-04-15 09:56:36,927:INFO:              gradio: Not installed
2024-04-15 09:56:36,927:INFO:             fastapi: Not installed
2024-04-15 09:56:36,927:INFO:             uvicorn: Not installed
2024-04-15 09:56:36,927:INFO:              m2cgen: Not installed
2024-04-15 09:56:36,927:INFO:           evidently: Not installed
2024-04-15 09:56:36,927:INFO:               fugue: Not installed
2024-04-15 09:56:36,927:INFO:           streamlit: 1.32.2
2024-04-15 09:56:36,927:INFO:             prophet: Not installed
2024-04-15 09:56:36,927:INFO:None
2024-04-15 09:56:36,927:INFO:Set up data.
2024-04-15 09:56:36,938:INFO:Set up folding strategy.
2024-04-15 09:56:36,938:INFO:Set up train/test split.
2024-04-15 09:56:36,950:INFO:Set up index.
2024-04-15 09:56:36,950:INFO:Assigning column types.
2024-04-15 09:56:36,953:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-15 09:56:36,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:56:37,001:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:56:37,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:56:37,081:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:56:37,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,110:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-15 09:56:37,153:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:56:37,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,226:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:56:37,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,254:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-15 09:56:37,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:37,399:INFO:Preparing preprocessing pipeline...
2024-04-15 09:56:37,401:INFO:Set up label encoding.
2024-04-15 09:56:37,401:INFO:Set up simple imputation.
2024-04-15 09:56:37,405:INFO:Set up encoding of ordinal features.
2024-04-15 09:56:37,414:INFO:Set up encoding of categorical features.
2024-04-15 09:56:37,506:INFO:Finished creating preprocessing pipeline.
2024-04-15 09:56:37,594:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifet...
                                                                        {'col': 'zipconvert4',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'zipconvert5',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'homeowner',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'female',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False)
2024-04-15 09:56:37,594:INFO:Creating final display dataframe.
2024-04-15 09:56:37,912:INFO:Setup _display_container:                     Description                  Value
0                    Session id                     27
1                        Target                 target
2                   Target type                 Binary
3                Target mapping  Donor: 0, No Donor: 1
4           Original data shape             (3000, 21)
5        Transformed data shape             (3000, 21)
6   Transformed train set shape             (2100, 21)
7    Transformed test set shape              (900, 21)
8              Numeric features                     14
9          Categorical features                      6
10                   Preprocess                   True
11              Imputation type                 simple
12           Numeric imputation                   mean
13       Categorical imputation                   mode
14     Maximum one-hot encoding                     25
15              Encoding method                   None
16               Fold Generator        StratifiedKFold
17                  Fold Number                     10
18                     CPU Jobs                     -1
19                      Use GPU                  False
20               Log Experiment                  False
21              Experiment Name       clf-default-name
22                          USI                   b9a0
2024-04-15 09:56:38,002:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:38,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:38,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:38,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:38,076:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-15 09:56:38,078:INFO:setup() successfully completed in 1.41s...............
2024-04-15 09:56:41,917:INFO:PyCaret ClassificationExperiment
2024-04-15 09:56:41,917:INFO:Logging name: clf-default-name
2024-04-15 09:56:41,917:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-15 09:56:41,917:INFO:version 3.3.0
2024-04-15 09:56:41,917:INFO:Initializing setup()
2024-04-15 09:56:41,917:INFO:self.USI: c212
2024-04-15 09:56:41,917:INFO:self._variable_keys: {'y', 'y_test', 'log_plots_param', 'USI', 'X_test', 'fold_generator', 'fold_groups_param', 'pipeline', 'logging_param', 'fix_imbalance', 'y_train', 'idx', 'X_train', 'exp_name_log', 'exp_id', 'seed', 'gpu_n_jobs_param', 'html_param', 'fold_shuffle_param', 'n_jobs_param', '_available_plots', 'is_multiclass', 'memory', 'X', '_ml_usecase', 'target_param', 'data', 'gpu_param'}
2024-04-15 09:56:41,917:INFO:Checking environment
2024-04-15 09:56:41,917:INFO:python_version: 3.9.12
2024-04-15 09:56:41,917:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-15 09:56:41,917:INFO:machine: AMD64
2024-04-15 09:56:41,917:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-15 09:56:41,921:INFO:Memory: svmem(total=8376537088, available=2562457600, percent=69.4, used=5814079488, free=2562457600)
2024-04-15 09:56:41,921:INFO:Physical Core: 4
2024-04-15 09:56:41,921:INFO:Logical Core: 8
2024-04-15 09:56:41,921:INFO:Checking libraries
2024-04-15 09:56:41,921:INFO:System:
2024-04-15 09:56:41,921:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-15 09:56:41,921:INFO:executable: C:\Users\dansc\Anaconda3\python.exe
2024-04-15 09:56:41,921:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-15 09:56:41,921:INFO:PyCaret required dependencies:
2024-04-15 09:56:41,921:INFO:                 pip: 21.2.4
2024-04-15 09:56:41,921:INFO:          setuptools: 61.2.0
2024-04-15 09:56:41,921:INFO:             pycaret: 3.3.0
2024-04-15 09:56:41,921:INFO:             IPython: 8.2.0
2024-04-15 09:56:41,921:INFO:          ipywidgets: 7.6.5
2024-04-15 09:56:41,921:INFO:                tqdm: 4.64.0
2024-04-15 09:56:41,921:INFO:               numpy: 1.24.4
2024-04-15 09:56:41,921:INFO:              pandas: 1.5.3
2024-04-15 09:56:41,921:INFO:              jinja2: 2.11.3
2024-04-15 09:56:41,921:INFO:               scipy: 1.11.4
2024-04-15 09:56:41,921:INFO:              joblib: 1.1.0
2024-04-15 09:56:41,921:INFO:             sklearn: 1.0.2
2024-04-15 09:56:41,921:INFO:                pyod: 1.1.3
2024-04-15 09:56:41,921:INFO:            imblearn: 0.12.0
2024-04-15 09:56:41,921:INFO:   category_encoders: 2.6.3
2024-04-15 09:56:41,921:INFO:            lightgbm: 4.3.0
2024-04-15 09:56:41,921:INFO:               numba: 0.55.1
2024-04-15 09:56:41,921:INFO:            requests: 2.27.1
2024-04-15 09:56:41,921:INFO:          matplotlib: 3.8.0
2024-04-15 09:56:41,921:INFO:          scikitplot: 0.3.7
2024-04-15 09:56:41,922:INFO:         yellowbrick: 1.5
2024-04-15 09:56:41,922:INFO:              plotly: 5.6.0
2024-04-15 09:56:41,922:INFO:    plotly-resampler: Not installed
2024-04-15 09:56:41,922:INFO:             kaleido: 0.2.1
2024-04-15 09:56:41,922:INFO:           schemdraw: 0.15
2024-04-15 09:56:41,922:INFO:         statsmodels: 0.14.0
2024-04-15 09:56:41,922:INFO:              sktime: 0.26.1
2024-04-15 09:56:41,922:INFO:               tbats: 1.1.3
2024-04-15 09:56:41,922:INFO:            pmdarima: 2.0.4
2024-04-15 09:56:41,922:INFO:              psutil: 5.8.0
2024-04-15 09:56:41,922:INFO:          markupsafe: 2.0.1
2024-04-15 09:56:41,922:INFO:             pickle5: Not installed
2024-04-15 09:56:41,922:INFO:         cloudpickle: 2.0.0
2024-04-15 09:56:41,924:INFO:         deprecation: 2.1.0
2024-04-15 09:56:41,924:INFO:              xxhash: 3.4.1
2024-04-15 09:56:41,924:INFO:           wurlitzer: Not installed
2024-04-15 09:56:41,924:INFO:PyCaret optional dependencies:
2024-04-15 09:56:41,924:INFO:                shap: Not installed
2024-04-15 09:56:41,924:INFO:           interpret: Not installed
2024-04-15 09:56:41,924:INFO:                umap: Not installed
2024-04-15 09:56:41,924:INFO:     ydata_profiling: Not installed
2024-04-15 09:56:41,924:INFO:  explainerdashboard: Not installed
2024-04-15 09:56:41,924:INFO:             autoviz: Not installed
2024-04-15 09:56:41,924:INFO:           fairlearn: Not installed
2024-04-15 09:56:41,924:INFO:          deepchecks: Not installed
2024-04-15 09:56:41,924:INFO:             xgboost: Not installed
2024-04-15 09:56:41,925:INFO:            catboost: Not installed
2024-04-15 09:56:41,925:INFO:              kmodes: Not installed
2024-04-15 09:56:41,925:INFO:             mlxtend: 0.23.1
2024-04-15 09:56:41,925:INFO:       statsforecast: Not installed
2024-04-15 09:56:41,925:INFO:        tune_sklearn: Not installed
2024-04-15 09:56:41,925:INFO:                 ray: Not installed
2024-04-15 09:56:41,925:INFO:            hyperopt: Not installed
2024-04-15 09:56:41,925:INFO:              optuna: Not installed
2024-04-15 09:56:41,925:INFO:               skopt: Not installed
2024-04-15 09:56:41,925:INFO:              mlflow: Not installed
2024-04-15 09:56:41,926:INFO:              gradio: Not installed
2024-04-15 09:56:41,926:INFO:             fastapi: Not installed
2024-04-15 09:56:41,926:INFO:             uvicorn: Not installed
2024-04-15 09:56:41,927:INFO:              m2cgen: Not installed
2024-04-15 09:56:41,927:INFO:           evidently: Not installed
2024-04-15 09:56:41,927:INFO:               fugue: Not installed
2024-04-15 09:56:41,929:INFO:           streamlit: 1.32.2
2024-04-15 09:56:41,929:INFO:             prophet: Not installed
2024-04-15 09:56:41,929:INFO:None
2024-04-15 09:56:41,929:INFO:Set up data.
2024-04-15 09:56:41,939:INFO:Set up folding strategy.
2024-04-15 09:56:41,939:INFO:Set up train/test split.
2024-04-15 09:56:41,949:INFO:Set up index.
2024-04-15 09:56:41,949:INFO:Assigning column types.
2024-04-15 09:56:41,953:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-15 09:56:42,004:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:56:42,005:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:56:42,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,030:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,068:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 09:56:42,069:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:56:42,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,094:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-15 09:56:42,134:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:56:42,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,199:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-15 09:56:42,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,224:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-15 09:56:42,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,357:INFO:Preparing preprocessing pipeline...
2024-04-15 09:56:42,358:INFO:Set up label encoding.
2024-04-15 09:56:42,358:INFO:Set up simple imputation.
2024-04-15 09:56:42,363:INFO:Set up encoding of ordinal features.
2024-04-15 09:56:42,371:INFO:Set up encoding of categorical features.
2024-04-15 09:56:42,449:INFO:Finished creating preprocessing pipeline.
2024-04-15 09:56:42,528:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifet...
                                                                        {'col': 'zipconvert4',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'zipconvert5',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'homeowner',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'female',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False)
2024-04-15 09:56:42,528:INFO:Creating final display dataframe.
2024-04-15 09:56:42,763:INFO:Setup _display_container:                     Description                  Value
0                    Session id                     27
1                        Target                 target
2                   Target type                 Binary
3                Target mapping  Donor: 0, No Donor: 1
4           Original data shape             (3000, 21)
5        Transformed data shape             (3000, 21)
6   Transformed train set shape             (2100, 21)
7    Transformed test set shape              (900, 21)
8              Numeric features                     14
9          Categorical features                      6
10                   Preprocess                   True
11              Imputation type                 simple
12           Numeric imputation                   mean
13       Categorical imputation                   mode
14     Maximum one-hot encoding                     25
15              Encoding method                   None
16               Fold Generator        StratifiedKFold
17                  Fold Number                     10
18                     CPU Jobs                     -1
19                      Use GPU                  False
20               Log Experiment                  False
21              Experiment Name       clf-default-name
22                          USI                   c212
2024-04-15 09:56:42,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-15 09:56:42,921:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-15 09:56:42,922:INFO:setup() successfully completed in 1.01s...............
2024-04-15 09:56:43,113:INFO:Initializing compare_models()
2024-04-15 09:56:43,113:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-15 09:56:43,113:INFO:Checking exceptions
2024-04-15 09:56:43,117:INFO:Preparing display monitor
2024-04-15 09:56:43,120:INFO:Initializing Logistic Regression
2024-04-15 09:56:43,120:INFO:Total runtime is 0.0 minutes
2024-04-15 09:56:43,120:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:43,121:INFO:Initializing create_model()
2024-04-15 09:56:43,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:43,121:INFO:Checking exceptions
2024-04-15 09:56:43,121:INFO:Importing libraries
2024-04-15 09:56:43,121:INFO:Copying training dataset
2024-04-15 09:56:43,127:INFO:Defining folds
2024-04-15 09:56:43,127:INFO:Declaring metric variables
2024-04-15 09:56:43,128:INFO:Importing untrained model
2024-04-15 09:56:43,128:INFO:Logistic Regression Imported successfully
2024-04-15 09:56:43,128:INFO:Starting cross validation
2024-04-15 09:56:43,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:50,958:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-15 09:56:51,018:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-15 09:56:51,054:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-15 09:56:51,059:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:51,082:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,090:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-15 09:56:51,091:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,092:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,099:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,105:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:51,111:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,119:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,128:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,142:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:51,149:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,157:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-15 09:56:51,158:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,166:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,185:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:51,192:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,200:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,231:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-15 09:56:51,243:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:51,250:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,258:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,258:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-15 09:56:51,265:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,303:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:51,309:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,316:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,322:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,322:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:51,327:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,332:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,338:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,601:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-15 09:56:51,621:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-15 09:56:51,641:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:51,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,648:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,658:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:51,661:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,664:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,668:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:51,687:INFO:Calculating mean and std
2024-04-15 09:56:51,688:INFO:Creating metrics dataframe
2024-04-15 09:56:51,691:INFO:Uploading results into container
2024-04-15 09:56:51,692:INFO:Uploading model into container now
2024-04-15 09:56:51,692:INFO:_master_model_container: 1
2024-04-15 09:56:51,692:INFO:_display_container: 2
2024-04-15 09:56:51,693:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-15 09:56:51,693:INFO:create_model() successfully completed......................................
2024-04-15 09:56:51,773:INFO:SubProcess create_model() end ==================================
2024-04-15 09:56:51,774:INFO:Creating metrics dataframe
2024-04-15 09:56:51,779:INFO:Initializing K Neighbors Classifier
2024-04-15 09:56:51,779:INFO:Total runtime is 0.1443229595820109 minutes
2024-04-15 09:56:51,779:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:51,779:INFO:Initializing create_model()
2024-04-15 09:56:51,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:51,779:INFO:Checking exceptions
2024-04-15 09:56:51,779:INFO:Importing libraries
2024-04-15 09:56:51,779:INFO:Copying training dataset
2024-04-15 09:56:51,785:INFO:Defining folds
2024-04-15 09:56:51,785:INFO:Declaring metric variables
2024-04-15 09:56:51,785:INFO:Importing untrained model
2024-04-15 09:56:51,785:INFO:K Neighbors Classifier Imported successfully
2024-04-15 09:56:51,786:INFO:Starting cross validation
2024-04-15 09:56:51,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:52,071:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,071:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,097:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,120:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,145:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,149:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,164:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,169:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,186:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,190:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,203:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,204:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,205:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,217:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,229:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,325:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,334:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,354:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,363:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,376:INFO:Calculating mean and std
2024-04-15 09:56:52,378:INFO:Creating metrics dataframe
2024-04-15 09:56:52,384:INFO:Uploading results into container
2024-04-15 09:56:52,386:INFO:Uploading model into container now
2024-04-15 09:56:52,386:INFO:_master_model_container: 2
2024-04-15 09:56:52,387:INFO:_display_container: 2
2024-04-15 09:56:52,387:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-15 09:56:52,387:INFO:create_model() successfully completed......................................
2024-04-15 09:56:52,482:WARNING:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 09:56:52,484:WARNING:Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 796, in compare_models
    assert (
AssertionError

2024-04-15 09:56:52,484:INFO:Initializing create_model()
2024-04-15 09:56:52,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:52,485:INFO:Checking exceptions
2024-04-15 09:56:52,485:INFO:Importing libraries
2024-04-15 09:56:52,485:INFO:Copying training dataset
2024-04-15 09:56:52,493:INFO:Defining folds
2024-04-15 09:56:52,493:INFO:Declaring metric variables
2024-04-15 09:56:52,493:INFO:Importing untrained model
2024-04-15 09:56:52,494:INFO:K Neighbors Classifier Imported successfully
2024-04-15 09:56:52,494:INFO:Starting cross validation
2024-04-15 09:56:52,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:52,775:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,805:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,820:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,823:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,829:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,851:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,853:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,864:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,865:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,867:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,873:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,881:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:52,894:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,895:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,905:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:52,912:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:53,003:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,021:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,022:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:53,039:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\model_selection\_validation.py:1011: UserWarning: Scoring failed. The score on this train-test partition for these parameters will be set to 0.0. Details: 
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 137, in __call__
    score = scorer._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 328, in predict
    y = self.steps[-1][-1].predict(X, **params)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_classification.py", line 271, in predict
    neigh_ind = self.kneighbors(X, return_distance=False)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\neighbors\_base.py", line 850, in kneighbors
    results = ArgKmin.compute(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_pairwise_distances_reduction\_dispatcher.py", line 278, in compute
    return ArgKmin64.compute(
  File "sklearn\\metrics\\_pairwise_distances_reduction\\_argkmin.pyx", line 90, in sklearn.metrics._pairwise_distances_reduction._argkmin.ArgKmin64.compute
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\fixes.py", line 94, in threadpool_limits
    return threadpoolctl.threadpool_limits(limits=limits, user_api=user_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 171, in __init__
    self._original_info = self._set_threadpool_limits()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 268, in _set_threadpool_limits
    modules = _ThreadpoolInfo(prefixes=self._prefixes,
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 340, in __init__
    self._load_modules()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 373, in _load_modules
    self._find_modules_with_enum_process_module_ex()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 485, in _find_modules_with_enum_process_module_ex
    self._make_module_from_path(filepath)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 515, in _make_module_from_path
    module = module_class(filepath, prefix, user_api, internal_api)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 606, in __init__
    self.version = self.get_version()
  File "C:\Users\dansc\Anaconda3\lib\site-packages\threadpoolctl.py", line 646, in get_version
    config = get_config().split()
AttributeError: 'NoneType' object has no attribute 'split'

  warnings.warn(

2024-04-15 09:56:53,055:INFO:Calculating mean and std
2024-04-15 09:56:53,056:INFO:Creating metrics dataframe
2024-04-15 09:56:53,061:INFO:Uploading results into container
2024-04-15 09:56:53,062:INFO:Uploading model into container now
2024-04-15 09:56:53,062:INFO:_master_model_container: 3
2024-04-15 09:56:53,062:INFO:_display_container: 2
2024-04-15 09:56:53,063:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-15 09:56:53,063:INFO:create_model() successfully completed......................................
2024-04-15 09:56:53,144:ERROR:create_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception or returned all 0.0:
2024-04-15 09:56:53,145:ERROR:Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 796, in compare_models
    assert (
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 817, in compare_models
    assert (
AssertionError

2024-04-15 09:56:53,145:INFO:Initializing Naive Bayes
2024-04-15 09:56:53,145:INFO:Total runtime is 0.16709421078364056 minutes
2024-04-15 09:56:53,145:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:53,146:INFO:Initializing create_model()
2024-04-15 09:56:53,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:53,146:INFO:Checking exceptions
2024-04-15 09:56:53,146:INFO:Importing libraries
2024-04-15 09:56:53,146:INFO:Copying training dataset
2024-04-15 09:56:53,155:INFO:Defining folds
2024-04-15 09:56:53,156:INFO:Declaring metric variables
2024-04-15 09:56:53,156:INFO:Importing untrained model
2024-04-15 09:56:53,156:INFO:Naive Bayes Imported successfully
2024-04-15 09:56:53,157:INFO:Starting cross validation
2024-04-15 09:56:53,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:53,441:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,442:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,443:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,445:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,446:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,447:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,453:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,454:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,456:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,460:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,462:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,467:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,490:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,494:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,503:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,511:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,514:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,519:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,526:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,530:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,530:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,535:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,539:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,543:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,544:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,546:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,548:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,550:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,552:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,561:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,561:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,569:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,683:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,687:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,692:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:53,694:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,695:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,699:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,702:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,703:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:53,714:INFO:Calculating mean and std
2024-04-15 09:56:53,715:INFO:Creating metrics dataframe
2024-04-15 09:56:53,721:INFO:Uploading results into container
2024-04-15 09:56:53,721:INFO:Uploading model into container now
2024-04-15 09:56:53,723:INFO:_master_model_container: 4
2024-04-15 09:56:53,723:INFO:_display_container: 2
2024-04-15 09:56:53,723:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-15 09:56:53,723:INFO:create_model() successfully completed......................................
2024-04-15 09:56:53,810:INFO:SubProcess create_model() end ==================================
2024-04-15 09:56:53,811:INFO:Creating metrics dataframe
2024-04-15 09:56:53,820:INFO:Initializing Decision Tree Classifier
2024-04-15 09:56:53,820:INFO:Total runtime is 0.17833254337310792 minutes
2024-04-15 09:56:53,820:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:53,821:INFO:Initializing create_model()
2024-04-15 09:56:53,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:53,821:INFO:Checking exceptions
2024-04-15 09:56:53,821:INFO:Importing libraries
2024-04-15 09:56:53,821:INFO:Copying training dataset
2024-04-15 09:56:53,829:INFO:Defining folds
2024-04-15 09:56:53,830:INFO:Declaring metric variables
2024-04-15 09:56:53,830:INFO:Importing untrained model
2024-04-15 09:56:53,831:INFO:Decision Tree Classifier Imported successfully
2024-04-15 09:56:53,832:INFO:Starting cross validation
2024-04-15 09:56:53,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:54,179:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,184:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,189:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,192:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,195:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,197:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,199:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,202:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,205:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,209:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,210:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,212:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,213:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,213:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,214:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,215:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,220:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,222:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,223:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,223:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,226:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,226:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,228:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,229:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,231:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,231:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,233:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,233:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,235:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,243:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,244:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,251:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,407:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,410:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,414:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,418:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,424:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:54,426:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,430:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,434:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,452:INFO:Calculating mean and std
2024-04-15 09:56:54,454:INFO:Creating metrics dataframe
2024-04-15 09:56:54,459:INFO:Uploading results into container
2024-04-15 09:56:54,460:INFO:Uploading model into container now
2024-04-15 09:56:54,461:INFO:_master_model_container: 5
2024-04-15 09:56:54,461:INFO:_display_container: 2
2024-04-15 09:56:54,462:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-15 09:56:54,462:INFO:create_model() successfully completed......................................
2024-04-15 09:56:54,544:INFO:SubProcess create_model() end ==================================
2024-04-15 09:56:54,545:INFO:Creating metrics dataframe
2024-04-15 09:56:54,554:INFO:Initializing SVM - Linear Kernel
2024-04-15 09:56:54,554:INFO:Total runtime is 0.19056594769159954 minutes
2024-04-15 09:56:54,554:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:54,554:INFO:Initializing create_model()
2024-04-15 09:56:54,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:54,555:INFO:Checking exceptions
2024-04-15 09:56:54,555:INFO:Importing libraries
2024-04-15 09:56:54,555:INFO:Copying training dataset
2024-04-15 09:56:54,562:INFO:Defining folds
2024-04-15 09:56:54,562:INFO:Declaring metric variables
2024-04-15 09:56:54,562:INFO:Importing untrained model
2024-04-15 09:56:54,563:INFO:SVM - Linear Kernel Imported successfully
2024-04-15 09:56:54,563:INFO:Starting cross validation
2024-04-15 09:56:54,565:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:54,927:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:54,927:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:54,931:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,931:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,931:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,939:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,939:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:54,940:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,943:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,944:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:54,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,948:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,951:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,955:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:56:54,955:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,959:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,960:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:54,960:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,963:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,964:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:54,964:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,968:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,972:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,976:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,981:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,987:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:54,990:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:54,994:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,001:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,006:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,138:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,141:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,146:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,150:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,159:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,161:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,165:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,168:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:56:55,171:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,185:INFO:Calculating mean and std
2024-04-15 09:56:55,186:INFO:Creating metrics dataframe
2024-04-15 09:56:55,192:INFO:Uploading results into container
2024-04-15 09:56:55,193:INFO:Uploading model into container now
2024-04-15 09:56:55,194:INFO:_master_model_container: 6
2024-04-15 09:56:55,194:INFO:_display_container: 2
2024-04-15 09:56:55,194:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-15 09:56:55,195:INFO:create_model() successfully completed......................................
2024-04-15 09:56:55,290:INFO:SubProcess create_model() end ==================================
2024-04-15 09:56:55,290:INFO:Creating metrics dataframe
2024-04-15 09:56:55,297:INFO:Initializing Ridge Classifier
2024-04-15 09:56:55,297:INFO:Total runtime is 0.20294638077418012 minutes
2024-04-15 09:56:55,297:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:55,297:INFO:Initializing create_model()
2024-04-15 09:56:55,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:55,297:INFO:Checking exceptions
2024-04-15 09:56:55,297:INFO:Importing libraries
2024-04-15 09:56:55,298:INFO:Copying training dataset
2024-04-15 09:56:55,302:INFO:Defining folds
2024-04-15 09:56:55,302:INFO:Declaring metric variables
2024-04-15 09:56:55,303:INFO:Importing untrained model
2024-04-15 09:56:55,303:INFO:Ridge Classifier Imported successfully
2024-04-15 09:56:55,303:INFO:Starting cross validation
2024-04-15 09:56:55,304:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:55,591:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,595:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,599:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,603:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,603:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,607:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,620:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,620:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,624:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,625:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,628:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,632:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,634:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,655:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,660:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,663:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,666:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,669:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,670:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,671:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,676:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,677:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,679:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,682:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,686:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,700:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,703:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,707:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,711:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,796:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,798:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 344, in _score
    response_method = _check_response_method(estimator, self._response_method)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\validation.py", line 2106, in _check_response_method
    raise AttributeError(
AttributeError: Pipeline has none of the following attributes: predict_proba.

  warnings.warn(

2024-04-15 09:56:55,798:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,800:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,802:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,804:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,807:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,809:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:55,830:INFO:Calculating mean and std
2024-04-15 09:56:55,831:INFO:Creating metrics dataframe
2024-04-15 09:56:55,835:INFO:Uploading results into container
2024-04-15 09:56:55,835:INFO:Uploading model into container now
2024-04-15 09:56:55,836:INFO:_master_model_container: 7
2024-04-15 09:56:55,836:INFO:_display_container: 2
2024-04-15 09:56:55,836:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-15 09:56:55,836:INFO:create_model() successfully completed......................................
2024-04-15 09:56:55,908:INFO:SubProcess create_model() end ==================================
2024-04-15 09:56:55,908:INFO:Creating metrics dataframe
2024-04-15 09:56:55,913:INFO:Initializing Random Forest Classifier
2024-04-15 09:56:55,913:INFO:Total runtime is 0.21321684122085574 minutes
2024-04-15 09:56:55,913:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:55,914:INFO:Initializing create_model()
2024-04-15 09:56:55,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:55,914:INFO:Checking exceptions
2024-04-15 09:56:55,914:INFO:Importing libraries
2024-04-15 09:56:55,914:INFO:Copying training dataset
2024-04-15 09:56:55,919:INFO:Defining folds
2024-04-15 09:56:55,919:INFO:Declaring metric variables
2024-04-15 09:56:55,919:INFO:Importing untrained model
2024-04-15 09:56:55,920:INFO:Random Forest Classifier Imported successfully
2024-04-15 09:56:55,920:INFO:Starting cross validation
2024-04-15 09:56:55,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:56,993:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:56,996:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,005:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,042:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:57,046:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,084:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,115:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,133:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:57,137:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,145:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,149:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:57,153:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,154:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,161:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,170:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,257:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:57,258:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:57,258:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:57,262:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,262:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,263:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,267:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,271:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,272:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,278:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,279:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,351:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:57,355:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,363:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,370:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,673:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:57,675:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,680:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,684:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,720:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:57,722:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,727:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,731:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:57,745:INFO:Calculating mean and std
2024-04-15 09:56:57,746:INFO:Creating metrics dataframe
2024-04-15 09:56:57,750:INFO:Uploading results into container
2024-04-15 09:56:57,750:INFO:Uploading model into container now
2024-04-15 09:56:57,751:INFO:_master_model_container: 8
2024-04-15 09:56:57,751:INFO:_display_container: 2
2024-04-15 09:56:57,751:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-15 09:56:57,751:INFO:create_model() successfully completed......................................
2024-04-15 09:56:57,832:INFO:SubProcess create_model() end ==================================
2024-04-15 09:56:57,832:INFO:Creating metrics dataframe
2024-04-15 09:56:57,838:INFO:Initializing Quadratic Discriminant Analysis
2024-04-15 09:56:57,838:INFO:Total runtime is 0.2452964504559835 minutes
2024-04-15 09:56:57,838:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:57,838:INFO:Initializing create_model()
2024-04-15 09:56:57,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:57,838:INFO:Checking exceptions
2024-04-15 09:56:57,839:INFO:Importing libraries
2024-04-15 09:56:57,839:INFO:Copying training dataset
2024-04-15 09:56:57,844:INFO:Defining folds
2024-04-15 09:56:57,844:INFO:Declaring metric variables
2024-04-15 09:56:57,844:INFO:Importing untrained model
2024-04-15 09:56:57,844:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-15 09:56:57,845:INFO:Starting cross validation
2024-04-15 09:56:57,846:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:58,063:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,067:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,070:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,071:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,082:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,091:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,126:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,150:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,160:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,163:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,166:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,167:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,168:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,168:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,173:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,173:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,174:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,179:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,182:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,183:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,183:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,187:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,188:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,188:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,191:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,193:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,198:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,205:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,214:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,220:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,245:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,248:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,249:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,253:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,258:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,261:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,266:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,371:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,376:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-15 09:56:58,424:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,427:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,430:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:58,433:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,434:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,438:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,448:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:58,468:INFO:Calculating mean and std
2024-04-15 09:56:58,470:INFO:Creating metrics dataframe
2024-04-15 09:56:58,476:INFO:Uploading results into container
2024-04-15 09:56:58,477:INFO:Uploading model into container now
2024-04-15 09:56:58,478:INFO:_master_model_container: 9
2024-04-15 09:56:58,478:INFO:_display_container: 2
2024-04-15 09:56:58,478:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-15 09:56:58,478:INFO:create_model() successfully completed......................................
2024-04-15 09:56:58,562:INFO:SubProcess create_model() end ==================================
2024-04-15 09:56:58,562:INFO:Creating metrics dataframe
2024-04-15 09:56:58,569:INFO:Initializing Ada Boost Classifier
2024-04-15 09:56:58,569:INFO:Total runtime is 0.2574814796447754 minutes
2024-04-15 09:56:58,569:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:58,569:INFO:Initializing create_model()
2024-04-15 09:56:58,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:58,570:INFO:Checking exceptions
2024-04-15 09:56:58,570:INFO:Importing libraries
2024-04-15 09:56:58,570:INFO:Copying training dataset
2024-04-15 09:56:58,576:INFO:Defining folds
2024-04-15 09:56:58,577:INFO:Declaring metric variables
2024-04-15 09:56:58,577:INFO:Importing untrained model
2024-04-15 09:56:58,577:INFO:Ada Boost Classifier Imported successfully
2024-04-15 09:56:58,578:INFO:Starting cross validation
2024-04-15 09:56:58,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:56:58,804:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:58,818:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:58,819:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:58,832:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:58,837:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:58,847:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:58,848:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:58,861:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:59,270:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,283:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,291:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,291:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,297:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,306:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,309:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,314:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,317:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,323:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,333:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,333:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,338:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,346:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,354:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,367:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,370:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,371:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,375:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,380:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,384:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,390:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,394:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,402:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,406:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,415:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,423:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,425:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,429:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,437:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,442:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,444:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:59,463:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:56:59,741:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,743:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,748:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,753:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,773:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:56:59,775:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,780:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,785:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:56:59,796:INFO:Calculating mean and std
2024-04-15 09:56:59,797:INFO:Creating metrics dataframe
2024-04-15 09:56:59,801:INFO:Uploading results into container
2024-04-15 09:56:59,802:INFO:Uploading model into container now
2024-04-15 09:56:59,802:INFO:_master_model_container: 10
2024-04-15 09:56:59,802:INFO:_display_container: 2
2024-04-15 09:56:59,802:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-15 09:56:59,802:INFO:create_model() successfully completed......................................
2024-04-15 09:56:59,883:INFO:SubProcess create_model() end ==================================
2024-04-15 09:56:59,883:INFO:Creating metrics dataframe
2024-04-15 09:56:59,889:INFO:Initializing Gradient Boosting Classifier
2024-04-15 09:56:59,890:INFO:Total runtime is 0.2794938445091248 minutes
2024-04-15 09:56:59,890:INFO:SubProcess create_model() called ==================================
2024-04-15 09:56:59,890:INFO:Initializing create_model()
2024-04-15 09:56:59,890:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:56:59,890:INFO:Checking exceptions
2024-04-15 09:56:59,890:INFO:Importing libraries
2024-04-15 09:56:59,890:INFO:Copying training dataset
2024-04-15 09:56:59,896:INFO:Defining folds
2024-04-15 09:56:59,897:INFO:Declaring metric variables
2024-04-15 09:56:59,897:INFO:Importing untrained model
2024-04-15 09:56:59,897:INFO:Gradient Boosting Classifier Imported successfully
2024-04-15 09:56:59,898:INFO:Starting cross validation
2024-04-15 09:56:59,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:57:01,168:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:01,172:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,177:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:01,181:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,181:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,185:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:01,187:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:01,189:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,189:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,192:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,197:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,198:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,200:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,206:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,208:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,405:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:01,409:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,418:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,426:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,428:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:01,432:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,439:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:01,441:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:01,443:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,443:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,445:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,451:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,452:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,453:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,460:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:01,461:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,120:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,122:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,128:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,134:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,148:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,151:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,156:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,160:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,181:INFO:Calculating mean and std
2024-04-15 09:57:02,182:INFO:Creating metrics dataframe
2024-04-15 09:57:02,186:INFO:Uploading results into container
2024-04-15 09:57:02,187:INFO:Uploading model into container now
2024-04-15 09:57:02,187:INFO:_master_model_container: 11
2024-04-15 09:57:02,187:INFO:_display_container: 2
2024-04-15 09:57:02,188:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-15 09:57:02,188:INFO:create_model() successfully completed......................................
2024-04-15 09:57:02,272:INFO:SubProcess create_model() end ==================================
2024-04-15 09:57:02,272:INFO:Creating metrics dataframe
2024-04-15 09:57:02,278:INFO:Initializing Linear Discriminant Analysis
2024-04-15 09:57:02,278:INFO:Total runtime is 0.3193105419476827 minutes
2024-04-15 09:57:02,278:INFO:SubProcess create_model() called ==================================
2024-04-15 09:57:02,278:INFO:Initializing create_model()
2024-04-15 09:57:02,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:57:02,278:INFO:Checking exceptions
2024-04-15 09:57:02,278:INFO:Importing libraries
2024-04-15 09:57:02,278:INFO:Copying training dataset
2024-04-15 09:57:02,284:INFO:Defining folds
2024-04-15 09:57:02,284:INFO:Declaring metric variables
2024-04-15 09:57:02,285:INFO:Importing untrained model
2024-04-15 09:57:02,285:INFO:Linear Discriminant Analysis Imported successfully
2024-04-15 09:57:02,285:INFO:Starting cross validation
2024-04-15 09:57:02,287:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:57:02,550:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,550:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,554:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,554:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,562:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,562:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,562:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,566:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,570:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,574:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,576:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,580:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,580:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,583:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,588:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,588:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,589:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,590:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,592:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,594:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,596:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,597:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,602:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,603:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,611:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,613:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,615:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,618:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,623:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,629:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,751:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,751:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:02,755:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,755:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,761:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,761:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,765:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,765:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:02,774:INFO:Calculating mean and std
2024-04-15 09:57:02,775:INFO:Creating metrics dataframe
2024-04-15 09:57:02,779:INFO:Uploading results into container
2024-04-15 09:57:02,779:INFO:Uploading model into container now
2024-04-15 09:57:02,780:INFO:_master_model_container: 12
2024-04-15 09:57:02,780:INFO:_display_container: 2
2024-04-15 09:57:02,780:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-15 09:57:02,780:INFO:create_model() successfully completed......................................
2024-04-15 09:57:02,855:INFO:SubProcess create_model() end ==================================
2024-04-15 09:57:02,855:INFO:Creating metrics dataframe
2024-04-15 09:57:02,861:INFO:Initializing Extra Trees Classifier
2024-04-15 09:57:02,861:INFO:Total runtime is 0.3290137092272441 minutes
2024-04-15 09:57:02,862:INFO:SubProcess create_model() called ==================================
2024-04-15 09:57:02,862:INFO:Initializing create_model()
2024-04-15 09:57:02,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:57:02,862:INFO:Checking exceptions
2024-04-15 09:57:02,862:INFO:Importing libraries
2024-04-15 09:57:02,862:INFO:Copying training dataset
2024-04-15 09:57:02,867:INFO:Defining folds
2024-04-15 09:57:02,867:INFO:Declaring metric variables
2024-04-15 09:57:02,867:INFO:Importing untrained model
2024-04-15 09:57:02,868:INFO:Extra Trees Classifier Imported successfully
2024-04-15 09:57:02,868:INFO:Starting cross validation
2024-04-15 09:57:02,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:57:03,776:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:03,781:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,783:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:03,787:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,790:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,795:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,798:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,804:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,878:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:03,883:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,885:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:03,891:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,891:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,900:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,905:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,918:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,937:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:03,937:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:03,940:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,942:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,950:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:03,952:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,960:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:03,966:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:04,010:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:04,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:04,017:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:04,023:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:04,308:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:04,308:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:04,310:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:04,310:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:04,315:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:04,315:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:04,319:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:04,334:INFO:Calculating mean and std
2024-04-15 09:57:04,335:INFO:Creating metrics dataframe
2024-04-15 09:57:04,339:INFO:Uploading results into container
2024-04-15 09:57:04,339:INFO:Uploading model into container now
2024-04-15 09:57:04,340:INFO:_master_model_container: 13
2024-04-15 09:57:04,340:INFO:_display_container: 2
2024-04-15 09:57:04,340:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-15 09:57:04,340:INFO:create_model() successfully completed......................................
2024-04-15 09:57:04,411:INFO:SubProcess create_model() end ==================================
2024-04-15 09:57:04,411:INFO:Creating metrics dataframe
2024-04-15 09:57:04,417:INFO:Initializing Light Gradient Boosting Machine
2024-04-15 09:57:04,417:INFO:Total runtime is 0.3549483418464661 minutes
2024-04-15 09:57:04,417:INFO:SubProcess create_model() called ==================================
2024-04-15 09:57:04,418:INFO:Initializing create_model()
2024-04-15 09:57:04,418:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:57:04,418:INFO:Checking exceptions
2024-04-15 09:57:04,418:INFO:Importing libraries
2024-04-15 09:57:04,418:INFO:Copying training dataset
2024-04-15 09:57:04,422:INFO:Defining folds
2024-04-15 09:57:04,423:INFO:Declaring metric variables
2024-04-15 09:57:04,423:INFO:Importing untrained model
2024-04-15 09:57:04,423:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-15 09:57:04,423:INFO:Starting cross validation
2024-04-15 09:57:04,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:57:05,493:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:05,494:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:05,497:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:05,497:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,498:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,501:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,505:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,505:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,510:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,514:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,518:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,524:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:05,529:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,536:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,545:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,643:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:05,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,655:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,663:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,754:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:05,758:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,768:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,776:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,783:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:05,787:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,795:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,801:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:05,803:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,805:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,813:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:05,820:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,112:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,115:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,115:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,119:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,122:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,125:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,129:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,133:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,154:INFO:Calculating mean and std
2024-04-15 09:57:06,155:INFO:Creating metrics dataframe
2024-04-15 09:57:06,161:INFO:Uploading results into container
2024-04-15 09:57:06,161:INFO:Uploading model into container now
2024-04-15 09:57:06,162:INFO:_master_model_container: 14
2024-04-15 09:57:06,162:INFO:_display_container: 2
2024-04-15 09:57:06,163:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-15 09:57:06,163:INFO:create_model() successfully completed......................................
2024-04-15 09:57:06,259:INFO:SubProcess create_model() end ==================================
2024-04-15 09:57:06,259:INFO:Creating metrics dataframe
2024-04-15 09:57:06,264:INFO:Initializing Dummy Classifier
2024-04-15 09:57:06,264:INFO:Total runtime is 0.3857415835062663 minutes
2024-04-15 09:57:06,264:INFO:SubProcess create_model() called ==================================
2024-04-15 09:57:06,265:INFO:Initializing create_model()
2024-04-15 09:57:06,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024D3E476BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:57:06,265:INFO:Checking exceptions
2024-04-15 09:57:06,265:INFO:Importing libraries
2024-04-15 09:57:06,265:INFO:Copying training dataset
2024-04-15 09:57:06,271:INFO:Defining folds
2024-04-15 09:57:06,272:INFO:Declaring metric variables
2024-04-15 09:57:06,272:INFO:Importing untrained model
2024-04-15 09:57:06,272:INFO:Dummy Classifier Imported successfully
2024-04-15 09:57:06,272:INFO:Starting cross validation
2024-04-15 09:57:06,273:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 09:57:06,525:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,529:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,538:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,542:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,543:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,546:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,547:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,556:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,560:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,565:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,565:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,568:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,569:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,577:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,578:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,580:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,582:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,584:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,585:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,586:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,586:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,586:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,588:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,590:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,590:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,593:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,594:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,596:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,597:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,598:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,601:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,601:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,602:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,603:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,605:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,606:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,607:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,615:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,620:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,622:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,709:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,711:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,716:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,718:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,720:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,731:WARNING:C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\frame.py", line 762, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 329, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\dansc\Anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 568, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-15 09:57:06,733:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,737:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,739:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-15 09:57:06,742:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-15 09:57:06,752:INFO:Calculating mean and std
2024-04-15 09:57:06,753:INFO:Creating metrics dataframe
2024-04-15 09:57:06,756:INFO:Uploading results into container
2024-04-15 09:57:06,757:INFO:Uploading model into container now
2024-04-15 09:57:06,757:INFO:_master_model_container: 15
2024-04-15 09:57:06,757:INFO:_display_container: 2
2024-04-15 09:57:06,757:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-15 09:57:06,758:INFO:create_model() successfully completed......................................
2024-04-15 09:57:06,834:INFO:SubProcess create_model() end ==================================
2024-04-15 09:57:06,834:INFO:Creating metrics dataframe
2024-04-15 09:57:06,843:INFO:Initializing create_model()
2024-04-15 09:57:06,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024D3C90FF10>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 09:57:06,844:INFO:Checking exceptions
2024-04-15 09:57:06,845:INFO:Importing libraries
2024-04-15 09:57:06,845:INFO:Copying training dataset
2024-04-15 09:57:06,850:INFO:Defining folds
2024-04-15 09:57:06,850:INFO:Declaring metric variables
2024-04-15 09:57:06,850:INFO:Importing untrained model
2024-04-15 09:57:06,850:INFO:Declaring custom model
2024-04-15 09:57:06,851:INFO:Ada Boost Classifier Imported successfully
2024-04-15 09:57:06,852:INFO:Cross validation set to False
2024-04-15 09:57:06,852:INFO:Fitting Model
2024-04-15 09:57:06,918:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-15 09:57:07,082:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-15 09:57:07,082:INFO:create_model() successfully completed......................................
2024-04-15 09:57:07,165:INFO:_master_model_container: 15
2024-04-15 09:57:07,165:INFO:_display_container: 2
2024-04-15 09:57:07,166:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-15 09:57:07,166:INFO:compare_models() successfully completed......................................
2024-04-28 12:28:28,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:28:28,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:28:28,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:28:28,842:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-28 12:30:10,349:INFO:PyCaret ClassificationExperiment
2024-04-28 12:30:10,349:INFO:Logging name: clf-default-name
2024-04-28 12:30:10,349:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:30:10,349:INFO:version 3.3.1
2024-04-28 12:30:10,349:INFO:Initializing setup()
2024-04-28 12:30:10,349:INFO:self.USI: d6d1
2024-04-28 12:30:10,349:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 12:30:10,349:INFO:Checking environment
2024-04-28 12:30:10,349:INFO:python_version: 3.9.12
2024-04-28 12:30:10,349:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 12:30:10,349:INFO:machine: AMD64
2024-04-28 12:30:10,349:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 12:30:10,351:INFO:Memory: svmem(total=34282364928, available=25894285312, percent=24.5, used=8388079616, free=25894285312)
2024-04-28 12:30:10,352:INFO:Physical Core: 6
2024-04-28 12:30:10,352:INFO:Logical Core: 12
2024-04-28 12:30:10,352:INFO:Checking libraries
2024-04-28 12:30:10,352:INFO:System:
2024-04-28 12:30:10,352:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:30:10,352:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 12:30:10,352:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 12:30:10,352:INFO:PyCaret required dependencies:
2024-04-28 12:30:10,590:INFO:                 pip: 21.2.4
2024-04-28 12:30:10,590:INFO:          setuptools: 61.2.0
2024-04-28 12:30:10,590:INFO:             pycaret: 3.3.1
2024-04-28 12:30:10,591:INFO:             IPython: 8.2.0
2024-04-28 12:30:10,591:INFO:          ipywidgets: 7.6.5
2024-04-28 12:30:10,591:INFO:                tqdm: 4.64.0
2024-04-28 12:30:10,591:INFO:               numpy: 1.21.5
2024-04-28 12:30:10,591:INFO:              pandas: 1.4.2
2024-04-28 12:30:10,591:INFO:              jinja2: 2.11.3
2024-04-28 12:30:10,591:INFO:               scipy: 1.7.3
2024-04-28 12:30:10,591:INFO:              joblib: 1.3.2
2024-04-28 12:30:10,591:INFO:             sklearn: 1.4.0
2024-04-28 12:30:10,591:INFO:                pyod: 1.1.3
2024-04-28 12:30:10,591:INFO:            imblearn: 0.12.2
2024-04-28 12:30:10,591:INFO:   category_encoders: 2.6.3
2024-04-28 12:30:10,591:INFO:            lightgbm: 4.3.0
2024-04-28 12:30:10,591:INFO:               numba: 0.55.1
2024-04-28 12:30:10,591:INFO:            requests: 2.27.1
2024-04-28 12:30:10,591:INFO:          matplotlib: 3.5.1
2024-04-28 12:30:10,591:INFO:          scikitplot: 0.3.7
2024-04-28 12:30:10,591:INFO:         yellowbrick: 1.5
2024-04-28 12:30:10,591:INFO:              plotly: 5.6.0
2024-04-28 12:30:10,591:INFO:    plotly-resampler: Not installed
2024-04-28 12:30:10,591:INFO:             kaleido: 0.2.1
2024-04-28 12:30:10,591:INFO:           schemdraw: 0.15
2024-04-28 12:30:10,591:INFO:         statsmodels: 0.13.2
2024-04-28 12:30:10,591:INFO:              sktime: 0.26.0
2024-04-28 12:30:10,591:INFO:               tbats: 1.1.3
2024-04-28 12:30:10,591:INFO:            pmdarima: 2.0.4
2024-04-28 12:30:10,591:INFO:              psutil: 5.9.8
2024-04-28 12:30:10,591:INFO:          markupsafe: 2.0.1
2024-04-28 12:30:10,591:INFO:             pickle5: Not installed
2024-04-28 12:30:10,591:INFO:         cloudpickle: 2.0.0
2024-04-28 12:30:10,592:INFO:         deprecation: 2.1.0
2024-04-28 12:30:10,592:INFO:              xxhash: 3.4.1
2024-04-28 12:30:10,592:INFO:           wurlitzer: Not installed
2024-04-28 12:30:10,592:INFO:PyCaret optional dependencies:
2024-04-28 12:30:10,603:INFO:                shap: Not installed
2024-04-28 12:30:10,603:INFO:           interpret: Not installed
2024-04-28 12:30:10,603:INFO:                umap: Not installed
2024-04-28 12:30:10,603:INFO:     ydata_profiling: Not installed
2024-04-28 12:30:10,603:INFO:  explainerdashboard: Not installed
2024-04-28 12:30:10,604:INFO:             autoviz: Not installed
2024-04-28 12:30:10,604:INFO:           fairlearn: Not installed
2024-04-28 12:30:10,604:INFO:          deepchecks: Not installed
2024-04-28 12:30:10,604:INFO:             xgboost: Not installed
2024-04-28 12:30:10,604:INFO:            catboost: Not installed
2024-04-28 12:30:10,604:INFO:              kmodes: Not installed
2024-04-28 12:30:10,604:INFO:             mlxtend: 0.23.1
2024-04-28 12:30:10,604:INFO:       statsforecast: Not installed
2024-04-28 12:30:10,604:INFO:        tune_sklearn: Not installed
2024-04-28 12:30:10,604:INFO:                 ray: Not installed
2024-04-28 12:30:10,604:INFO:            hyperopt: Not installed
2024-04-28 12:30:10,604:INFO:              optuna: 3.6.1
2024-04-28 12:30:10,604:INFO:               skopt: Not installed
2024-04-28 12:30:10,604:INFO:              mlflow: Not installed
2024-04-28 12:30:10,604:INFO:              gradio: Not installed
2024-04-28 12:30:10,604:INFO:             fastapi: Not installed
2024-04-28 12:30:10,604:INFO:             uvicorn: Not installed
2024-04-28 12:30:10,604:INFO:              m2cgen: Not installed
2024-04-28 12:30:10,604:INFO:           evidently: Not installed
2024-04-28 12:30:10,604:INFO:               fugue: Not installed
2024-04-28 12:30:10,604:INFO:           streamlit: 1.31.1
2024-04-28 12:30:10,604:INFO:             prophet: Not installed
2024-04-28 12:30:10,604:INFO:None
2024-04-28 12:30:10,604:INFO:Set up data.
2024-04-28 12:30:10,612:INFO:Set up folding strategy.
2024-04-28 12:30:10,612:INFO:Set up train/test split.
2024-04-28 12:30:10,619:INFO:Set up index.
2024-04-28 12:30:10,619:INFO:Assigning column types.
2024-04-28 12:30:10,623:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:30:10,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:30:10,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:10,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:10,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:10,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:30:10,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:10,773:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:10,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:10,773:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:30:10,818:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:10,845:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:10,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:10,888:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:10,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:10,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:10,915:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:30:10,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:10,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,066:INFO:Preparing preprocessing pipeline...
2024-04-28 12:30:11,067:INFO:Set up label encoding.
2024-04-28 12:30:11,067:INFO:Set up simple imputation.
2024-04-28 12:30:11,070:INFO:Set up encoding of ordinal features.
2024-04-28 12:30:11,076:INFO:Set up encoding of categorical features.
2024-04-28 12:30:11,149:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:30:11,192:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifet...
                                                                        {'col': 'zipconvert4',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'zipconvert5',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'homeowner',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'female',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False)
2024-04-28 12:30:11,192:INFO:Creating final display dataframe.
2024-04-28 12:30:11,394:INFO:Setup _display_container:                     Description                  Value
0                    Session id                     27
1                        Target                 target
2                   Target type                 Binary
3                Target mapping  Donor: 0, No Donor: 1
4           Original data shape             (3000, 21)
5        Transformed data shape             (3000, 21)
6   Transformed train set shape             (2100, 21)
7    Transformed test set shape              (900, 21)
8              Numeric features                     14
9          Categorical features                      6
10                   Preprocess                   True
11              Imputation type                 simple
12           Numeric imputation                   mean
13       Categorical imputation                   mode
14     Maximum one-hot encoding                     25
15              Encoding method                   None
16               Fold Generator        StratifiedKFold
17                  Fold Number                     10
18                     CPU Jobs                     -1
19                      Use GPU                  False
20               Log Experiment                  False
21              Experiment Name       clf-default-name
22                          USI                   d6d1
2024-04-28 12:30:11,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,547:INFO:setup() successfully completed in 1.2s...............
2024-04-28 12:30:11,548:INFO:PyCaret ClassificationExperiment
2024-04-28 12:30:11,548:INFO:Logging name: clf-default-name
2024-04-28 12:30:11,548:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:30:11,549:INFO:version 3.3.1
2024-04-28 12:30:11,549:INFO:Initializing setup()
2024-04-28 12:30:11,549:INFO:self.USI: 7410
2024-04-28 12:30:11,549:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 12:30:11,549:INFO:Checking environment
2024-04-28 12:30:11,549:INFO:python_version: 3.9.12
2024-04-28 12:30:11,549:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 12:30:11,549:INFO:machine: AMD64
2024-04-28 12:30:11,549:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 12:30:11,551:INFO:Memory: svmem(total=34282364928, available=25886769152, percent=24.5, used=8395595776, free=25886769152)
2024-04-28 12:30:11,551:INFO:Physical Core: 6
2024-04-28 12:30:11,551:INFO:Logical Core: 12
2024-04-28 12:30:11,551:INFO:Checking libraries
2024-04-28 12:30:11,551:INFO:System:
2024-04-28 12:30:11,551:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:30:11,551:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 12:30:11,551:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 12:30:11,551:INFO:PyCaret required dependencies:
2024-04-28 12:30:11,552:INFO:                 pip: 21.2.4
2024-04-28 12:30:11,552:INFO:          setuptools: 61.2.0
2024-04-28 12:30:11,552:INFO:             pycaret: 3.3.1
2024-04-28 12:30:11,552:INFO:             IPython: 8.2.0
2024-04-28 12:30:11,552:INFO:          ipywidgets: 7.6.5
2024-04-28 12:30:11,552:INFO:                tqdm: 4.64.0
2024-04-28 12:30:11,552:INFO:               numpy: 1.21.5
2024-04-28 12:30:11,552:INFO:              pandas: 1.4.2
2024-04-28 12:30:11,552:INFO:              jinja2: 2.11.3
2024-04-28 12:30:11,552:INFO:               scipy: 1.7.3
2024-04-28 12:30:11,552:INFO:              joblib: 1.3.2
2024-04-28 12:30:11,552:INFO:             sklearn: 1.4.0
2024-04-28 12:30:11,552:INFO:                pyod: 1.1.3
2024-04-28 12:30:11,552:INFO:            imblearn: 0.12.2
2024-04-28 12:30:11,552:INFO:   category_encoders: 2.6.3
2024-04-28 12:30:11,552:INFO:            lightgbm: 4.3.0
2024-04-28 12:30:11,552:INFO:               numba: 0.55.1
2024-04-28 12:30:11,552:INFO:            requests: 2.27.1
2024-04-28 12:30:11,552:INFO:          matplotlib: 3.5.1
2024-04-28 12:30:11,552:INFO:          scikitplot: 0.3.7
2024-04-28 12:30:11,552:INFO:         yellowbrick: 1.5
2024-04-28 12:30:11,552:INFO:              plotly: 5.6.0
2024-04-28 12:30:11,552:INFO:    plotly-resampler: Not installed
2024-04-28 12:30:11,552:INFO:             kaleido: 0.2.1
2024-04-28 12:30:11,552:INFO:           schemdraw: 0.15
2024-04-28 12:30:11,552:INFO:         statsmodels: 0.13.2
2024-04-28 12:30:11,552:INFO:              sktime: 0.26.0
2024-04-28 12:30:11,553:INFO:               tbats: 1.1.3
2024-04-28 12:30:11,553:INFO:            pmdarima: 2.0.4
2024-04-28 12:30:11,553:INFO:              psutil: 5.9.8
2024-04-28 12:30:11,553:INFO:          markupsafe: 2.0.1
2024-04-28 12:30:11,553:INFO:             pickle5: Not installed
2024-04-28 12:30:11,553:INFO:         cloudpickle: 2.0.0
2024-04-28 12:30:11,553:INFO:         deprecation: 2.1.0
2024-04-28 12:30:11,553:INFO:              xxhash: 3.4.1
2024-04-28 12:30:11,553:INFO:           wurlitzer: Not installed
2024-04-28 12:30:11,553:INFO:PyCaret optional dependencies:
2024-04-28 12:30:11,553:INFO:                shap: Not installed
2024-04-28 12:30:11,553:INFO:           interpret: Not installed
2024-04-28 12:30:11,553:INFO:                umap: Not installed
2024-04-28 12:30:11,553:INFO:     ydata_profiling: Not installed
2024-04-28 12:30:11,553:INFO:  explainerdashboard: Not installed
2024-04-28 12:30:11,553:INFO:             autoviz: Not installed
2024-04-28 12:30:11,553:INFO:           fairlearn: Not installed
2024-04-28 12:30:11,553:INFO:          deepchecks: Not installed
2024-04-28 12:30:11,553:INFO:             xgboost: Not installed
2024-04-28 12:30:11,553:INFO:            catboost: Not installed
2024-04-28 12:30:11,553:INFO:              kmodes: Not installed
2024-04-28 12:30:11,553:INFO:             mlxtend: 0.23.1
2024-04-28 12:30:11,553:INFO:       statsforecast: Not installed
2024-04-28 12:30:11,553:INFO:        tune_sklearn: Not installed
2024-04-28 12:30:11,553:INFO:                 ray: Not installed
2024-04-28 12:30:11,553:INFO:            hyperopt: Not installed
2024-04-28 12:30:11,553:INFO:              optuna: 3.6.1
2024-04-28 12:30:11,553:INFO:               skopt: Not installed
2024-04-28 12:30:11,553:INFO:              mlflow: Not installed
2024-04-28 12:30:11,553:INFO:              gradio: Not installed
2024-04-28 12:30:11,554:INFO:             fastapi: Not installed
2024-04-28 12:30:11,554:INFO:             uvicorn: Not installed
2024-04-28 12:30:11,554:INFO:              m2cgen: Not installed
2024-04-28 12:30:11,554:INFO:           evidently: Not installed
2024-04-28 12:30:11,554:INFO:               fugue: Not installed
2024-04-28 12:30:11,554:INFO:           streamlit: 1.31.1
2024-04-28 12:30:11,554:INFO:             prophet: Not installed
2024-04-28 12:30:11,554:INFO:None
2024-04-28 12:30:11,554:INFO:Set up data.
2024-04-28 12:30:11,561:INFO:Set up folding strategy.
2024-04-28 12:30:11,561:INFO:Set up train/test split.
2024-04-28 12:30:11,566:INFO:Set up index.
2024-04-28 12:30:11,566:INFO:Assigning column types.
2024-04-28 12:30:11,569:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:30:11,613:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:30:11,614:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:11,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:30:11,686:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:11,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,714:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:30:11,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:11,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:11,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,860:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:30:11,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:11,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:12,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:12,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:12,004:INFO:Preparing preprocessing pipeline...
2024-04-28 12:30:12,005:INFO:Set up label encoding.
2024-04-28 12:30:12,005:INFO:Set up simple imputation.
2024-04-28 12:30:12,008:INFO:Set up encoding of ordinal features.
2024-04-28 12:30:12,014:INFO:Set up encoding of categorical features.
2024-04-28 12:30:12,077:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:30:12,118:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifet...
                                                                        {'col': 'zipconvert4',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'zipconvert5',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'homeowner',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'female',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False)
2024-04-28 12:30:12,118:INFO:Creating final display dataframe.
2024-04-28 12:30:12,315:INFO:Setup _display_container:                     Description                  Value
0                    Session id                     27
1                        Target                 target
2                   Target type                 Binary
3                Target mapping  Donor: 0, No Donor: 1
4           Original data shape             (3000, 21)
5        Transformed data shape             (3000, 21)
6   Transformed train set shape             (2100, 21)
7    Transformed test set shape              (900, 21)
8              Numeric features                     14
9          Categorical features                      6
10                   Preprocess                   True
11              Imputation type                 simple
12           Numeric imputation                   mean
13       Categorical imputation                   mode
14     Maximum one-hot encoding                     25
15              Encoding method                   None
16               Fold Generator        StratifiedKFold
17                  Fold Number                     10
18                     CPU Jobs                     -1
19                      Use GPU                  False
20               Log Experiment                  False
21              Experiment Name       clf-default-name
22                          USI                   7410
2024-04-28 12:30:12,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:12,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:12,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:12,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:12,471:INFO:setup() successfully completed in 0.92s...............
2024-04-28 12:30:12,471:INFO:Initializing compare_models()
2024-04-28 12:30:12,472:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 12:30:12,472:INFO:Checking exceptions
2024-04-28 12:30:12,474:INFO:Preparing display monitor
2024-04-28 12:30:12,501:INFO:Initializing Logistic Regression
2024-04-28 12:30:12,501:INFO:Total runtime is 0.0 minutes
2024-04-28 12:30:12,503:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:12,503:INFO:Initializing create_model()
2024-04-28 12:30:12,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE01CB14F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:12,504:INFO:Checking exceptions
2024-04-28 12:30:12,504:INFO:Importing libraries
2024-04-28 12:30:12,504:INFO:Copying training dataset
2024-04-28 12:30:12,508:INFO:Defining folds
2024-04-28 12:30:12,508:INFO:Declaring metric variables
2024-04-28 12:30:12,510:INFO:Importing untrained model
2024-04-28 12:30:12,513:INFO:Logistic Regression Imported successfully
2024-04-28 12:30:12,518:INFO:Starting cross validation
2024-04-28 12:30:12,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:19,789:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:19,790:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:19,792:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:19,793:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:19,795:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:19,795:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:19,802:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:19,804:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:19,838:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,839:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,839:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,839:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,839:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,839:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,842:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,843:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,843:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,843:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,844:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,847:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,847:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,848:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,848:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,848:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,848:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,848:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,848:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,853:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,855:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,855:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,856:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,860:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,861:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,864:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,866:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:19,879:INFO:Calculating mean and std
2024-04-28 12:30:19,882:INFO:Creating metrics dataframe
2024-04-28 12:30:19,886:INFO:Uploading results into container
2024-04-28 12:30:19,887:INFO:Uploading model into container now
2024-04-28 12:30:19,888:INFO:_master_model_container: 1
2024-04-28 12:30:19,888:INFO:_display_container: 2
2024-04-28 12:30:19,888:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:30:19,889:INFO:create_model() successfully completed......................................
2024-04-28 12:30:20,055:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:20,055:INFO:Creating metrics dataframe
2024-04-28 12:30:20,061:INFO:Initializing K Neighbors Classifier
2024-04-28 12:30:20,061:INFO:Total runtime is 0.12599788109461466 minutes
2024-04-28 12:30:20,064:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:20,064:INFO:Initializing create_model()
2024-04-28 12:30:20,064:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE01CB14F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:20,065:INFO:Checking exceptions
2024-04-28 12:30:20,065:INFO:Importing libraries
2024-04-28 12:30:20,065:INFO:Copying training dataset
2024-04-28 12:30:20,069:INFO:Defining folds
2024-04-28 12:30:20,070:INFO:Declaring metric variables
2024-04-28 12:30:20,072:INFO:Importing untrained model
2024-04-28 12:30:20,076:INFO:K Neighbors Classifier Imported successfully
2024-04-28 12:30:20,080:INFO:Starting cross validation
2024-04-28 12:30:20,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:20,340:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:20,346:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:20,347:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:20,353:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:20,356:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:20,357:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:20,365:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:20,369:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:20,401:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:20,401:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:20,401:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:20,402:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:20,402:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:20,402:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:20,402:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:20,403:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,404:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,404:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,404:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,405:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,405:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,407:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,408:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,408:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,408:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,409:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,409:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,409:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,409:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,411:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,412:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,413:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,413:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,413:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,414:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,414:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:20,414:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,392:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,395:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,397:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,400:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,403:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,435:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,444:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,447:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,468:INFO:Calculating mean and std
2024-04-28 12:30:24,469:INFO:Creating metrics dataframe
2024-04-28 12:30:24,472:INFO:Uploading results into container
2024-04-28 12:30:24,473:INFO:Uploading model into container now
2024-04-28 12:30:24,473:INFO:_master_model_container: 2
2024-04-28 12:30:24,473:INFO:_display_container: 2
2024-04-28 12:30:24,473:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-28 12:30:24,474:INFO:create_model() successfully completed......................................
2024-04-28 12:30:24,553:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:24,553:INFO:Creating metrics dataframe
2024-04-28 12:30:24,560:INFO:Initializing Naive Bayes
2024-04-28 12:30:24,560:INFO:Total runtime is 0.20098270972569782 minutes
2024-04-28 12:30:24,562:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:24,563:INFO:Initializing create_model()
2024-04-28 12:30:24,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE01CB14F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:24,563:INFO:Checking exceptions
2024-04-28 12:30:24,563:INFO:Importing libraries
2024-04-28 12:30:24,563:INFO:Copying training dataset
2024-04-28 12:30:24,567:INFO:Defining folds
2024-04-28 12:30:24,567:INFO:Declaring metric variables
2024-04-28 12:30:24,570:INFO:Importing untrained model
2024-04-28 12:30:24,572:INFO:Naive Bayes Imported successfully
2024-04-28 12:30:24,578:INFO:Starting cross validation
2024-04-28 12:30:24,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:24,705:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,705:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,705:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,707:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,708:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,709:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,709:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,710:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,710:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,711:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,712:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,712:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,713:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,713:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,713:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,715:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,716:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,716:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,716:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,717:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,717:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,717:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,717:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,718:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,718:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,718:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,719:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,720:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,720:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,720:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,721:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,721:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,721:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,721:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,721:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,722:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,722:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,723:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,723:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,724:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,724:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,725:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,725:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,725:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,727:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,728:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,729:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,729:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,730:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,731:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,751:INFO:Calculating mean and std
2024-04-28 12:30:24,751:INFO:Creating metrics dataframe
2024-04-28 12:30:24,755:INFO:Uploading results into container
2024-04-28 12:30:24,755:INFO:Uploading model into container now
2024-04-28 12:30:24,756:INFO:_master_model_container: 3
2024-04-28 12:30:24,756:INFO:_display_container: 2
2024-04-28 12:30:24,756:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-28 12:30:24,756:INFO:create_model() successfully completed......................................
2024-04-28 12:30:24,834:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:24,834:INFO:Creating metrics dataframe
2024-04-28 12:30:24,841:INFO:Initializing Decision Tree Classifier
2024-04-28 12:30:24,841:INFO:Total runtime is 0.20567030509312945 minutes
2024-04-28 12:30:24,843:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:24,844:INFO:Initializing create_model()
2024-04-28 12:30:24,844:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE01CB14F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:24,844:INFO:Checking exceptions
2024-04-28 12:30:24,844:INFO:Importing libraries
2024-04-28 12:30:24,844:INFO:Copying training dataset
2024-04-28 12:30:24,847:INFO:Defining folds
2024-04-28 12:30:24,847:INFO:Declaring metric variables
2024-04-28 12:30:24,850:INFO:Importing untrained model
2024-04-28 12:30:24,852:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:30:24,857:INFO:Starting cross validation
2024-04-28 12:30:24,858:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:24,985:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,986:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,989:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,991:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,992:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,993:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,994:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:24,995:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,995:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:24,997:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,998:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:24,999:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,000:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:25,001:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:25,002:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:25,003:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:25,003:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,003:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,005:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,005:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,007:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:25,007:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,008:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:25,008:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:25,009:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:25,009:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,009:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,010:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,010:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:25,010:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:25,011:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,011:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:25,011:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,012:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,013:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:25,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:25,014:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,015:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,015:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,017:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,017:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,018:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,018:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,019:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,019:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,021:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,021:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,039:INFO:Calculating mean and std
2024-04-28 12:30:25,040:INFO:Creating metrics dataframe
2024-04-28 12:30:25,043:INFO:Uploading results into container
2024-04-28 12:30:25,043:INFO:Uploading model into container now
2024-04-28 12:30:25,043:INFO:_master_model_container: 4
2024-04-28 12:30:25,043:INFO:_display_container: 2
2024-04-28 12:30:25,044:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-28 12:30:25,044:INFO:create_model() successfully completed......................................
2024-04-28 12:30:25,120:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:25,120:INFO:Creating metrics dataframe
2024-04-28 12:30:25,128:INFO:Initializing SVM - Linear Kernel
2024-04-28 12:30:25,128:INFO:Total runtime is 0.21044131914774575 minutes
2024-04-28 12:30:25,130:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:25,130:INFO:Initializing create_model()
2024-04-28 12:30:25,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE01CB14F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:25,130:INFO:Checking exceptions
2024-04-28 12:30:25,131:INFO:Importing libraries
2024-04-28 12:30:25,131:INFO:Copying training dataset
2024-04-28 12:30:25,136:INFO:Defining folds
2024-04-28 12:30:25,136:INFO:Declaring metric variables
2024-04-28 12:30:25,138:INFO:Importing untrained model
2024-04-28 12:30:25,141:INFO:SVM - Linear Kernel Imported successfully
2024-04-28 12:30:25,147:INFO:Starting cross validation
2024-04-28 12:30:25,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:25,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,279:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,282:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,286:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,286:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,288:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,288:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,290:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,290:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,292:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,292:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,292:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,293:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,293:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,293:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:25,294:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,294:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,294:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,295:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,296:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,296:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,296:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,297:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,298:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,299:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,303:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,306:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,307:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:25,308:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,327:INFO:Calculating mean and std
2024-04-28 12:30:25,327:INFO:Creating metrics dataframe
2024-04-28 12:30:25,330:INFO:Uploading results into container
2024-04-28 12:30:25,331:INFO:Uploading model into container now
2024-04-28 12:30:25,331:INFO:_master_model_container: 5
2024-04-28 12:30:25,331:INFO:_display_container: 2
2024-04-28 12:30:25,332:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-28 12:30:25,332:INFO:create_model() successfully completed......................................
2024-04-28 12:30:25,409:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:25,409:INFO:Creating metrics dataframe
2024-04-28 12:30:25,416:INFO:Initializing Ridge Classifier
2024-04-28 12:30:25,416:INFO:Total runtime is 0.21525171995162962 minutes
2024-04-28 12:30:25,419:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:25,419:INFO:Initializing create_model()
2024-04-28 12:30:25,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE01CB14F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:25,419:INFO:Checking exceptions
2024-04-28 12:30:25,419:INFO:Importing libraries
2024-04-28 12:30:25,419:INFO:Copying training dataset
2024-04-28 12:30:25,423:INFO:Defining folds
2024-04-28 12:30:25,423:INFO:Declaring metric variables
2024-04-28 12:30:25,426:INFO:Importing untrained model
2024-04-28 12:30:25,428:INFO:Ridge Classifier Imported successfully
2024-04-28 12:30:25,433:INFO:Starting cross validation
2024-04-28 12:30:25,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:25,564:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,568:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,568:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,569:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,572:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,572:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,573:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,573:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,574:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,575:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,576:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,576:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,577:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,577:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,578:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,579:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,579:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,580:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,581:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,581:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,582:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,583:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,583:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,583:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,584:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,585:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,586:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,587:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,588:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,590:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:25,597:INFO:Calculating mean and std
2024-04-28 12:30:25,598:INFO:Creating metrics dataframe
2024-04-28 12:30:25,601:INFO:Uploading results into container
2024-04-28 12:30:25,601:INFO:Uploading model into container now
2024-04-28 12:30:25,601:INFO:_master_model_container: 6
2024-04-28 12:30:25,601:INFO:_display_container: 2
2024-04-28 12:30:25,602:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 12:30:25,602:INFO:create_model() successfully completed......................................
2024-04-28 12:30:25,677:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:25,677:INFO:Creating metrics dataframe
2024-04-28 12:30:25,686:INFO:Initializing Random Forest Classifier
2024-04-28 12:30:25,686:INFO:Total runtime is 0.21975582440694172 minutes
2024-04-28 12:30:25,688:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:25,689:INFO:Initializing create_model()
2024-04-28 12:30:25,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE01CB14F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:25,689:INFO:Checking exceptions
2024-04-28 12:30:25,689:INFO:Importing libraries
2024-04-28 12:30:25,689:INFO:Copying training dataset
2024-04-28 12:30:25,694:INFO:Defining folds
2024-04-28 12:30:25,694:INFO:Declaring metric variables
2024-04-28 12:30:25,696:INFO:Importing untrained model
2024-04-28 12:30:25,699:INFO:Random Forest Classifier Imported successfully
2024-04-28 12:30:25,706:INFO:Starting cross validation
2024-04-28 12:30:25,707:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:26,144:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:26,145:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:26,147:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,152:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,157:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,163:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:26,164:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:26,166:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,170:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,175:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,194:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:26,195:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:26,197:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,201:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,204:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,225:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:26,226:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:26,228:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,233:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,237:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,256:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:26,256:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:26,258:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,260:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,263:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,271:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:26,272:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:26,273:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,276:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,279:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,287:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:26,288:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:26,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:26,292:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:29,680:INFO:PyCaret ClassificationExperiment
2024-04-28 12:30:29,680:INFO:Logging name: clf-default-name
2024-04-28 12:30:29,680:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:30:29,680:INFO:version 3.3.1
2024-04-28 12:30:29,680:INFO:Initializing setup()
2024-04-28 12:30:29,680:INFO:self.USI: 656b
2024-04-28 12:30:29,680:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 12:30:29,680:INFO:Checking environment
2024-04-28 12:30:29,680:INFO:python_version: 3.9.12
2024-04-28 12:30:29,680:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 12:30:29,680:INFO:machine: AMD64
2024-04-28 12:30:29,680:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 12:30:29,683:INFO:Memory: svmem(total=34282364928, available=25878351872, percent=24.5, used=8404013056, free=25878351872)
2024-04-28 12:30:29,683:INFO:Physical Core: 6
2024-04-28 12:30:29,683:INFO:Logical Core: 12
2024-04-28 12:30:29,683:INFO:Checking libraries
2024-04-28 12:30:29,683:INFO:System:
2024-04-28 12:30:29,683:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:30:29,683:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 12:30:29,683:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 12:30:29,683:INFO:PyCaret required dependencies:
2024-04-28 12:30:29,683:INFO:                 pip: 21.2.4
2024-04-28 12:30:29,683:INFO:          setuptools: 61.2.0
2024-04-28 12:30:29,683:INFO:             pycaret: 3.3.1
2024-04-28 12:30:29,684:INFO:             IPython: 8.2.0
2024-04-28 12:30:29,684:INFO:          ipywidgets: 7.6.5
2024-04-28 12:30:29,684:INFO:                tqdm: 4.64.0
2024-04-28 12:30:29,684:INFO:               numpy: 1.21.5
2024-04-28 12:30:29,684:INFO:              pandas: 1.4.2
2024-04-28 12:30:29,684:INFO:              jinja2: 2.11.3
2024-04-28 12:30:29,684:INFO:               scipy: 1.7.3
2024-04-28 12:30:29,684:INFO:              joblib: 1.3.2
2024-04-28 12:30:29,684:INFO:             sklearn: 1.4.0
2024-04-28 12:30:29,684:INFO:                pyod: 1.1.3
2024-04-28 12:30:29,684:INFO:            imblearn: 0.12.2
2024-04-28 12:30:29,684:INFO:   category_encoders: 2.6.3
2024-04-28 12:30:29,684:INFO:            lightgbm: 4.3.0
2024-04-28 12:30:29,684:INFO:               numba: 0.55.1
2024-04-28 12:30:29,684:INFO:            requests: 2.27.1
2024-04-28 12:30:29,684:INFO:          matplotlib: 3.5.1
2024-04-28 12:30:29,684:INFO:          scikitplot: 0.3.7
2024-04-28 12:30:29,684:INFO:         yellowbrick: 1.5
2024-04-28 12:30:29,684:INFO:              plotly: 5.6.0
2024-04-28 12:30:29,684:INFO:    plotly-resampler: Not installed
2024-04-28 12:30:29,684:INFO:             kaleido: 0.2.1
2024-04-28 12:30:29,684:INFO:           schemdraw: 0.15
2024-04-28 12:30:29,684:INFO:         statsmodels: 0.13.2
2024-04-28 12:30:29,684:INFO:              sktime: 0.26.0
2024-04-28 12:30:29,684:INFO:               tbats: 1.1.3
2024-04-28 12:30:29,684:INFO:            pmdarima: 2.0.4
2024-04-28 12:30:29,684:INFO:              psutil: 5.9.8
2024-04-28 12:30:29,685:INFO:          markupsafe: 2.0.1
2024-04-28 12:30:29,685:INFO:             pickle5: Not installed
2024-04-28 12:30:29,685:INFO:         cloudpickle: 2.0.0
2024-04-28 12:30:29,685:INFO:         deprecation: 2.1.0
2024-04-28 12:30:29,685:INFO:              xxhash: 3.4.1
2024-04-28 12:30:29,685:INFO:           wurlitzer: Not installed
2024-04-28 12:30:29,685:INFO:PyCaret optional dependencies:
2024-04-28 12:30:29,685:INFO:                shap: Not installed
2024-04-28 12:30:29,685:INFO:           interpret: Not installed
2024-04-28 12:30:29,685:INFO:                umap: Not installed
2024-04-28 12:30:29,685:INFO:     ydata_profiling: Not installed
2024-04-28 12:30:29,685:INFO:  explainerdashboard: Not installed
2024-04-28 12:30:29,685:INFO:             autoviz: Not installed
2024-04-28 12:30:29,685:INFO:           fairlearn: Not installed
2024-04-28 12:30:29,685:INFO:          deepchecks: Not installed
2024-04-28 12:30:29,685:INFO:             xgboost: Not installed
2024-04-28 12:30:29,685:INFO:            catboost: Not installed
2024-04-28 12:30:29,685:INFO:              kmodes: Not installed
2024-04-28 12:30:29,685:INFO:             mlxtend: 0.23.1
2024-04-28 12:30:29,685:INFO:       statsforecast: Not installed
2024-04-28 12:30:29,685:INFO:        tune_sklearn: Not installed
2024-04-28 12:30:29,685:INFO:                 ray: Not installed
2024-04-28 12:30:29,685:INFO:            hyperopt: Not installed
2024-04-28 12:30:29,685:INFO:              optuna: 3.6.1
2024-04-28 12:30:29,685:INFO:               skopt: Not installed
2024-04-28 12:30:29,686:INFO:              mlflow: Not installed
2024-04-28 12:30:29,686:INFO:              gradio: Not installed
2024-04-28 12:30:29,686:INFO:             fastapi: Not installed
2024-04-28 12:30:29,686:INFO:             uvicorn: Not installed
2024-04-28 12:30:29,686:INFO:              m2cgen: Not installed
2024-04-28 12:30:29,686:INFO:           evidently: Not installed
2024-04-28 12:30:29,686:INFO:               fugue: Not installed
2024-04-28 12:30:29,686:INFO:           streamlit: 1.31.1
2024-04-28 12:30:29,686:INFO:             prophet: Not installed
2024-04-28 12:30:29,686:INFO:None
2024-04-28 12:30:29,686:INFO:Set up data.
2024-04-28 12:30:29,693:INFO:Set up folding strategy.
2024-04-28 12:30:29,693:INFO:Set up train/test split.
2024-04-28 12:30:29,699:INFO:Set up index.
2024-04-28 12:30:29,699:INFO:Assigning column types.
2024-04-28 12:30:29,701:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:30:29,746:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:30:29,747:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:29,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:29,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:29,819:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:30:29,820:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:29,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:29,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:29,849:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:30:29,894:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:29,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:29,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:29,968:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:30:29,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:29,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:29,996:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:30:30,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:30,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:30,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:30,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:30,144:INFO:Preparing preprocessing pipeline...
2024-04-28 12:30:30,145:INFO:Set up label encoding.
2024-04-28 12:30:30,145:INFO:Set up simple imputation.
2024-04-28 12:30:30,148:INFO:Set up encoding of ordinal features.
2024-04-28 12:30:30,154:INFO:Set up encoding of categorical features.
2024-04-28 12:30:30,216:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:30:30,256:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifet...
                                                                        {'col': 'zipconvert4',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'zipconvert5',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'homeowner',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'female',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False)
2024-04-28 12:30:30,256:INFO:Creating final display dataframe.
2024-04-28 12:30:30,442:INFO:Setup _display_container:                     Description                  Value
0                    Session id                     27
1                        Target                 target
2                   Target type                 Binary
3                Target mapping  Donor: 0, No Donor: 1
4           Original data shape             (3000, 21)
5        Transformed data shape             (3000, 21)
6   Transformed train set shape             (2100, 21)
7    Transformed test set shape              (900, 21)
8              Numeric features                     14
9          Categorical features                      6
10                   Preprocess                   True
11              Imputation type                 simple
12           Numeric imputation                   mean
13       Categorical imputation                   mode
14     Maximum one-hot encoding                     25
15              Encoding method                   None
16               Fold Generator        StratifiedKFold
17                  Fold Number                     10
18                     CPU Jobs                     -1
19                      Use GPU                  False
20               Log Experiment                  False
21              Experiment Name       clf-default-name
22                          USI                   656b
2024-04-28 12:30:30,520:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:30,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:30,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:30,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:30:30,594:INFO:setup() successfully completed in 0.92s...............
2024-04-28 12:30:30,594:INFO:Initializing compare_models()
2024-04-28 12:30:30,594:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 12:30:30,594:INFO:Checking exceptions
2024-04-28 12:30:30,595:INFO:Preparing display monitor
2024-04-28 12:30:30,622:INFO:Initializing Logistic Regression
2024-04-28 12:30:30,622:INFO:Total runtime is 0.0 minutes
2024-04-28 12:30:30,625:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:30,625:INFO:Initializing create_model()
2024-04-28 12:30:30,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:30,625:INFO:Checking exceptions
2024-04-28 12:30:30,625:INFO:Importing libraries
2024-04-28 12:30:30,626:INFO:Copying training dataset
2024-04-28 12:30:30,630:INFO:Defining folds
2024-04-28 12:30:30,630:INFO:Declaring metric variables
2024-04-28 12:30:30,633:INFO:Importing untrained model
2024-04-28 12:30:30,636:INFO:Logistic Regression Imported successfully
2024-04-28 12:30:30,641:INFO:Starting cross validation
2024-04-28 12:30:30,642:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:38,005:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,042:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,046:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,050:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,054:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,061:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,061:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,062:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,062:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,069:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,076:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,080:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,087:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 12:30:38,090:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,095:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,097:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,097:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,098:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,099:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,099:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,102:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,102:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,105:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,105:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,105:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,107:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,107:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,112:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,114:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,117:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,118:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,120:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,123:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,125:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,128:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,129:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,133:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,137:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,165:INFO:Calculating mean and std
2024-04-28 12:30:38,168:INFO:Creating metrics dataframe
2024-04-28 12:30:38,172:INFO:Uploading results into container
2024-04-28 12:30:38,173:INFO:Uploading model into container now
2024-04-28 12:30:38,173:INFO:_master_model_container: 7
2024-04-28 12:30:38,173:INFO:_display_container: 2
2024-04-28 12:30:38,174:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 12:30:38,174:INFO:create_model() successfully completed......................................
2024-04-28 12:30:38,349:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:38,349:INFO:Creating metrics dataframe
2024-04-28 12:30:38,356:INFO:Initializing K Neighbors Classifier
2024-04-28 12:30:38,356:INFO:Total runtime is 0.12890053192774456 minutes
2024-04-28 12:30:38,358:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:38,359:INFO:Initializing create_model()
2024-04-28 12:30:38,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:38,359:INFO:Checking exceptions
2024-04-28 12:30:38,359:INFO:Importing libraries
2024-04-28 12:30:38,359:INFO:Copying training dataset
2024-04-28 12:30:38,363:INFO:Defining folds
2024-04-28 12:30:38,364:INFO:Declaring metric variables
2024-04-28 12:30:38,366:INFO:Importing untrained model
2024-04-28 12:30:38,369:INFO:K Neighbors Classifier Imported successfully
2024-04-28 12:30:38,376:INFO:Starting cross validation
2024-04-28 12:30:38,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:38,624:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:38,625:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:38,626:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:38,629:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:38,630:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:38,631:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,631:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:38,632:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,634:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,635:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:38,635:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:38,636:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,637:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,638:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,638:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:38,639:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:38,639:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:38,640:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:38,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:38,642:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,642:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,642:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:38,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:38,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:38,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,646:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,646:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,648:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,650:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,650:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,651:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,654:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,655:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:38,657:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,618:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,618:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,621:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,622:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,624:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,624:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,626:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,626:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,629:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,629:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,650:INFO:Calculating mean and std
2024-04-28 12:30:42,652:INFO:Creating metrics dataframe
2024-04-28 12:30:42,655:INFO:Uploading results into container
2024-04-28 12:30:42,655:INFO:Uploading model into container now
2024-04-28 12:30:42,655:INFO:_master_model_container: 8
2024-04-28 12:30:42,655:INFO:_display_container: 2
2024-04-28 12:30:42,656:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-28 12:30:42,656:INFO:create_model() successfully completed......................................
2024-04-28 12:30:42,782:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:42,782:INFO:Creating metrics dataframe
2024-04-28 12:30:42,789:INFO:Initializing Naive Bayes
2024-04-28 12:30:42,789:INFO:Total runtime is 0.20278435945510864 minutes
2024-04-28 12:30:42,792:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:42,792:INFO:Initializing create_model()
2024-04-28 12:30:42,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:42,793:INFO:Checking exceptions
2024-04-28 12:30:42,793:INFO:Importing libraries
2024-04-28 12:30:42,793:INFO:Copying training dataset
2024-04-28 12:30:42,797:INFO:Defining folds
2024-04-28 12:30:42,797:INFO:Declaring metric variables
2024-04-28 12:30:42,800:INFO:Importing untrained model
2024-04-28 12:30:42,803:INFO:Naive Bayes Imported successfully
2024-04-28 12:30:42,809:INFO:Starting cross validation
2024-04-28 12:30:42,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:42,934:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,937:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,939:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,939:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,940:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,941:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,941:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,942:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,942:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,942:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,943:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,944:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

his is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,946:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,948:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,950:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,950:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,951:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,952:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,953:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,953:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,953:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,953:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,955:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,956:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,956:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,956:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,957:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,957:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:42,958:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:42,959:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,960:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,961:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,962:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,963:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,964:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,965:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,966:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:42,982:INFO:Calculating mean and std
2024-04-28 12:30:42,983:INFO:Creating metrics dataframe
2024-04-28 12:30:42,986:INFO:Uploading results into container
2024-04-28 12:30:42,986:INFO:Uploading model into container now
2024-04-28 12:30:42,987:INFO:_master_model_container: 9
2024-04-28 12:30:42,987:INFO:_display_container: 2
2024-04-28 12:30:42,987:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-28 12:30:42,987:INFO:create_model() successfully completed......................................
2024-04-28 12:30:43,103:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:43,103:INFO:Creating metrics dataframe
2024-04-28 12:30:43,109:INFO:Initializing Decision Tree Classifier
2024-04-28 12:30:43,110:INFO:Total runtime is 0.20813921689987183 minutes
2024-04-28 12:30:43,112:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:43,112:INFO:Initializing create_model()
2024-04-28 12:30:43,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:43,113:INFO:Checking exceptions
2024-04-28 12:30:43,113:INFO:Importing libraries
2024-04-28 12:30:43,113:INFO:Copying training dataset
2024-04-28 12:30:43,117:INFO:Defining folds
2024-04-28 12:30:43,118:INFO:Declaring metric variables
2024-04-28 12:30:43,120:INFO:Importing untrained model
2024-04-28 12:30:43,122:INFO:Decision Tree Classifier Imported successfully
2024-04-28 12:30:43,127:INFO:Starting cross validation
2024-04-28 12:30:43,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:43,265:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,266:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:43,269:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,269:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:43,272:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,273:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:43,273:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,274:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,274:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,275:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,275:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:43,277:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,277:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,278:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,278:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,278:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:43,278:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:43,279:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,279:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,280:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,280:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,281:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,282:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,282:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,282:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,282:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:43,283:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,284:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,284:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,285:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,286:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,286:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,287:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:43,287:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:43,287:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:43,288:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,292:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,292:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,293:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,296:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,296:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,314:INFO:Calculating mean and std
2024-04-28 12:30:43,315:INFO:Creating metrics dataframe
2024-04-28 12:30:43,318:INFO:Uploading results into container
2024-04-28 12:30:43,318:INFO:Uploading model into container now
2024-04-28 12:30:43,319:INFO:_master_model_container: 10
2024-04-28 12:30:43,319:INFO:_display_container: 2
2024-04-28 12:30:43,319:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-28 12:30:43,319:INFO:create_model() successfully completed......................................
2024-04-28 12:30:43,434:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:43,434:INFO:Creating metrics dataframe
2024-04-28 12:30:43,441:INFO:Initializing SVM - Linear Kernel
2024-04-28 12:30:43,441:INFO:Total runtime is 0.21365212996800742 minutes
2024-04-28 12:30:43,444:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:43,444:INFO:Initializing create_model()
2024-04-28 12:30:43,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:43,444:INFO:Checking exceptions
2024-04-28 12:30:43,444:INFO:Importing libraries
2024-04-28 12:30:43,445:INFO:Copying training dataset
2024-04-28 12:30:43,449:INFO:Defining folds
2024-04-28 12:30:43,450:INFO:Declaring metric variables
2024-04-28 12:30:43,453:INFO:Importing untrained model
2024-04-28 12:30:43,456:INFO:SVM - Linear Kernel Imported successfully
2024-04-28 12:30:43,460:INFO:Starting cross validation
2024-04-28 12:30:43,462:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:43,598:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,602:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,607:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,609:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,613:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,617:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,617:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,618:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,618:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,621:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,621:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,621:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,622:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,622:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,624:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,625:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,625:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,625:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,626:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,626:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,627:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:43,628:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,628:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,629:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,629:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,631:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,631:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,633:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:43,634:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,636:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,638:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,662:INFO:Calculating mean and std
2024-04-28 12:30:43,663:INFO:Creating metrics dataframe
2024-04-28 12:30:43,667:INFO:Uploading results into container
2024-04-28 12:30:43,667:INFO:Uploading model into container now
2024-04-28 12:30:43,668:INFO:_master_model_container: 11
2024-04-28 12:30:43,668:INFO:_display_container: 2
2024-04-28 12:30:43,669:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-28 12:30:43,669:INFO:create_model() successfully completed......................................
2024-04-28 12:30:43,798:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:43,798:INFO:Creating metrics dataframe
2024-04-28 12:30:43,806:INFO:Initializing Ridge Classifier
2024-04-28 12:30:43,806:INFO:Total runtime is 0.2197409749031067 minutes
2024-04-28 12:30:43,809:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:43,809:INFO:Initializing create_model()
2024-04-28 12:30:43,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:43,809:INFO:Checking exceptions
2024-04-28 12:30:43,809:INFO:Importing libraries
2024-04-28 12:30:43,809:INFO:Copying training dataset
2024-04-28 12:30:43,814:INFO:Defining folds
2024-04-28 12:30:43,815:INFO:Declaring metric variables
2024-04-28 12:30:43,817:INFO:Importing untrained model
2024-04-28 12:30:43,820:INFO:Ridge Classifier Imported successfully
2024-04-28 12:30:43,824:INFO:Starting cross validation
2024-04-28 12:30:43,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:43,952:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,957:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,961:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,961:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,963:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,965:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,967:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,968:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,968:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,969:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,973:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,974:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,974:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,976:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,977:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,978:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,979:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,979:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,980:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,983:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,983:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,983:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,984:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:43,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,005:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,005:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,009:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,010:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,014:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,036:INFO:Calculating mean and std
2024-04-28 12:30:44,038:INFO:Creating metrics dataframe
2024-04-28 12:30:44,042:INFO:Uploading results into container
2024-04-28 12:30:44,043:INFO:Uploading model into container now
2024-04-28 12:30:44,043:INFO:_master_model_container: 12
2024-04-28 12:30:44,043:INFO:_display_container: 2
2024-04-28 12:30:44,044:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 12:30:44,044:INFO:create_model() successfully completed......................................
2024-04-28 12:30:44,194:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:44,194:INFO:Creating metrics dataframe
2024-04-28 12:30:44,202:INFO:Initializing Random Forest Classifier
2024-04-28 12:30:44,203:INFO:Total runtime is 0.22634698152542115 minutes
2024-04-28 12:30:44,205:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:44,205:INFO:Initializing create_model()
2024-04-28 12:30:44,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:44,206:INFO:Checking exceptions
2024-04-28 12:30:44,206:INFO:Importing libraries
2024-04-28 12:30:44,206:INFO:Copying training dataset
2024-04-28 12:30:44,212:INFO:Defining folds
2024-04-28 12:30:44,212:INFO:Declaring metric variables
2024-04-28 12:30:44,215:INFO:Importing untrained model
2024-04-28 12:30:44,220:INFO:Random Forest Classifier Imported successfully
2024-04-28 12:30:44,227:INFO:Starting cross validation
2024-04-28 12:30:44,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:44,770:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:44,771:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,773:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,777:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,780:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,792:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:44,793:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,795:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,799:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,803:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,816:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:44,817:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,820:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,824:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,828:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,832:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:44,832:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:44,833:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,833:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,834:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,836:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,838:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,839:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,840:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,841:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,879:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:44,880:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:44,880:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

back (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,880:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:44,881:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,881:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,881:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,881:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,883:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,883:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,883:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,884:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,885:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,887:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,887:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,887:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,888:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,889:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,890:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,895:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:44,895:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:44,897:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,899:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,902:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:44,907:INFO:Calculating mean and std
2024-04-28 12:30:44,908:INFO:Creating metrics dataframe
2024-04-28 12:30:44,911:INFO:Uploading results into container
2024-04-28 12:30:44,911:INFO:Uploading model into container now
2024-04-28 12:30:44,912:INFO:_master_model_container: 13
2024-04-28 12:30:44,912:INFO:_display_container: 2
2024-04-28 12:30:44,912:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-28 12:30:44,912:INFO:create_model() successfully completed......................................
2024-04-28 12:30:45,032:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:45,032:INFO:Creating metrics dataframe
2024-04-28 12:30:45,040:INFO:Initializing Quadratic Discriminant Analysis
2024-04-28 12:30:45,040:INFO:Total runtime is 0.24030967950820925 minutes
2024-04-28 12:30:45,042:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:45,043:INFO:Initializing create_model()
2024-04-28 12:30:45,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:45,043:INFO:Checking exceptions
2024-04-28 12:30:45,043:INFO:Importing libraries
2024-04-28 12:30:45,043:INFO:Copying training dataset
2024-04-28 12:30:45,047:INFO:Defining folds
2024-04-28 12:30:45,047:INFO:Declaring metric variables
2024-04-28 12:30:45,049:INFO:Importing untrained model
2024-04-28 12:30:45,051:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-28 12:30:45,055:INFO:Starting cross validation
2024-04-28 12:30:45,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:45,167:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 12:30:45,167:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 12:30:45,167:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 12:30:45,167:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 12:30:45,180:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 12:30:45,180:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 12:30:45,180:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 12:30:45,205:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,205:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,205:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,206:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,207:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,207:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,210:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,210:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,211:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,213:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,213:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,213:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,213:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,214:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,215:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,215:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,217:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,217:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,217:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,218:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,221:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,221:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,221:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,222:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,224:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,224:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,224:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,237:INFO:Calculating mean and std
2024-04-28 12:30:45,238:INFO:Creating metrics dataframe
2024-04-28 12:30:45,241:INFO:Uploading results into container
2024-04-28 12:30:45,241:INFO:Uploading model into container now
2024-04-28 12:30:45,242:INFO:_master_model_container: 14
2024-04-28 12:30:45,242:INFO:_display_container: 2
2024-04-28 12:30:45,242:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-28 12:30:45,242:INFO:create_model() successfully completed......................................
2024-04-28 12:30:45,363:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:45,363:INFO:Creating metrics dataframe
2024-04-28 12:30:45,372:INFO:Initializing Ada Boost Classifier
2024-04-28 12:30:45,372:INFO:Total runtime is 0.2458313584327698 minutes
2024-04-28 12:30:45,375:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:45,375:INFO:Initializing create_model()
2024-04-28 12:30:45,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:45,375:INFO:Checking exceptions
2024-04-28 12:30:45,376:INFO:Importing libraries
2024-04-28 12:30:45,376:INFO:Copying training dataset
2024-04-28 12:30:45,380:INFO:Defining folds
2024-04-28 12:30:45,380:INFO:Declaring metric variables
2024-04-28 12:30:45,382:INFO:Importing untrained model
2024-04-28 12:30:45,385:INFO:Ada Boost Classifier Imported successfully
2024-04-28 12:30:45,389:INFO:Starting cross validation
2024-04-28 12:30:45,390:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:45,479:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:45,479:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:45,487:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:45,488:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:45,490:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:45,490:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:45,490:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:45,493:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:45,498:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:45,711:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,715:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,715:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,717:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,719:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,720:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,722:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,723:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,725:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,727:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,728:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,728:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,731:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,731:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,731:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,735:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,736:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,736:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,738:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,739:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,741:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,741:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,747:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,750:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,750:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,752:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,753:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,755:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:45,772:INFO:Calculating mean and std
2024-04-28 12:30:45,774:INFO:Creating metrics dataframe
2024-04-28 12:30:45,776:INFO:Uploading results into container
2024-04-28 12:30:45,777:INFO:Uploading model into container now
2024-04-28 12:30:45,778:INFO:_master_model_container: 15
2024-04-28 12:30:45,778:INFO:_display_container: 2
2024-04-28 12:30:45,778:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 12:30:45,779:INFO:create_model() successfully completed......................................
2024-04-28 12:30:45,904:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:45,905:INFO:Creating metrics dataframe
2024-04-28 12:30:45,913:INFO:Initializing Gradient Boosting Classifier
2024-04-28 12:30:45,913:INFO:Total runtime is 0.2548562526702881 minutes
2024-04-28 12:30:45,916:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:45,916:INFO:Initializing create_model()
2024-04-28 12:30:45,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:45,916:INFO:Checking exceptions
2024-04-28 12:30:45,916:INFO:Importing libraries
2024-04-28 12:30:45,917:INFO:Copying training dataset
2024-04-28 12:30:45,921:INFO:Defining folds
2024-04-28 12:30:45,921:INFO:Declaring metric variables
2024-04-28 12:30:45,924:INFO:Importing untrained model
2024-04-28 12:30:45,926:INFO:Gradient Boosting Classifier Imported successfully
2024-04-28 12:30:45,930:INFO:Starting cross validation
2024-04-28 12:30:45,931:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:46,605:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,615:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,619:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,623:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,626:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,635:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,635:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,639:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,639:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,640:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,644:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,646:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,648:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,648:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,651:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,655:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,668:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,671:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,673:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,675:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,676:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,676:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,679:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,679:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,682:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,697:INFO:Calculating mean and std
2024-04-28 12:30:46,698:INFO:Creating metrics dataframe
2024-04-28 12:30:46,701:INFO:Uploading results into container
2024-04-28 12:30:46,701:INFO:Uploading model into container now
2024-04-28 12:30:46,702:INFO:_master_model_container: 16
2024-04-28 12:30:46,702:INFO:_display_container: 2
2024-04-28 12:30:46,702:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-28 12:30:46,702:INFO:create_model() successfully completed......................................
2024-04-28 12:30:46,814:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:46,815:INFO:Creating metrics dataframe
2024-04-28 12:30:46,824:INFO:Initializing Linear Discriminant Analysis
2024-04-28 12:30:46,824:INFO:Total runtime is 0.2700418551762899 minutes
2024-04-28 12:30:46,827:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:46,827:INFO:Initializing create_model()
2024-04-28 12:30:46,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:46,827:INFO:Checking exceptions
2024-04-28 12:30:46,827:INFO:Importing libraries
2024-04-28 12:30:46,827:INFO:Copying training dataset
2024-04-28 12:30:46,832:INFO:Defining folds
2024-04-28 12:30:46,832:INFO:Declaring metric variables
2024-04-28 12:30:46,835:INFO:Importing untrained model
2024-04-28 12:30:46,837:INFO:Linear Discriminant Analysis Imported successfully
2024-04-28 12:30:46,842:INFO:Starting cross validation
2024-04-28 12:30:46,843:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:46,968:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,972:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,974:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,977:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,977:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,978:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,980:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,981:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,982:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,983:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,983:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,984:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,985:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,985:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,987:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,987:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,987:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,989:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,991:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,991:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,992:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,992:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,992:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,994:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,995:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,995:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:46,996:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,013:INFO:Calculating mean and std
2024-04-28 12:30:47,014:INFO:Creating metrics dataframe
2024-04-28 12:30:47,017:INFO:Uploading results into container
2024-04-28 12:30:47,017:INFO:Uploading model into container now
2024-04-28 12:30:47,018:INFO:_master_model_container: 17
2024-04-28 12:30:47,018:INFO:_display_container: 2
2024-04-28 12:30:47,018:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-28 12:30:47,018:INFO:create_model() successfully completed......................................
2024-04-28 12:30:47,137:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:47,137:INFO:Creating metrics dataframe
2024-04-28 12:30:47,146:INFO:Initializing Extra Trees Classifier
2024-04-28 12:30:47,146:INFO:Total runtime is 0.2753967007001242 minutes
2024-04-28 12:30:47,149:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:47,149:INFO:Initializing create_model()
2024-04-28 12:30:47,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:47,149:INFO:Checking exceptions
2024-04-28 12:30:47,149:INFO:Importing libraries
2024-04-28 12:30:47,149:INFO:Copying training dataset
2024-04-28 12:30:47,153:INFO:Defining folds
2024-04-28 12:30:47,153:INFO:Declaring metric variables
2024-04-28 12:30:47,156:INFO:Importing untrained model
2024-04-28 12:30:47,158:INFO:Extra Trees Classifier Imported successfully
2024-04-28 12:30:47,162:INFO:Starting cross validation
2024-04-28 12:30:47,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:47,663:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,665:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,667:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,671:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,675:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,679:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,679:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,679:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,680:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,680:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,681:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,682:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,683:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,683:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,687:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,687:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,688:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,692:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,692:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,692:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,695:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,696:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,698:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,702:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,706:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,710:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,711:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,713:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,716:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,719:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,724:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,724:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,724:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,725:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,725:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,725:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,726:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,727:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,727:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,729:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,730:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,730:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,732:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,732:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,732:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,739:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:47,740:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:47,741:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,744:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,747:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:47,767:INFO:Calculating mean and std
2024-04-28 12:30:47,769:INFO:Creating metrics dataframe
2024-04-28 12:30:47,772:INFO:Uploading results into container
2024-04-28 12:30:47,772:INFO:Uploading model into container now
2024-04-28 12:30:47,772:INFO:_master_model_container: 18
2024-04-28 12:30:47,772:INFO:_display_container: 2
2024-04-28 12:30:47,773:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-28 12:30:47,773:INFO:create_model() successfully completed......................................
2024-04-28 12:30:47,897:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:47,897:INFO:Creating metrics dataframe
2024-04-28 12:30:47,906:INFO:Initializing Light Gradient Boosting Machine
2024-04-28 12:30:47,906:INFO:Total runtime is 0.28807489871978764 minutes
2024-04-28 12:30:47,909:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:47,909:INFO:Initializing create_model()
2024-04-28 12:30:47,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:47,909:INFO:Checking exceptions
2024-04-28 12:30:47,910:INFO:Importing libraries
2024-04-28 12:30:47,910:INFO:Copying training dataset
2024-04-28 12:30:47,915:INFO:Defining folds
2024-04-28 12:30:47,916:INFO:Declaring metric variables
2024-04-28 12:30:47,918:INFO:Importing untrained model
2024-04-28 12:30:47,921:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-28 12:30:47,927:INFO:Starting cross validation
2024-04-28 12:30:47,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:48,653:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,654:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,655:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,659:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,661:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,662:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,663:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,664:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,667:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,671:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,719:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,720:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,722:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,726:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,730:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,749:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,750:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,752:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,755:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,759:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,760:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,761:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,763:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,767:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,771:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,776:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,777:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,779:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,781:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,782:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,783:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,784:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,786:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,788:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,791:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,823:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,824:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,826:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,829:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,833:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,841:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,842:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,843:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,847:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,851:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,866:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:48,867:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:48,868:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,872:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,875:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:48,893:INFO:Calculating mean and std
2024-04-28 12:30:48,895:INFO:Creating metrics dataframe
2024-04-28 12:30:48,898:INFO:Uploading results into container
2024-04-28 12:30:48,899:INFO:Uploading model into container now
2024-04-28 12:30:48,899:INFO:_master_model_container: 19
2024-04-28 12:30:48,899:INFO:_display_container: 2
2024-04-28 12:30:48,900:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-28 12:30:48,900:INFO:create_model() successfully completed......................................
2024-04-28 12:30:49,046:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:49,046:INFO:Creating metrics dataframe
2024-04-28 12:30:49,058:INFO:Initializing Dummy Classifier
2024-04-28 12:30:49,059:INFO:Total runtime is 0.307292385896047 minutes
2024-04-28 12:30:49,062:INFO:SubProcess create_model() called ==================================
2024-04-28 12:30:49,062:INFO:Initializing create_model()
2024-04-28 12:30:49,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE02D6FE50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:49,062:INFO:Checking exceptions
2024-04-28 12:30:49,062:INFO:Importing libraries
2024-04-28 12:30:49,062:INFO:Copying training dataset
2024-04-28 12:30:49,067:INFO:Defining folds
2024-04-28 12:30:49,067:INFO:Declaring metric variables
2024-04-28 12:30:49,070:INFO:Importing untrained model
2024-04-28 12:30:49,073:INFO:Dummy Classifier Imported successfully
2024-04-28 12:30:49,078:INFO:Starting cross validation
2024-04-28 12:30:49,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:30:49,202:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,203:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,205:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,206:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,207:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,208:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,210:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,212:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,212:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,213:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,214:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,214:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,214:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

his is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,215:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,216:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,216:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,217:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,217:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,217:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,218:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,218:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,219:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,220:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,221:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,221:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,221:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,222:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,222:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,223:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,223:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,223:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,224:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,225:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,225:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,226:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,227:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,227:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,228:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,228:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,229:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,229:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,230:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,231:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,231:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,231:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,231:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 12:30:49,233:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 12:30:49,234:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,234:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,235:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,235:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,237:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,239:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,240:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,240:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 12:30:49,243:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:30:49,252:INFO:Calculating mean and std
2024-04-28 12:30:49,253:INFO:Creating metrics dataframe
2024-04-28 12:30:49,256:INFO:Uploading results into container
2024-04-28 12:30:49,256:INFO:Uploading model into container now
2024-04-28 12:30:49,256:INFO:_master_model_container: 20
2024-04-28 12:30:49,256:INFO:_display_container: 2
2024-04-28 12:30:49,257:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-28 12:30:49,257:INFO:create_model() successfully completed......................................
2024-04-28 12:30:49,414:INFO:SubProcess create_model() end ==================================
2024-04-28 12:30:49,415:INFO:Creating metrics dataframe
2024-04-28 12:30:49,435:INFO:Initializing create_model()
2024-04-28 12:30:49,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:30:49,436:INFO:Checking exceptions
2024-04-28 12:30:49,438:INFO:Importing libraries
2024-04-28 12:30:49,438:INFO:Copying training dataset
2024-04-28 12:30:49,442:INFO:Defining folds
2024-04-28 12:30:49,442:INFO:Declaring metric variables
2024-04-28 12:30:49,442:INFO:Importing untrained model
2024-04-28 12:30:49,442:INFO:Declaring custom model
2024-04-28 12:30:49,443:INFO:Ada Boost Classifier Imported successfully
2024-04-28 12:30:49,444:INFO:Cross validation set to False
2024-04-28 12:30:49,444:INFO:Fitting Model
2024-04-28 12:30:49,488:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:30:49,621:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 12:30:49,621:INFO:create_model() successfully completed......................................
2024-04-28 12:30:49,767:INFO:_master_model_container: 20
2024-04-28 12:30:49,767:INFO:_display_container: 2
2024-04-28 12:30:49,767:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 12:30:49,767:INFO:compare_models() successfully completed......................................
2024-04-28 12:31:32,834:INFO:Initializing predict_model()
2024-04-28 12:31:32,835:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE01903040>)
2024-04-28 12:31:32,835:INFO:Checking exceptions
2024-04-28 12:31:32,835:INFO:Preloading libraries
2024-04-28 12:31:32,836:INFO:Set up data.
2024-04-28 12:31:54,259:INFO:Initializing predict_model()
2024-04-28 12:31:54,259:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE06484D30>)
2024-04-28 12:31:54,259:INFO:Checking exceptions
2024-04-28 12:31:54,259:INFO:Preloading libraries
2024-04-28 12:31:54,261:INFO:Set up data.
2024-04-28 12:31:54,267:INFO:Set up index.
2024-04-28 12:32:06,410:INFO:Initializing predict_model()
2024-04-28 12:32:06,410:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE02D47B80>)
2024-04-28 12:32:06,411:INFO:Checking exceptions
2024-04-28 12:32:06,411:INFO:Preloading libraries
2024-04-28 12:32:06,412:INFO:Set up data.
2024-04-28 12:32:06,418:INFO:Set up index.
2024-04-28 12:32:11,124:INFO:Initializing predict_model()
2024-04-28 12:32:11,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE03A091F0>)
2024-04-28 12:32:11,124:INFO:Checking exceptions
2024-04-28 12:32:11,124:INFO:Preloading libraries
2024-04-28 12:32:11,125:INFO:Set up data.
2024-04-28 12:32:11,131:INFO:Set up index.
2024-04-28 12:32:15,843:INFO:Initializing predict_model()
2024-04-28 12:32:15,843:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE01902490>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE0A308E50>)
2024-04-28 12:32:15,843:INFO:Checking exceptions
2024-04-28 12:32:15,843:INFO:Preloading libraries
2024-04-28 12:32:15,845:INFO:Set up data.
2024-04-28 12:32:15,851:INFO:Set up index.
2024-04-28 12:37:07,909:INFO:PyCaret ClassificationExperiment
2024-04-28 12:37:07,909:INFO:Logging name: clf-default-name
2024-04-28 12:37:07,909:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:37:07,909:INFO:version 3.3.1
2024-04-28 12:37:07,909:INFO:Initializing setup()
2024-04-28 12:37:07,909:INFO:self.USI: 054b
2024-04-28 12:37:07,909:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 12:37:07,909:INFO:Checking environment
2024-04-28 12:37:07,909:INFO:python_version: 3.9.12
2024-04-28 12:37:07,909:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 12:37:07,909:INFO:machine: AMD64
2024-04-28 12:37:07,909:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 12:37:07,912:INFO:Memory: svmem(total=34282364928, available=25379332096, percent=26.0, used=8903032832, free=25379332096)
2024-04-28 12:37:07,912:INFO:Physical Core: 6
2024-04-28 12:37:07,912:INFO:Logical Core: 12
2024-04-28 12:37:07,912:INFO:Checking libraries
2024-04-28 12:37:07,912:INFO:System:
2024-04-28 12:37:07,912:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:37:07,912:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 12:37:07,912:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 12:37:07,912:INFO:PyCaret required dependencies:
2024-04-28 12:37:07,913:INFO:                 pip: 21.2.4
2024-04-28 12:37:07,913:INFO:          setuptools: 61.2.0
2024-04-28 12:37:07,913:INFO:             pycaret: 3.3.1
2024-04-28 12:37:07,913:INFO:             IPython: 8.2.0
2024-04-28 12:37:07,913:INFO:          ipywidgets: 7.6.5
2024-04-28 12:37:07,913:INFO:                tqdm: 4.64.0
2024-04-28 12:37:07,913:INFO:               numpy: 1.21.5
2024-04-28 12:37:07,913:INFO:              pandas: 1.4.2
2024-04-28 12:37:07,913:INFO:              jinja2: 2.11.3
2024-04-28 12:37:07,913:INFO:               scipy: 1.7.3
2024-04-28 12:37:07,913:INFO:              joblib: 1.3.2
2024-04-28 12:37:07,913:INFO:             sklearn: 1.4.0
2024-04-28 12:37:07,913:INFO:                pyod: 1.1.3
2024-04-28 12:37:07,913:INFO:            imblearn: 0.12.2
2024-04-28 12:37:07,913:INFO:   category_encoders: 2.6.3
2024-04-28 12:37:07,913:INFO:            lightgbm: 4.3.0
2024-04-28 12:37:07,913:INFO:               numba: 0.55.1
2024-04-28 12:37:07,913:INFO:            requests: 2.27.1
2024-04-28 12:37:07,913:INFO:          matplotlib: 3.5.1
2024-04-28 12:37:07,913:INFO:          scikitplot: 0.3.7
2024-04-28 12:37:07,913:INFO:         yellowbrick: 1.5
2024-04-28 12:37:07,913:INFO:              plotly: 5.6.0
2024-04-28 12:37:07,913:INFO:    plotly-resampler: Not installed
2024-04-28 12:37:07,913:INFO:             kaleido: 0.2.1
2024-04-28 12:37:07,913:INFO:           schemdraw: 0.15
2024-04-28 12:37:07,913:INFO:         statsmodels: 0.13.2
2024-04-28 12:37:07,913:INFO:              sktime: 0.26.0
2024-04-28 12:37:07,913:INFO:               tbats: 1.1.3
2024-04-28 12:37:07,913:INFO:            pmdarima: 2.0.4
2024-04-28 12:37:07,914:INFO:              psutil: 5.9.8
2024-04-28 12:37:07,914:INFO:          markupsafe: 2.0.1
2024-04-28 12:37:07,914:INFO:             pickle5: Not installed
2024-04-28 12:37:07,914:INFO:         cloudpickle: 2.0.0
2024-04-28 12:37:07,914:INFO:         deprecation: 2.1.0
2024-04-28 12:37:07,914:INFO:              xxhash: 3.4.1
2024-04-28 12:37:07,914:INFO:           wurlitzer: Not installed
2024-04-28 12:37:07,914:INFO:PyCaret optional dependencies:
2024-04-28 12:37:07,914:INFO:                shap: Not installed
2024-04-28 12:37:07,914:INFO:           interpret: Not installed
2024-04-28 12:37:07,914:INFO:                umap: Not installed
2024-04-28 12:37:07,914:INFO:     ydata_profiling: Not installed
2024-04-28 12:37:07,914:INFO:  explainerdashboard: Not installed
2024-04-28 12:37:07,914:INFO:             autoviz: Not installed
2024-04-28 12:37:07,914:INFO:           fairlearn: Not installed
2024-04-28 12:37:07,914:INFO:          deepchecks: Not installed
2024-04-28 12:37:07,914:INFO:             xgboost: Not installed
2024-04-28 12:37:07,914:INFO:            catboost: Not installed
2024-04-28 12:37:07,914:INFO:              kmodes: Not installed
2024-04-28 12:37:07,914:INFO:             mlxtend: 0.23.1
2024-04-28 12:37:07,914:INFO:       statsforecast: Not installed
2024-04-28 12:37:07,914:INFO:        tune_sklearn: Not installed
2024-04-28 12:37:07,914:INFO:                 ray: Not installed
2024-04-28 12:37:07,914:INFO:            hyperopt: Not installed
2024-04-28 12:37:07,914:INFO:              optuna: 3.6.1
2024-04-28 12:37:07,914:INFO:               skopt: Not installed
2024-04-28 12:37:07,915:INFO:              mlflow: Not installed
2024-04-28 12:37:07,915:INFO:              gradio: Not installed
2024-04-28 12:37:07,915:INFO:             fastapi: Not installed
2024-04-28 12:37:07,915:INFO:             uvicorn: Not installed
2024-04-28 12:37:07,915:INFO:              m2cgen: Not installed
2024-04-28 12:37:07,915:INFO:           evidently: Not installed
2024-04-28 12:37:07,915:INFO:               fugue: Not installed
2024-04-28 12:37:07,915:INFO:           streamlit: 1.31.1
2024-04-28 12:37:07,915:INFO:             prophet: Not installed
2024-04-28 12:37:07,915:INFO:None
2024-04-28 12:37:07,915:INFO:Set up data.
2024-04-28 12:37:07,923:INFO:Set up folding strategy.
2024-04-28 12:37:48,367:INFO:PyCaret ClassificationExperiment
2024-04-28 12:37:48,367:INFO:Logging name: clf-default-name
2024-04-28 12:37:48,367:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:37:48,367:INFO:version 3.3.1
2024-04-28 12:37:48,367:INFO:Initializing setup()
2024-04-28 12:37:48,367:INFO:self.USI: aff1
2024-04-28 12:37:48,367:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 12:37:48,367:INFO:Checking environment
2024-04-28 12:37:48,367:INFO:python_version: 3.9.12
2024-04-28 12:37:48,367:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 12:37:48,367:INFO:machine: AMD64
2024-04-28 12:37:48,367:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 12:37:48,372:INFO:Memory: svmem(total=34282364928, available=25275281408, percent=26.3, used=9007083520, free=25275281408)
2024-04-28 12:37:48,372:INFO:Physical Core: 6
2024-04-28 12:37:48,373:INFO:Logical Core: 12
2024-04-28 12:37:48,373:INFO:Checking libraries
2024-04-28 12:37:48,373:INFO:System:
2024-04-28 12:37:48,373:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:37:48,373:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 12:37:48,373:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 12:37:48,373:INFO:PyCaret required dependencies:
2024-04-28 12:37:48,373:INFO:                 pip: 21.2.4
2024-04-28 12:37:48,373:INFO:          setuptools: 61.2.0
2024-04-28 12:37:48,373:INFO:             pycaret: 3.3.1
2024-04-28 12:37:48,373:INFO:             IPython: 8.2.0
2024-04-28 12:37:48,373:INFO:          ipywidgets: 7.6.5
2024-04-28 12:37:48,373:INFO:                tqdm: 4.64.0
2024-04-28 12:37:48,373:INFO:               numpy: 1.21.5
2024-04-28 12:37:48,373:INFO:              pandas: 1.4.2
2024-04-28 12:37:48,373:INFO:              jinja2: 2.11.3
2024-04-28 12:37:48,373:INFO:               scipy: 1.7.3
2024-04-28 12:37:48,373:INFO:              joblib: 1.3.2
2024-04-28 12:37:48,373:INFO:             sklearn: 1.4.0
2024-04-28 12:37:48,373:INFO:                pyod: 1.1.3
2024-04-28 12:37:48,373:INFO:            imblearn: 0.12.2
2024-04-28 12:37:48,373:INFO:   category_encoders: 2.6.3
2024-04-28 12:37:48,373:INFO:            lightgbm: 4.3.0
2024-04-28 12:37:48,373:INFO:               numba: 0.55.1
2024-04-28 12:37:48,373:INFO:            requests: 2.27.1
2024-04-28 12:37:48,374:INFO:          matplotlib: 3.5.1
2024-04-28 12:37:48,374:INFO:          scikitplot: 0.3.7
2024-04-28 12:37:48,374:INFO:         yellowbrick: 1.5
2024-04-28 12:37:48,374:INFO:              plotly: 5.6.0
2024-04-28 12:37:48,374:INFO:    plotly-resampler: Not installed
2024-04-28 12:37:48,374:INFO:             kaleido: 0.2.1
2024-04-28 12:37:48,374:INFO:           schemdraw: 0.15
2024-04-28 12:37:48,374:INFO:         statsmodels: 0.13.2
2024-04-28 12:37:48,374:INFO:              sktime: 0.26.0
2024-04-28 12:37:48,374:INFO:               tbats: 1.1.3
2024-04-28 12:37:48,374:INFO:            pmdarima: 2.0.4
2024-04-28 12:37:48,374:INFO:              psutil: 5.9.8
2024-04-28 12:37:48,374:INFO:          markupsafe: 2.0.1
2024-04-28 12:37:48,374:INFO:             pickle5: Not installed
2024-04-28 12:37:48,374:INFO:         cloudpickle: 2.0.0
2024-04-28 12:37:48,374:INFO:         deprecation: 2.1.0
2024-04-28 12:37:48,374:INFO:              xxhash: 3.4.1
2024-04-28 12:37:48,374:INFO:           wurlitzer: Not installed
2024-04-28 12:37:48,374:INFO:PyCaret optional dependencies:
2024-04-28 12:37:48,374:INFO:                shap: Not installed
2024-04-28 12:37:48,374:INFO:           interpret: Not installed
2024-04-28 12:37:48,374:INFO:                umap: Not installed
2024-04-28 12:37:48,374:INFO:     ydata_profiling: Not installed
2024-04-28 12:37:48,374:INFO:  explainerdashboard: Not installed
2024-04-28 12:37:48,374:INFO:             autoviz: Not installed
2024-04-28 12:37:48,374:INFO:           fairlearn: Not installed
2024-04-28 12:37:48,374:INFO:          deepchecks: Not installed
2024-04-28 12:37:48,374:INFO:             xgboost: Not installed
2024-04-28 12:37:48,374:INFO:            catboost: Not installed
2024-04-28 12:37:48,374:INFO:              kmodes: Not installed
2024-04-28 12:37:48,375:INFO:             mlxtend: 0.23.1
2024-04-28 12:37:48,375:INFO:       statsforecast: Not installed
2024-04-28 12:37:48,375:INFO:        tune_sklearn: Not installed
2024-04-28 12:37:48,375:INFO:                 ray: Not installed
2024-04-28 12:37:48,375:INFO:            hyperopt: Not installed
2024-04-28 12:37:48,375:INFO:              optuna: 3.6.1
2024-04-28 12:37:48,375:INFO:               skopt: Not installed
2024-04-28 12:37:48,375:INFO:              mlflow: Not installed
2024-04-28 12:37:48,375:INFO:              gradio: Not installed
2024-04-28 12:37:48,375:INFO:             fastapi: Not installed
2024-04-28 12:37:48,375:INFO:             uvicorn: Not installed
2024-04-28 12:37:48,375:INFO:              m2cgen: Not installed
2024-04-28 12:37:48,375:INFO:           evidently: Not installed
2024-04-28 12:37:48,375:INFO:               fugue: Not installed
2024-04-28 12:37:48,375:INFO:           streamlit: 1.31.1
2024-04-28 12:37:48,375:INFO:             prophet: Not installed
2024-04-28 12:37:48,375:INFO:None
2024-04-28 12:37:48,375:INFO:Set up data.
2024-04-28 12:37:48,383:INFO:Set up folding strategy.
2024-04-28 12:37:48,383:INFO:Set up train/test split.
2024-04-28 12:37:48,389:INFO:Set up index.
2024-04-28 12:37:48,389:INFO:Assigning column types.
2024-04-28 12:37:48,392:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:37:48,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:37:48,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:37:48,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,509:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:37:48,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:37:48,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,539:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:37:48,587:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:37:48,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,660:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:37:48,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,688:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:37:48,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,833:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:48,833:INFO:Preparing preprocessing pipeline...
2024-04-28 12:37:48,834:INFO:Set up label encoding.
2024-04-28 12:37:48,834:INFO:Set up simple imputation.
2024-04-28 12:37:48,837:INFO:Set up encoding of ordinal features.
2024-04-28 12:37:48,843:INFO:Set up encoding of categorical features.
2024-04-28 12:37:48,903:INFO:Finished creating preprocessing pipeline.
2024-04-28 12:37:48,943:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifet...
                                                                        {'col': 'zipconvert4',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'zipconvert5',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'homeowner',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'female',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0)))],
         verbose=False)
2024-04-28 12:37:48,943:INFO:Creating final display dataframe.
2024-04-28 12:37:49,135:INFO:Setup _display_container:                     Description                  Value
0                    Session id                     27
1                        Target                 target
2                   Target type                 Binary
3                Target mapping  Donor: 0, No Donor: 1
4           Original data shape             (3000, 21)
5        Transformed data shape             (3000, 21)
6   Transformed train set shape             (2100, 21)
7    Transformed test set shape              (900, 21)
8              Numeric features                     14
9          Categorical features                      6
10                   Preprocess                   True
11              Imputation type                 simple
12           Numeric imputation                   mean
13       Categorical imputation                   mode
14     Maximum one-hot encoding                     25
15              Encoding method                   None
16               Fold Generator        StratifiedKFold
17                  Fold Number                     10
18                     CPU Jobs                     -1
19                      Use GPU                  False
20               Log Experiment                  False
21              Experiment Name       clf-default-name
22                          USI                   aff1
2024-04-28 12:37:49,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:49,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:49,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:49,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:37:49,294:INFO:setup() successfully completed in 0.93s...............
2024-04-28 12:37:49,294:INFO:Initializing create_model()
2024-04-28 12:37:49,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0A3A0D30>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:37:49,294:INFO:Checking exceptions
2024-04-28 12:37:49,314:INFO:Importing libraries
2024-04-28 12:37:49,314:INFO:Copying training dataset
2024-04-28 12:37:49,320:INFO:Defining folds
2024-04-28 12:37:49,320:INFO:Declaring metric variables
2024-04-28 12:37:49,323:INFO:Importing untrained model
2024-04-28 12:37:49,325:INFO:Ada Boost Classifier Imported successfully
2024-04-28 12:37:49,331:INFO:Starting cross validation
2024-04-28 12:37:49,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:37:49,426:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:49,770:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:49,776:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:49,784:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:49,899:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:50,217:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:50,223:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:50,229:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,530:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:55,613:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:55,616:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:55,665:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:55,672:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:55,677:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:55,680:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:55,680:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:55,742:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,746:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,750:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,814:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,819:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,823:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,836:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,840:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,844:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,866:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,870:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,873:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,875:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,877:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,877:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,880:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,881:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,884:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,889:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,892:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,895:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,901:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,906:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,910:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:37:55,927:INFO:Calculating mean and std
2024-04-28 12:37:55,929:INFO:Creating metrics dataframe
2024-04-28 12:37:55,934:INFO:Finalizing model
2024-04-28 12:37:55,994:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:37:56,128:INFO:Uploading results into container
2024-04-28 12:37:56,129:INFO:Uploading model into container now
2024-04-28 12:37:56,136:INFO:_master_model_container: 1
2024-04-28 12:37:56,136:INFO:_display_container: 2
2024-04-28 12:37:56,136:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 12:37:56,136:INFO:create_model() successfully completed......................................
2024-04-28 12:37:56,280:INFO:Initializing tune_model()
2024-04-28 12:37:56,281:INFO:tune_model(estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), fold=None, round=4, n_iter=50, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0A3A0D30>)
2024-04-28 12:37:56,281:INFO:Checking exceptions
2024-04-28 12:37:56,301:INFO:Copying training dataset
2024-04-28 12:37:56,305:INFO:Checking base model
2024-04-28 12:37:56,305:INFO:Base model : Ada Boost Classifier
2024-04-28 12:37:56,308:INFO:Declaring metric variables
2024-04-28 12:37:56,310:INFO:Defining Hyperparameters
2024-04-28 12:37:56,457:INFO:Tuning with n_jobs=-1
2024-04-28 12:37:56,457:INFO:Initializing RandomizedSearchCV
2024-04-28 12:38:26,007:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__learning_rate': 0.15, 'actual_estimator__algorithm': 'SAMME'}
2024-04-28 12:38:26,008:INFO:Hyperparameter search completed
2024-04-28 12:38:26,009:INFO:SubProcess create_model() called ==================================
2024-04-28 12:38:26,009:INFO:Initializing create_model()
2024-04-28 12:38:26,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0A3A0D30>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE062066D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'learning_rate': 0.15, 'algorithm': 'SAMME'})
2024-04-28 12:38:26,009:INFO:Checking exceptions
2024-04-28 12:38:26,009:INFO:Importing libraries
2024-04-28 12:38:26,009:INFO:Copying training dataset
2024-04-28 12:38:26,014:INFO:Defining folds
2024-04-28 12:38:26,014:INFO:Declaring metric variables
2024-04-28 12:38:26,016:INFO:Importing untrained model
2024-04-28 12:38:26,017:INFO:Declaring custom model
2024-04-28 12:38:26,020:INFO:Ada Boost Classifier Imported successfully
2024-04-28 12:38:26,025:INFO:Starting cross validation
2024-04-28 12:38:26,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:38:26,511:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,515:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,519:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,530:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,532:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,535:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,536:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,540:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,540:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,545:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,546:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,549:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,549:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,551:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,551:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,554:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,556:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,556:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,557:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,557:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,558:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,561:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,562:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,565:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,598:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,603:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,605:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,608:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,609:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,613:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:26,619:INFO:Calculating mean and std
2024-04-28 12:38:26,620:INFO:Creating metrics dataframe
2024-04-28 12:38:26,625:INFO:Finalizing model
2024-04-28 12:38:26,991:INFO:Uploading results into container
2024-04-28 12:38:26,992:INFO:Uploading model into container now
2024-04-28 12:38:26,992:INFO:_master_model_container: 2
2024-04-28 12:38:26,992:INFO:_display_container: 3
2024-04-28 12:38:26,993:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.15,
                   n_estimators=100, random_state=27)
2024-04-28 12:38:26,993:INFO:create_model() successfully completed......................................
2024-04-28 12:38:27,161:INFO:SubProcess create_model() end ==================================
2024-04-28 12:38:27,162:INFO:choose_better activated
2024-04-28 12:38:27,164:INFO:SubProcess create_model() called ==================================
2024-04-28 12:38:27,165:INFO:Initializing create_model()
2024-04-28 12:38:27,165:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0A3A0D30>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:38:27,165:INFO:Checking exceptions
2024-04-28 12:38:27,166:INFO:Importing libraries
2024-04-28 12:38:27,166:INFO:Copying training dataset
2024-04-28 12:38:27,171:INFO:Defining folds
2024-04-28 12:38:27,171:INFO:Declaring metric variables
2024-04-28 12:38:27,171:INFO:Importing untrained model
2024-04-28 12:38:27,171:INFO:Declaring custom model
2024-04-28 12:38:27,172:INFO:Ada Boost Classifier Imported successfully
2024-04-28 12:38:27,172:INFO:Starting cross validation
2024-04-28 12:38:27,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 12:38:27,264:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,266:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,271:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,271:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,276:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,277:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,284:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,293:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,294:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,498:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,500:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,501:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,502:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,504:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,506:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,507:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,508:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,509:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,510:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,511:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,513:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,514:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,517:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,517:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,517:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,522:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,524:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,525:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,526:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,528:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,529:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,532:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,533:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,534:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,538:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,540:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,541:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,542:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,545:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 12:38:27,555:INFO:Calculating mean and std
2024-04-28 12:38:27,555:INFO:Creating metrics dataframe
2024-04-28 12:38:27,557:INFO:Finalizing model
2024-04-28 12:38:27,599:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 12:38:27,749:INFO:Uploading results into container
2024-04-28 12:38:27,750:INFO:Uploading model into container now
2024-04-28 12:38:27,750:INFO:_master_model_container: 3
2024-04-28 12:38:27,750:INFO:_display_container: 4
2024-04-28 12:38:27,750:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 12:38:27,750:INFO:create_model() successfully completed......................................
2024-04-28 12:38:27,918:INFO:SubProcess create_model() end ==================================
2024-04-28 12:38:27,919:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27) result for AUC is 0.5738
2024-04-28 12:38:27,919:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.15,
                   n_estimators=100, random_state=27) result for AUC is 0.5794
2024-04-28 12:38:27,919:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.15,
                   n_estimators=100, random_state=27) is best model
2024-04-28 12:38:27,919:INFO:choose_better completed
2024-04-28 12:38:27,926:INFO:_master_model_container: 3
2024-04-28 12:38:27,926:INFO:_display_container: 3
2024-04-28 12:38:27,927:INFO:AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.15,
                   n_estimators=100, random_state=27)
2024-04-28 12:38:27,927:INFO:tune_model() successfully completed......................................
2024-04-28 12:38:28,100:INFO:Initializing evaluate_model()
2024-04-28 12:38:28,100:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0A3A0D30>, estimator=AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.15,
                   n_estimators=100, random_state=27), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-04-28 12:38:28,118:INFO:Initializing plot_model()
2024-04-28 12:38:28,118:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.15,
                   n_estimators=100, random_state=27), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0A3A0D30>, system=True)
2024-04-28 12:38:28,118:INFO:Checking exceptions
2024-04-28 12:38:28,123:INFO:Preloading libraries
2024-04-28 12:38:28,130:INFO:Copying training dataset
2024-04-28 12:38:28,130:INFO:Plot type: pipeline
2024-04-28 12:38:28,260:INFO:Visual Rendered Successfully
2024-04-28 12:38:28,430:INFO:plot_model() successfully completed......................................
2024-04-28 12:38:28,431:INFO:Initializing finalize_model()
2024-04-28 12:38:28,431:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0A3A0D30>, estimator=AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.15,
                   n_estimators=100, random_state=27), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-28 12:38:28,431:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.15,
                   n_estimators=100, random_state=27)
2024-04-28 12:38:28,434:INFO:Initializing create_model()
2024-04-28 12:38:28,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0A3A0D30>, estimator=AdaBoostClassifier(algorithm='SAMME', estimator=None, learning_rate=0.15,
                   n_estimators=100, random_state=27), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 12:38:28,434:INFO:Checking exceptions
2024-04-28 12:38:28,435:INFO:Importing libraries
2024-04-28 12:38:28,435:INFO:Copying training dataset
2024-04-28 12:38:28,435:INFO:Defining folds
2024-04-28 12:38:28,436:INFO:Declaring metric variables
2024-04-28 12:38:28,436:INFO:Importing untrained model
2024-04-28 12:38:28,436:INFO:Declaring custom model
2024-04-28 12:38:28,436:INFO:Ada Boost Classifier Imported successfully
2024-04-28 12:38:28,437:INFO:Cross validation set to False
2024-04-28 12:38:28,437:INFO:Fitting Model
2024-04-28 12:38:28,816:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifetime_gifts',
                                             'largest_gift', 'last_gift',
                                             'm...
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'homeowner',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'female',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME', estimator=None,
                                    learning_rate=0.15, n_estimators=100,
                                    random_state=27))],
         verbose=False)
2024-04-28 12:38:28,816:INFO:create_model() successfully completed......................................
2024-04-28 12:38:28,969:INFO:_master_model_container: 3
2024-04-28 12:38:28,970:INFO:_display_container: 3
2024-04-28 12:38:29,011:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifetime_gifts',
                                             'largest_gift', 'last_gift',
                                             'm...
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'homeowner',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'female',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME', estimator=None,
                                    learning_rate=0.15, n_estimators=100,
                                    random_state=27))],
         verbose=False)
2024-04-28 12:38:29,011:INFO:finalize_model() successfully completed......................................
2024-04-28 12:38:29,206:INFO:Initializing predict_model()
2024-04-28 12:38:29,206:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0A3A0D30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifetime_gifts',
                                             'largest_gift', 'last_gift',
                                             'm...
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'homeowner',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'female',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME', estimator=None,
                                    learning_rate=0.15, n_estimators=100,
                                    random_state=27))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE0A5783A0>)
2024-04-28 12:38:29,206:INFO:Checking exceptions
2024-04-28 12:38:29,206:INFO:Preloading libraries
2024-04-28 12:38:29,207:INFO:Set up data.
2024-04-28 12:54:12,176:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\2189053954.py:16: FutureWarning: In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only.
  df = pd.concat(train,dev)

2024-04-28 12:56:11,878:INFO:PyCaret ClassificationExperiment
2024-04-28 12:56:11,878:INFO:Logging name: clf-default-name
2024-04-28 12:56:11,878:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:56:11,878:INFO:version 3.3.1
2024-04-28 12:56:11,878:INFO:Initializing setup()
2024-04-28 12:56:11,878:INFO:self.USI: d9ee
2024-04-28 12:56:11,879:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 12:56:11,879:INFO:Checking environment
2024-04-28 12:56:11,879:INFO:python_version: 3.9.12
2024-04-28 12:56:11,879:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 12:56:11,879:INFO:machine: AMD64
2024-04-28 12:56:11,879:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 12:56:11,882:INFO:Memory: svmem(total=34282364928, available=24650801152, percent=28.1, used=9631563776, free=24650801152)
2024-04-28 12:56:11,882:INFO:Physical Core: 6
2024-04-28 12:56:11,882:INFO:Logical Core: 12
2024-04-28 12:56:11,882:INFO:Checking libraries
2024-04-28 12:56:11,882:INFO:System:
2024-04-28 12:56:11,882:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:56:11,882:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 12:56:11,882:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 12:56:11,882:INFO:PyCaret required dependencies:
2024-04-28 12:56:11,883:INFO:                 pip: 21.2.4
2024-04-28 12:56:11,883:INFO:          setuptools: 61.2.0
2024-04-28 12:56:11,883:INFO:             pycaret: 3.3.1
2024-04-28 12:56:11,883:INFO:             IPython: 8.2.0
2024-04-28 12:56:11,883:INFO:          ipywidgets: 7.6.5
2024-04-28 12:56:11,883:INFO:                tqdm: 4.64.0
2024-04-28 12:56:11,883:INFO:               numpy: 1.21.5
2024-04-28 12:56:11,883:INFO:              pandas: 1.4.2
2024-04-28 12:56:11,883:INFO:              jinja2: 2.11.3
2024-04-28 12:56:11,883:INFO:               scipy: 1.7.3
2024-04-28 12:56:11,883:INFO:              joblib: 1.3.2
2024-04-28 12:56:11,883:INFO:             sklearn: 1.4.0
2024-04-28 12:56:11,883:INFO:                pyod: 1.1.3
2024-04-28 12:56:11,883:INFO:            imblearn: 0.12.2
2024-04-28 12:56:11,883:INFO:   category_encoders: 2.6.3
2024-04-28 12:56:11,883:INFO:            lightgbm: 4.3.0
2024-04-28 12:56:11,883:INFO:               numba: 0.55.1
2024-04-28 12:56:11,883:INFO:            requests: 2.27.1
2024-04-28 12:56:11,883:INFO:          matplotlib: 3.5.1
2024-04-28 12:56:11,883:INFO:          scikitplot: 0.3.7
2024-04-28 12:56:11,883:INFO:         yellowbrick: 1.5
2024-04-28 12:56:11,883:INFO:              plotly: 5.6.0
2024-04-28 12:56:11,883:INFO:    plotly-resampler: Not installed
2024-04-28 12:56:11,883:INFO:             kaleido: 0.2.1
2024-04-28 12:56:11,883:INFO:           schemdraw: 0.15
2024-04-28 12:56:11,883:INFO:         statsmodels: 0.13.2
2024-04-28 12:56:11,883:INFO:              sktime: 0.26.0
2024-04-28 12:56:11,883:INFO:               tbats: 1.1.3
2024-04-28 12:56:11,883:INFO:            pmdarima: 2.0.4
2024-04-28 12:56:11,883:INFO:              psutil: 5.9.8
2024-04-28 12:56:11,884:INFO:          markupsafe: 2.0.1
2024-04-28 12:56:11,884:INFO:             pickle5: Not installed
2024-04-28 12:56:11,884:INFO:         cloudpickle: 2.0.0
2024-04-28 12:56:11,884:INFO:         deprecation: 2.1.0
2024-04-28 12:56:11,884:INFO:              xxhash: 3.4.1
2024-04-28 12:56:11,884:INFO:           wurlitzer: Not installed
2024-04-28 12:56:11,884:INFO:PyCaret optional dependencies:
2024-04-28 12:56:11,884:INFO:                shap: Not installed
2024-04-28 12:56:11,884:INFO:           interpret: Not installed
2024-04-28 12:56:11,884:INFO:                umap: Not installed
2024-04-28 12:56:11,884:INFO:     ydata_profiling: Not installed
2024-04-28 12:56:11,884:INFO:  explainerdashboard: Not installed
2024-04-28 12:56:11,884:INFO:             autoviz: Not installed
2024-04-28 12:56:11,884:INFO:           fairlearn: Not installed
2024-04-28 12:56:11,884:INFO:          deepchecks: Not installed
2024-04-28 12:56:11,884:INFO:             xgboost: Not installed
2024-04-28 12:56:11,884:INFO:            catboost: Not installed
2024-04-28 12:56:11,884:INFO:              kmodes: Not installed
2024-04-28 12:56:11,884:INFO:             mlxtend: 0.23.1
2024-04-28 12:56:11,884:INFO:       statsforecast: Not installed
2024-04-28 12:56:11,884:INFO:        tune_sklearn: Not installed
2024-04-28 12:56:11,884:INFO:                 ray: Not installed
2024-04-28 12:56:11,884:INFO:            hyperopt: Not installed
2024-04-28 12:56:11,884:INFO:              optuna: 3.6.1
2024-04-28 12:56:11,884:INFO:               skopt: Not installed
2024-04-28 12:56:11,884:INFO:              mlflow: Not installed
2024-04-28 12:56:11,884:INFO:              gradio: Not installed
2024-04-28 12:56:11,884:INFO:             fastapi: Not installed
2024-04-28 12:56:11,885:INFO:             uvicorn: Not installed
2024-04-28 12:56:11,885:INFO:              m2cgen: Not installed
2024-04-28 12:56:11,885:INFO:           evidently: Not installed
2024-04-28 12:56:11,885:INFO:               fugue: Not installed
2024-04-28 12:56:11,885:INFO:           streamlit: 1.31.1
2024-04-28 12:56:11,885:INFO:             prophet: Not installed
2024-04-28 12:56:11,885:INFO:None
2024-04-28 12:56:11,885:INFO:Set up data.
2024-04-28 12:56:38,740:INFO:PyCaret ClassificationExperiment
2024-04-28 12:56:38,740:INFO:Logging name: clf-default-name
2024-04-28 12:56:38,740:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:56:38,740:INFO:version 3.3.1
2024-04-28 12:56:38,740:INFO:Initializing setup()
2024-04-28 12:56:38,741:INFO:self.USI: 233e
2024-04-28 12:56:38,741:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 12:56:38,741:INFO:Checking environment
2024-04-28 12:56:38,741:INFO:python_version: 3.9.12
2024-04-28 12:56:38,741:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 12:56:38,741:INFO:machine: AMD64
2024-04-28 12:56:38,741:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 12:56:38,744:INFO:Memory: svmem(total=34282364928, available=24717062144, percent=27.9, used=9565302784, free=24717062144)
2024-04-28 12:56:38,744:INFO:Physical Core: 6
2024-04-28 12:56:38,744:INFO:Logical Core: 12
2024-04-28 12:56:38,744:INFO:Checking libraries
2024-04-28 12:56:38,744:INFO:System:
2024-04-28 12:56:38,744:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:56:38,744:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 12:56:38,744:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 12:56:38,744:INFO:PyCaret required dependencies:
2024-04-28 12:56:38,744:INFO:                 pip: 21.2.4
2024-04-28 12:56:38,744:INFO:          setuptools: 61.2.0
2024-04-28 12:56:38,744:INFO:             pycaret: 3.3.1
2024-04-28 12:56:38,744:INFO:             IPython: 8.2.0
2024-04-28 12:56:38,744:INFO:          ipywidgets: 7.6.5
2024-04-28 12:56:38,744:INFO:                tqdm: 4.64.0
2024-04-28 12:56:38,744:INFO:               numpy: 1.21.5
2024-04-28 12:56:38,744:INFO:              pandas: 1.4.2
2024-04-28 12:56:38,744:INFO:              jinja2: 2.11.3
2024-04-28 12:56:38,744:INFO:               scipy: 1.7.3
2024-04-28 12:56:38,745:INFO:              joblib: 1.3.2
2024-04-28 12:56:38,745:INFO:             sklearn: 1.4.0
2024-04-28 12:56:38,745:INFO:                pyod: 1.1.3
2024-04-28 12:56:38,745:INFO:            imblearn: 0.12.2
2024-04-28 12:56:38,745:INFO:   category_encoders: 2.6.3
2024-04-28 12:56:38,745:INFO:            lightgbm: 4.3.0
2024-04-28 12:56:38,745:INFO:               numba: 0.55.1
2024-04-28 12:56:38,745:INFO:            requests: 2.27.1
2024-04-28 12:56:38,745:INFO:          matplotlib: 3.5.1
2024-04-28 12:56:38,745:INFO:          scikitplot: 0.3.7
2024-04-28 12:56:38,745:INFO:         yellowbrick: 1.5
2024-04-28 12:56:38,745:INFO:              plotly: 5.6.0
2024-04-28 12:56:38,745:INFO:    plotly-resampler: Not installed
2024-04-28 12:56:38,745:INFO:             kaleido: 0.2.1
2024-04-28 12:56:38,745:INFO:           schemdraw: 0.15
2024-04-28 12:56:38,745:INFO:         statsmodels: 0.13.2
2024-04-28 12:56:38,745:INFO:              sktime: 0.26.0
2024-04-28 12:56:38,745:INFO:               tbats: 1.1.3
2024-04-28 12:56:38,745:INFO:            pmdarima: 2.0.4
2024-04-28 12:56:38,745:INFO:              psutil: 5.9.8
2024-04-28 12:56:38,745:INFO:          markupsafe: 2.0.1
2024-04-28 12:56:38,745:INFO:             pickle5: Not installed
2024-04-28 12:56:38,745:INFO:         cloudpickle: 2.0.0
2024-04-28 12:56:38,745:INFO:         deprecation: 2.1.0
2024-04-28 12:56:38,745:INFO:              xxhash: 3.4.1
2024-04-28 12:56:38,745:INFO:           wurlitzer: Not installed
2024-04-28 12:56:38,745:INFO:PyCaret optional dependencies:
2024-04-28 12:56:38,745:INFO:                shap: Not installed
2024-04-28 12:56:38,746:INFO:           interpret: Not installed
2024-04-28 12:56:38,746:INFO:                umap: Not installed
2024-04-28 12:56:38,746:INFO:     ydata_profiling: Not installed
2024-04-28 12:56:38,746:INFO:  explainerdashboard: Not installed
2024-04-28 12:56:38,746:INFO:             autoviz: Not installed
2024-04-28 12:56:38,746:INFO:           fairlearn: Not installed
2024-04-28 12:56:38,746:INFO:          deepchecks: Not installed
2024-04-28 12:56:38,746:INFO:             xgboost: Not installed
2024-04-28 12:56:38,746:INFO:            catboost: Not installed
2024-04-28 12:56:38,746:INFO:              kmodes: Not installed
2024-04-28 12:56:38,746:INFO:             mlxtend: 0.23.1
2024-04-28 12:56:38,746:INFO:       statsforecast: Not installed
2024-04-28 12:56:38,746:INFO:        tune_sklearn: Not installed
2024-04-28 12:56:38,746:INFO:                 ray: Not installed
2024-04-28 12:56:38,746:INFO:            hyperopt: Not installed
2024-04-28 12:56:38,746:INFO:              optuna: 3.6.1
2024-04-28 12:56:38,746:INFO:               skopt: Not installed
2024-04-28 12:56:38,746:INFO:              mlflow: Not installed
2024-04-28 12:56:38,746:INFO:              gradio: Not installed
2024-04-28 12:56:38,746:INFO:             fastapi: Not installed
2024-04-28 12:56:38,746:INFO:             uvicorn: Not installed
2024-04-28 12:56:38,746:INFO:              m2cgen: Not installed
2024-04-28 12:56:38,746:INFO:           evidently: Not installed
2024-04-28 12:56:38,746:INFO:               fugue: Not installed
2024-04-28 12:56:38,746:INFO:           streamlit: 1.31.1
2024-04-28 12:56:38,746:INFO:             prophet: Not installed
2024-04-28 12:56:38,746:INFO:None
2024-04-28 12:56:38,746:INFO:Set up data.
2024-04-28 12:56:59,228:INFO:PyCaret ClassificationExperiment
2024-04-28 12:56:59,229:INFO:Logging name: clf-default-name
2024-04-28 12:56:59,229:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 12:56:59,229:INFO:version 3.3.1
2024-04-28 12:56:59,229:INFO:Initializing setup()
2024-04-28 12:56:59,229:INFO:self.USI: e066
2024-04-28 12:56:59,229:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 12:56:59,229:INFO:Checking environment
2024-04-28 12:56:59,229:INFO:python_version: 3.9.12
2024-04-28 12:56:59,229:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 12:56:59,229:INFO:machine: AMD64
2024-04-28 12:56:59,229:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 12:56:59,235:INFO:Memory: svmem(total=34282364928, available=24701091840, percent=27.9, used=9581273088, free=24701091840)
2024-04-28 12:56:59,235:INFO:Physical Core: 6
2024-04-28 12:56:59,235:INFO:Logical Core: 12
2024-04-28 12:56:59,236:INFO:Checking libraries
2024-04-28 12:56:59,236:INFO:System:
2024-04-28 12:56:59,236:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 12:56:59,236:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 12:56:59,236:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 12:56:59,236:INFO:PyCaret required dependencies:
2024-04-28 12:56:59,236:INFO:                 pip: 21.2.4
2024-04-28 12:56:59,236:INFO:          setuptools: 61.2.0
2024-04-28 12:56:59,236:INFO:             pycaret: 3.3.1
2024-04-28 12:56:59,236:INFO:             IPython: 8.2.0
2024-04-28 12:56:59,236:INFO:          ipywidgets: 7.6.5
2024-04-28 12:56:59,236:INFO:                tqdm: 4.64.0
2024-04-28 12:56:59,236:INFO:               numpy: 1.21.5
2024-04-28 12:56:59,236:INFO:              pandas: 1.4.2
2024-04-28 12:56:59,236:INFO:              jinja2: 2.11.3
2024-04-28 12:56:59,236:INFO:               scipy: 1.7.3
2024-04-28 12:56:59,236:INFO:              joblib: 1.3.2
2024-04-28 12:56:59,236:INFO:             sklearn: 1.4.0
2024-04-28 12:56:59,236:INFO:                pyod: 1.1.3
2024-04-28 12:56:59,236:INFO:            imblearn: 0.12.2
2024-04-28 12:56:59,236:INFO:   category_encoders: 2.6.3
2024-04-28 12:56:59,236:INFO:            lightgbm: 4.3.0
2024-04-28 12:56:59,236:INFO:               numba: 0.55.1
2024-04-28 12:56:59,236:INFO:            requests: 2.27.1
2024-04-28 12:56:59,236:INFO:          matplotlib: 3.5.1
2024-04-28 12:56:59,237:INFO:          scikitplot: 0.3.7
2024-04-28 12:56:59,237:INFO:         yellowbrick: 1.5
2024-04-28 12:56:59,237:INFO:              plotly: 5.6.0
2024-04-28 12:56:59,237:INFO:    plotly-resampler: Not installed
2024-04-28 12:56:59,237:INFO:             kaleido: 0.2.1
2024-04-28 12:56:59,237:INFO:           schemdraw: 0.15
2024-04-28 12:56:59,237:INFO:         statsmodels: 0.13.2
2024-04-28 12:56:59,237:INFO:              sktime: 0.26.0
2024-04-28 12:56:59,237:INFO:               tbats: 1.1.3
2024-04-28 12:56:59,237:INFO:            pmdarima: 2.0.4
2024-04-28 12:56:59,237:INFO:              psutil: 5.9.8
2024-04-28 12:56:59,237:INFO:          markupsafe: 2.0.1
2024-04-28 12:56:59,237:INFO:             pickle5: Not installed
2024-04-28 12:56:59,237:INFO:         cloudpickle: 2.0.0
2024-04-28 12:56:59,237:INFO:         deprecation: 2.1.0
2024-04-28 12:56:59,237:INFO:              xxhash: 3.4.1
2024-04-28 12:56:59,237:INFO:           wurlitzer: Not installed
2024-04-28 12:56:59,237:INFO:PyCaret optional dependencies:
2024-04-28 12:56:59,238:INFO:                shap: Not installed
2024-04-28 12:56:59,238:INFO:           interpret: Not installed
2024-04-28 12:56:59,238:INFO:                umap: Not installed
2024-04-28 12:56:59,238:INFO:     ydata_profiling: Not installed
2024-04-28 12:56:59,238:INFO:  explainerdashboard: Not installed
2024-04-28 12:56:59,238:INFO:             autoviz: Not installed
2024-04-28 12:56:59,238:INFO:           fairlearn: Not installed
2024-04-28 12:56:59,238:INFO:          deepchecks: Not installed
2024-04-28 12:56:59,238:INFO:             xgboost: Not installed
2024-04-28 12:56:59,238:INFO:            catboost: Not installed
2024-04-28 12:56:59,238:INFO:              kmodes: Not installed
2024-04-28 12:56:59,238:INFO:             mlxtend: 0.23.1
2024-04-28 12:56:59,238:INFO:       statsforecast: Not installed
2024-04-28 12:56:59,238:INFO:        tune_sklearn: Not installed
2024-04-28 12:56:59,238:INFO:                 ray: Not installed
2024-04-28 12:56:59,238:INFO:            hyperopt: Not installed
2024-04-28 12:56:59,238:INFO:              optuna: 3.6.1
2024-04-28 12:56:59,238:INFO:               skopt: Not installed
2024-04-28 12:56:59,238:INFO:              mlflow: Not installed
2024-04-28 12:56:59,238:INFO:              gradio: Not installed
2024-04-28 12:56:59,238:INFO:             fastapi: Not installed
2024-04-28 12:56:59,238:INFO:             uvicorn: Not installed
2024-04-28 12:56:59,238:INFO:              m2cgen: Not installed
2024-04-28 12:56:59,238:INFO:           evidently: Not installed
2024-04-28 12:56:59,238:INFO:               fugue: Not installed
2024-04-28 12:56:59,238:INFO:           streamlit: 1.31.1
2024-04-28 12:56:59,238:INFO:             prophet: Not installed
2024-04-28 12:56:59,238:INFO:None
2024-04-28 12:56:59,238:INFO:Set up data.
2024-04-28 12:56:59,248:INFO:Set up folding strategy.
2024-04-28 12:56:59,248:INFO:Set up train/test split.
2024-04-28 12:56:59,254:INFO:Set up index.
2024-04-28 12:56:59,254:INFO:Assigning column types.
2024-04-28 12:56:59,257:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 12:56:59,302:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:56:59,302:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:56:59,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 12:56:59,376:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:56:59,403:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,404:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 12:56:59,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:56:59,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 12:56:59,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,549:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 12:56:59,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 12:56:59,701:INFO:Preparing preprocessing pipeline...
2024-04-28 12:56:59,702:INFO:Set up label encoding.
2024-04-28 12:56:59,702:INFO:Set up simple imputation.
2024-04-28 12:56:59,705:INFO:Set up encoding of ordinal features.
2024-04-28 12:56:59,711:INFO:Set up encoding of categorical features.
2024-04-28 13:00:34,644:INFO:PyCaret ClassificationExperiment
2024-04-28 13:00:34,644:INFO:Logging name: clf-default-name
2024-04-28 13:00:34,644:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:00:34,644:INFO:version 3.3.1
2024-04-28 13:00:34,644:INFO:Initializing setup()
2024-04-28 13:00:34,644:INFO:self.USI: d39c
2024-04-28 13:00:34,644:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 13:00:34,645:INFO:Checking environment
2024-04-28 13:00:34,645:INFO:python_version: 3.9.12
2024-04-28 13:00:34,645:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 13:00:34,645:INFO:machine: AMD64
2024-04-28 13:00:34,645:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 13:00:34,648:INFO:Memory: svmem(total=34282364928, available=24745177088, percent=27.8, used=9537187840, free=24745177088)
2024-04-28 13:00:34,648:INFO:Physical Core: 6
2024-04-28 13:00:34,648:INFO:Logical Core: 12
2024-04-28 13:00:34,648:INFO:Checking libraries
2024-04-28 13:00:34,648:INFO:System:
2024-04-28 13:00:34,648:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:00:34,648:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 13:00:34,648:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 13:00:34,648:INFO:PyCaret required dependencies:
2024-04-28 13:00:34,648:INFO:                 pip: 21.2.4
2024-04-28 13:00:34,648:INFO:          setuptools: 61.2.0
2024-04-28 13:00:34,648:INFO:             pycaret: 3.3.1
2024-04-28 13:00:34,648:INFO:             IPython: 8.2.0
2024-04-28 13:00:34,648:INFO:          ipywidgets: 7.6.5
2024-04-28 13:00:34,648:INFO:                tqdm: 4.64.0
2024-04-28 13:00:34,648:INFO:               numpy: 1.21.5
2024-04-28 13:00:34,648:INFO:              pandas: 1.4.2
2024-04-28 13:00:34,649:INFO:              jinja2: 2.11.3
2024-04-28 13:00:34,649:INFO:               scipy: 1.7.3
2024-04-28 13:00:34,649:INFO:              joblib: 1.3.2
2024-04-28 13:00:34,649:INFO:             sklearn: 1.4.0
2024-04-28 13:00:34,649:INFO:                pyod: 1.1.3
2024-04-28 13:00:34,649:INFO:            imblearn: 0.12.2
2024-04-28 13:00:34,649:INFO:   category_encoders: 2.6.3
2024-04-28 13:00:34,649:INFO:            lightgbm: 4.3.0
2024-04-28 13:00:34,649:INFO:               numba: 0.55.1
2024-04-28 13:00:34,649:INFO:            requests: 2.27.1
2024-04-28 13:00:34,649:INFO:          matplotlib: 3.5.1
2024-04-28 13:00:34,649:INFO:          scikitplot: 0.3.7
2024-04-28 13:00:34,649:INFO:         yellowbrick: 1.5
2024-04-28 13:00:34,649:INFO:              plotly: 5.6.0
2024-04-28 13:00:34,649:INFO:    plotly-resampler: Not installed
2024-04-28 13:00:34,649:INFO:             kaleido: 0.2.1
2024-04-28 13:00:34,649:INFO:           schemdraw: 0.15
2024-04-28 13:00:34,649:INFO:         statsmodels: 0.13.2
2024-04-28 13:00:34,649:INFO:              sktime: 0.26.0
2024-04-28 13:00:34,649:INFO:               tbats: 1.1.3
2024-04-28 13:00:34,649:INFO:            pmdarima: 2.0.4
2024-04-28 13:00:34,649:INFO:              psutil: 5.9.8
2024-04-28 13:00:34,649:INFO:          markupsafe: 2.0.1
2024-04-28 13:00:34,649:INFO:             pickle5: Not installed
2024-04-28 13:00:34,649:INFO:         cloudpickle: 2.0.0
2024-04-28 13:00:34,649:INFO:         deprecation: 2.1.0
2024-04-28 13:00:34,649:INFO:              xxhash: 3.4.1
2024-04-28 13:00:34,649:INFO:           wurlitzer: Not installed
2024-04-28 13:00:34,649:INFO:PyCaret optional dependencies:
2024-04-28 13:00:34,649:INFO:                shap: Not installed
2024-04-28 13:00:34,650:INFO:           interpret: Not installed
2024-04-28 13:00:34,650:INFO:                umap: Not installed
2024-04-28 13:00:34,650:INFO:     ydata_profiling: Not installed
2024-04-28 13:00:34,650:INFO:  explainerdashboard: Not installed
2024-04-28 13:00:34,650:INFO:             autoviz: Not installed
2024-04-28 13:00:34,650:INFO:           fairlearn: Not installed
2024-04-28 13:00:34,650:INFO:          deepchecks: Not installed
2024-04-28 13:00:34,650:INFO:             xgboost: Not installed
2024-04-28 13:00:34,650:INFO:            catboost: Not installed
2024-04-28 13:00:34,650:INFO:              kmodes: Not installed
2024-04-28 13:00:34,650:INFO:             mlxtend: 0.23.1
2024-04-28 13:00:34,650:INFO:       statsforecast: Not installed
2024-04-28 13:00:34,650:INFO:        tune_sklearn: Not installed
2024-04-28 13:00:34,650:INFO:                 ray: Not installed
2024-04-28 13:00:34,650:INFO:            hyperopt: Not installed
2024-04-28 13:00:34,650:INFO:              optuna: 3.6.1
2024-04-28 13:00:34,650:INFO:               skopt: Not installed
2024-04-28 13:00:34,650:INFO:              mlflow: Not installed
2024-04-28 13:00:34,650:INFO:              gradio: Not installed
2024-04-28 13:00:34,650:INFO:             fastapi: Not installed
2024-04-28 13:00:34,650:INFO:             uvicorn: Not installed
2024-04-28 13:00:34,650:INFO:              m2cgen: Not installed
2024-04-28 13:00:34,650:INFO:           evidently: Not installed
2024-04-28 13:00:34,650:INFO:               fugue: Not installed
2024-04-28 13:00:34,650:INFO:           streamlit: 1.31.1
2024-04-28 13:00:34,650:INFO:             prophet: Not installed
2024-04-28 13:00:34,650:INFO:None
2024-04-28 13:00:34,650:INFO:Set up data.
2024-04-28 13:00:34,660:INFO:Set up folding strategy.
2024-04-28 13:00:34,660:INFO:Set up train/test split.
2024-04-28 13:00:34,665:INFO:Set up index.
2024-04-28 13:00:34,665:INFO:Assigning column types.
2024-04-28 13:00:34,668:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:00:34,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:00:34,712:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:00:34,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:34,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:34,785:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:00:34,786:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:00:34,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:34,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:34,814:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:00:34,860:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:00:34,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:34,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:34,933:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:00:34,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:34,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:34,961:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:00:35,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:35,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:35,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:35,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:00:35,105:INFO:Preparing preprocessing pipeline...
2024-04-28 13:00:35,105:INFO:Set up label encoding.
2024-04-28 13:00:35,106:INFO:Set up simple imputation.
2024-04-28 13:00:35,109:INFO:Set up encoding of ordinal features.
2024-04-28 13:00:35,114:INFO:Set up encoding of categorical features.
2024-04-28 13:03:50,874:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\2596756346.py:85: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.fillna(df.mean(), inplace=True)

2024-04-28 13:03:50,923:INFO:PyCaret ClassificationExperiment
2024-04-28 13:03:50,923:INFO:Logging name: clf-default-name
2024-04-28 13:03:50,923:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:03:50,923:INFO:version 3.3.1
2024-04-28 13:03:50,923:INFO:Initializing setup()
2024-04-28 13:03:50,923:INFO:self.USI: b573
2024-04-28 13:03:50,923:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 13:03:50,923:INFO:Checking environment
2024-04-28 13:03:50,923:INFO:python_version: 3.9.12
2024-04-28 13:03:50,923:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 13:03:50,923:INFO:machine: AMD64
2024-04-28 13:03:50,923:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 13:03:50,926:INFO:Memory: svmem(total=34282364928, available=24688361472, percent=28.0, used=9594003456, free=24688361472)
2024-04-28 13:03:50,926:INFO:Physical Core: 6
2024-04-28 13:03:50,926:INFO:Logical Core: 12
2024-04-28 13:03:50,926:INFO:Checking libraries
2024-04-28 13:03:50,926:INFO:System:
2024-04-28 13:03:50,926:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:03:50,926:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 13:03:50,926:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 13:03:50,926:INFO:PyCaret required dependencies:
2024-04-28 13:03:50,926:INFO:                 pip: 21.2.4
2024-04-28 13:03:50,926:INFO:          setuptools: 61.2.0
2024-04-28 13:03:50,926:INFO:             pycaret: 3.3.1
2024-04-28 13:03:50,926:INFO:             IPython: 8.2.0
2024-04-28 13:03:50,926:INFO:          ipywidgets: 7.6.5
2024-04-28 13:03:50,926:INFO:                tqdm: 4.64.0
2024-04-28 13:03:50,926:INFO:               numpy: 1.21.5
2024-04-28 13:03:50,926:INFO:              pandas: 1.4.2
2024-04-28 13:03:50,926:INFO:              jinja2: 2.11.3
2024-04-28 13:03:50,926:INFO:               scipy: 1.7.3
2024-04-28 13:03:50,926:INFO:              joblib: 1.3.2
2024-04-28 13:03:50,926:INFO:             sklearn: 1.4.0
2024-04-28 13:03:50,926:INFO:                pyod: 1.1.3
2024-04-28 13:03:50,927:INFO:            imblearn: 0.12.2
2024-04-28 13:03:50,927:INFO:   category_encoders: 2.6.3
2024-04-28 13:03:50,927:INFO:            lightgbm: 4.3.0
2024-04-28 13:03:50,927:INFO:               numba: 0.55.1
2024-04-28 13:03:50,927:INFO:            requests: 2.27.1
2024-04-28 13:03:50,927:INFO:          matplotlib: 3.5.1
2024-04-28 13:03:50,927:INFO:          scikitplot: 0.3.7
2024-04-28 13:03:50,927:INFO:         yellowbrick: 1.5
2024-04-28 13:03:50,927:INFO:              plotly: 5.6.0
2024-04-28 13:03:50,927:INFO:    plotly-resampler: Not installed
2024-04-28 13:03:50,927:INFO:             kaleido: 0.2.1
2024-04-28 13:03:50,927:INFO:           schemdraw: 0.15
2024-04-28 13:03:50,927:INFO:         statsmodels: 0.13.2
2024-04-28 13:03:50,927:INFO:              sktime: 0.26.0
2024-04-28 13:03:50,927:INFO:               tbats: 1.1.3
2024-04-28 13:03:50,927:INFO:            pmdarima: 2.0.4
2024-04-28 13:03:50,927:INFO:              psutil: 5.9.8
2024-04-28 13:03:50,927:INFO:          markupsafe: 2.0.1
2024-04-28 13:03:50,927:INFO:             pickle5: Not installed
2024-04-28 13:03:50,927:INFO:         cloudpickle: 2.0.0
2024-04-28 13:03:50,927:INFO:         deprecation: 2.1.0
2024-04-28 13:03:50,927:INFO:              xxhash: 3.4.1
2024-04-28 13:03:50,927:INFO:           wurlitzer: Not installed
2024-04-28 13:03:50,927:INFO:PyCaret optional dependencies:
2024-04-28 13:03:50,927:INFO:                shap: Not installed
2024-04-28 13:03:50,927:INFO:           interpret: Not installed
2024-04-28 13:03:50,927:INFO:                umap: Not installed
2024-04-28 13:03:50,927:INFO:     ydata_profiling: Not installed
2024-04-28 13:03:50,927:INFO:  explainerdashboard: Not installed
2024-04-28 13:03:50,928:INFO:             autoviz: Not installed
2024-04-28 13:03:50,928:INFO:           fairlearn: Not installed
2024-04-28 13:03:50,928:INFO:          deepchecks: Not installed
2024-04-28 13:03:50,928:INFO:             xgboost: Not installed
2024-04-28 13:03:50,928:INFO:            catboost: Not installed
2024-04-28 13:03:50,928:INFO:              kmodes: Not installed
2024-04-28 13:03:50,928:INFO:             mlxtend: 0.23.1
2024-04-28 13:03:50,928:INFO:       statsforecast: Not installed
2024-04-28 13:03:50,928:INFO:        tune_sklearn: Not installed
2024-04-28 13:03:50,928:INFO:                 ray: Not installed
2024-04-28 13:03:50,928:INFO:            hyperopt: Not installed
2024-04-28 13:03:50,928:INFO:              optuna: 3.6.1
2024-04-28 13:03:50,928:INFO:               skopt: Not installed
2024-04-28 13:03:50,928:INFO:              mlflow: Not installed
2024-04-28 13:03:50,928:INFO:              gradio: Not installed
2024-04-28 13:03:50,928:INFO:             fastapi: Not installed
2024-04-28 13:03:50,928:INFO:             uvicorn: Not installed
2024-04-28 13:03:50,928:INFO:              m2cgen: Not installed
2024-04-28 13:03:50,928:INFO:           evidently: Not installed
2024-04-28 13:03:50,928:INFO:               fugue: Not installed
2024-04-28 13:03:50,928:INFO:           streamlit: 1.31.1
2024-04-28 13:03:50,928:INFO:             prophet: Not installed
2024-04-28 13:03:50,928:INFO:None
2024-04-28 13:03:50,928:INFO:Set up data.
2024-04-28 13:03:50,938:INFO:Set up folding strategy.
2024-04-28 13:03:50,938:INFO:Set up train/test split.
2024-04-28 13:03:50,944:INFO:Set up index.
2024-04-28 13:03:50,944:INFO:Assigning column types.
2024-04-28 13:03:50,947:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:03:50,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:03:50,993:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:03:51,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:03:51,066:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:03:51,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,095:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:03:51,140:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:03:51,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:03:51,240:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,240:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:03:51,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:51,387:INFO:Preparing preprocessing pipeline...
2024-04-28 13:03:51,388:INFO:Set up label encoding.
2024-04-28 13:03:51,388:INFO:Set up simple imputation.
2024-04-28 13:03:51,392:INFO:Set up encoding of ordinal features.
2024-04-28 13:03:51,400:INFO:Set up encoding of categorical features.
2024-04-28 13:03:51,401:INFO:Set up imbalanced handling.
2024-04-28 13:03:51,551:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:03:51,609:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifet...
                                    transformer=OneHotEncoder(cols=['homeowner_children',
                                                                    'zip_gender'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=27,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-04-28 13:03:51,609:INFO:Creating final display dataframe.
2024-04-28 13:03:52,257:INFO:Setup _display_container:                     Description                  Value
0                    Session id                     27
1                        Target                 target
2                   Target type                 Binary
3                Target mapping  Donor: 0, No Donor: 1
4           Original data shape             (2999, 31)
5        Transformed data shape             (3002, 48)
6   Transformed train set shape             (2102, 48)
7    Transformed test set shape              (900, 48)
8              Numeric features                     20
9          Categorical features                     10
10                   Preprocess                   True
11              Imputation type                 simple
12           Numeric imputation                   mean
13       Categorical imputation                   mode
14     Maximum one-hot encoding                     25
15              Encoding method                   None
16                Fix imbalance                   True
17         Fix imbalance method                  SMOTE
18               Fold Generator        StratifiedKFold
19                  Fold Number                     10
20                     CPU Jobs                     -1
21                      Use GPU                  False
22               Log Experiment                  False
23              Experiment Name       clf-default-name
24                          USI                   b573
2024-04-28 13:03:52,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:52,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:52,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:52,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:03:52,412:INFO:setup() successfully completed in 1.49s...............
2024-04-28 13:03:52,412:INFO:Initializing compare_models()
2024-04-28 13:03:52,412:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:03:52,412:INFO:Checking exceptions
2024-04-28 13:03:52,415:INFO:Preparing display monitor
2024-04-28 13:03:52,439:INFO:Initializing Logistic Regression
2024-04-28 13:03:52,439:INFO:Total runtime is 0.0 minutes
2024-04-28 13:03:52,441:INFO:SubProcess create_model() called ==================================
2024-04-28 13:03:52,441:INFO:Initializing create_model()
2024-04-28 13:03:52,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:03:52,442:INFO:Checking exceptions
2024-04-28 13:03:52,442:INFO:Importing libraries
2024-04-28 13:03:52,442:INFO:Copying training dataset
2024-04-28 13:03:52,448:INFO:Defining folds
2024-04-28 13:03:52,448:INFO:Declaring metric variables
2024-04-28 13:03:52,451:INFO:Importing untrained model
2024-04-28 13:03:52,453:INFO:Logistic Regression Imported successfully
2024-04-28 13:03:52,458:INFO:Starting cross validation
2024-04-28 13:03:52,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:00,199:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,211:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,213:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,226:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,234:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,236:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,238:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,250:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,252:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,256:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,257:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,259:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:00,261:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,265:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,271:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,276:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,279:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,281:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,283:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,288:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,293:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,294:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,295:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,297:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,298:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,305:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,307:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,310:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,312:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,313:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,317:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,317:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,321:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,326:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,331:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,336:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,371:INFO:Calculating mean and std
2024-04-28 13:04:00,373:INFO:Creating metrics dataframe
2024-04-28 13:04:00,378:INFO:Uploading results into container
2024-04-28 13:04:00,378:INFO:Uploading model into container now
2024-04-28 13:04:00,379:INFO:_master_model_container: 1
2024-04-28 13:04:00,379:INFO:_display_container: 2
2024-04-28 13:04:00,379:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:04:00,379:INFO:create_model() successfully completed......................................
2024-04-28 13:04:00,637:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:00,637:INFO:Creating metrics dataframe
2024-04-28 13:04:00,643:INFO:Initializing K Neighbors Classifier
2024-04-28 13:04:00,643:INFO:Total runtime is 0.13674097458521525 minutes
2024-04-28 13:04:00,645:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:00,646:INFO:Initializing create_model()
2024-04-28 13:04:00,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:00,646:INFO:Checking exceptions
2024-04-28 13:04:00,646:INFO:Importing libraries
2024-04-28 13:04:00,646:INFO:Copying training dataset
2024-04-28 13:04:00,650:INFO:Defining folds
2024-04-28 13:04:00,651:INFO:Declaring metric variables
2024-04-28 13:04:00,653:INFO:Importing untrained model
2024-04-28 13:04:00,655:INFO:K Neighbors Classifier Imported successfully
2024-04-28 13:04:00,660:INFO:Starting cross validation
2024-04-28 13:04:00,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:00,933:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:00,936:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:00,938:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:00,939:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:00,940:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:00,941:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,941:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:00,943:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:00,943:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:00,944:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:00,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,946:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,947:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:00,948:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

his is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:00,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,950:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,951:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,952:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,952:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:00,952:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:00,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:00,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,955:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,956:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,957:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 209)

  warnings.warn(

2024-04-28 13:04:00,958:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:00,959:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,960:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,960:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,961:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,963:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,963:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,965:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,966:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:00,969:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:04,925:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:04,928:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:04,930:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:04,933:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:04,936:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:04,973:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:04,976:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:04,978:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:04,981:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:04,983:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:04,990:INFO:Calculating mean and std
2024-04-28 13:04:04,991:INFO:Creating metrics dataframe
2024-04-28 13:04:04,994:INFO:Uploading results into container
2024-04-28 13:04:04,994:INFO:Uploading model into container now
2024-04-28 13:04:04,995:INFO:_master_model_container: 2
2024-04-28 13:04:04,995:INFO:_display_container: 2
2024-04-28 13:04:04,995:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-28 13:04:04,995:INFO:create_model() successfully completed......................................
2024-04-28 13:04:05,172:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:05,172:INFO:Creating metrics dataframe
2024-04-28 13:04:05,179:INFO:Initializing Naive Bayes
2024-04-28 13:04:05,179:INFO:Total runtime is 0.2123430371284485 minutes
2024-04-28 13:04:05,181:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:05,182:INFO:Initializing create_model()
2024-04-28 13:04:05,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:05,182:INFO:Checking exceptions
2024-04-28 13:04:05,182:INFO:Importing libraries
2024-04-28 13:04:05,182:INFO:Copying training dataset
2024-04-28 13:04:05,188:INFO:Defining folds
2024-04-28 13:04:05,188:INFO:Declaring metric variables
2024-04-28 13:04:05,191:INFO:Importing untrained model
2024-04-28 13:04:05,194:INFO:Naive Bayes Imported successfully
2024-04-28 13:04:05,198:INFO:Starting cross validation
2024-04-28 13:04:05,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:05,423:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,424:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,425:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,427:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,428:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,430:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,431:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,434:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,434:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,435:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,435:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,435:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,435:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,436:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,436:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 209)

  warnings.warn(

2024-04-28 13:04:05,436:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,437:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,439:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,440:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,440:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,442:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,443:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,443:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,443:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,444:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,445:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,446:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,446:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,447:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,447:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,447:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,449:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,450:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,450:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,451:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,452:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,452:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,453:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,455:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,455:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,458:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,458:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,461:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,466:INFO:Calculating mean and std
2024-04-28 13:04:05,467:INFO:Creating metrics dataframe
2024-04-28 13:04:05,470:INFO:Uploading results into container
2024-04-28 13:04:05,470:INFO:Uploading model into container now
2024-04-28 13:04:05,470:INFO:_master_model_container: 3
2024-04-28 13:04:05,470:INFO:_display_container: 2
2024-04-28 13:04:05,471:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-28 13:04:05,471:INFO:create_model() successfully completed......................................
2024-04-28 13:04:05,643:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:05,643:INFO:Creating metrics dataframe
2024-04-28 13:04:05,650:INFO:Initializing Decision Tree Classifier
2024-04-28 13:04:05,650:INFO:Total runtime is 0.22018349170684814 minutes
2024-04-28 13:04:05,652:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:05,652:INFO:Initializing create_model()
2024-04-28 13:04:05,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:05,652:INFO:Checking exceptions
2024-04-28 13:04:05,653:INFO:Importing libraries
2024-04-28 13:04:05,653:INFO:Copying training dataset
2024-04-28 13:04:05,659:INFO:Defining folds
2024-04-28 13:04:05,659:INFO:Declaring metric variables
2024-04-28 13:04:05,662:INFO:Importing untrained model
2024-04-28 13:04:05,665:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:04:05,670:INFO:Starting cross validation
2024-04-28 13:04:05,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:05,901:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,902:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,902:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,903:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,903:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,904:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,906:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,907:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,908:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,909:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,933:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,933:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,935:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,937:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,940:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,941:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,941:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,942:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,943:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,943:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,944:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,944:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,944:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 209)

  warnings.warn(

2024-04-28 13:04:05,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,946:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,946:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,947:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,947:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:05,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,948:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:05,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,950:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,951:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,951:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,952:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,952:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,953:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,955:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,957:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:05,973:INFO:Calculating mean and std
2024-04-28 13:04:05,974:INFO:Creating metrics dataframe
2024-04-28 13:04:05,977:INFO:Uploading results into container
2024-04-28 13:04:05,977:INFO:Uploading model into container now
2024-04-28 13:04:05,977:INFO:_master_model_container: 4
2024-04-28 13:04:05,977:INFO:_display_container: 2
2024-04-28 13:04:05,978:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-28 13:04:05,978:INFO:create_model() successfully completed......................................
2024-04-28 13:04:06,146:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:06,146:INFO:Creating metrics dataframe
2024-04-28 13:04:06,153:INFO:Initializing SVM - Linear Kernel
2024-04-28 13:04:06,154:INFO:Total runtime is 0.2285866936047872 minutes
2024-04-28 13:04:06,156:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:06,156:INFO:Initializing create_model()
2024-04-28 13:04:06,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:06,157:INFO:Checking exceptions
2024-04-28 13:04:06,157:INFO:Importing libraries
2024-04-28 13:04:06,157:INFO:Copying training dataset
2024-04-28 13:04:06,162:INFO:Defining folds
2024-04-28 13:04:06,162:INFO:Declaring metric variables
2024-04-28 13:04:06,164:INFO:Importing untrained model
2024-04-28 13:04:06,166:INFO:SVM - Linear Kernel Imported successfully
2024-04-28 13:04:06,171:INFO:Starting cross validation
2024-04-28 13:04:06,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:06,418:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,421:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,423:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,423:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,424:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,425:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,427:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,428:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,428:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,430:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,431:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,432:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,432:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,432:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:06,434:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,434:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,436:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,438:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,438:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,442:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,442:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:06,444:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,445:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,445:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,446:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,447:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:06,447:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,449:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,450:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,460:INFO:Calculating mean and std
2024-04-28 13:04:06,461:INFO:Creating metrics dataframe
2024-04-28 13:04:06,464:INFO:Uploading results into container
2024-04-28 13:04:06,464:INFO:Uploading model into container now
2024-04-28 13:04:06,465:INFO:_master_model_container: 5
2024-04-28 13:04:06,465:INFO:_display_container: 2
2024-04-28 13:04:06,465:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-28 13:04:06,465:INFO:create_model() successfully completed......................................
2024-04-28 13:04:06,642:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:06,642:INFO:Creating metrics dataframe
2024-04-28 13:04:06,649:INFO:Initializing Ridge Classifier
2024-04-28 13:04:06,649:INFO:Total runtime is 0.23682751655578616 minutes
2024-04-28 13:04:06,652:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:06,652:INFO:Initializing create_model()
2024-04-28 13:04:06,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:06,652:INFO:Checking exceptions
2024-04-28 13:04:06,652:INFO:Importing libraries
2024-04-28 13:04:06,652:INFO:Copying training dataset
2024-04-28 13:04:06,658:INFO:Defining folds
2024-04-28 13:04:06,659:INFO:Declaring metric variables
2024-04-28 13:04:06,661:INFO:Importing untrained model
2024-04-28 13:04:06,663:INFO:Ridge Classifier Imported successfully
2024-04-28 13:04:06,667:INFO:Starting cross validation
2024-04-28 13:04:06,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:06,891:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,893:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,895:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,896:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,900:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,903:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,904:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,904:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,908:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,908:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,909:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,910:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,912:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,912:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,913:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,913:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,913:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,914:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,914:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,915:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,916:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,916:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,917:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,918:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,918:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,919:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,921:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,921:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,923:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,926:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:06,935:INFO:Calculating mean and std
2024-04-28 13:04:06,936:INFO:Creating metrics dataframe
2024-04-28 13:04:06,939:INFO:Uploading results into container
2024-04-28 13:04:06,939:INFO:Uploading model into container now
2024-04-28 13:04:06,939:INFO:_master_model_container: 6
2024-04-28 13:04:06,939:INFO:_display_container: 2
2024-04-28 13:04:06,940:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 13:04:06,940:INFO:create_model() successfully completed......................................
2024-04-28 13:04:07,101:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:07,102:INFO:Creating metrics dataframe
2024-04-28 13:04:07,109:INFO:Initializing Random Forest Classifier
2024-04-28 13:04:07,109:INFO:Total runtime is 0.24450116952260337 minutes
2024-04-28 13:04:07,111:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:07,112:INFO:Initializing create_model()
2024-04-28 13:04:07,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:07,112:INFO:Checking exceptions
2024-04-28 13:04:07,112:INFO:Importing libraries
2024-04-28 13:04:07,112:INFO:Copying training dataset
2024-04-28 13:04:07,117:INFO:Defining folds
2024-04-28 13:04:07,117:INFO:Declaring metric variables
2024-04-28 13:04:07,119:INFO:Importing untrained model
2024-04-28 13:04:07,121:INFO:Random Forest Classifier Imported successfully
2024-04-28 13:04:07,126:INFO:Starting cross validation
2024-04-28 13:04:07,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:07,844:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:07,845:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:07,847:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,847:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:07,850:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,852:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,855:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,856:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,859:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,861:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:07,861:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:07,862:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:07,863:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:07,864:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,865:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,869:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,869:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,873:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,874:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,891:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:07,892:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:07,892:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:07,892:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:07,894:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,894:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,896:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,897:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,899:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,900:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,906:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:07,906:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:07,906:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:07,907:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 209)

  warnings.warn(

2024-04-28 13:04:07,907:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:07,908:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,908:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,909:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,911:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,911:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,911:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,913:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,913:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,914:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,936:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:07,937:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:07,938:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,941:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,943:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:07,949:INFO:Calculating mean and std
2024-04-28 13:04:07,950:INFO:Creating metrics dataframe
2024-04-28 13:04:07,953:INFO:Uploading results into container
2024-04-28 13:04:07,953:INFO:Uploading model into container now
2024-04-28 13:04:07,953:INFO:_master_model_container: 7
2024-04-28 13:04:07,953:INFO:_display_container: 2
2024-04-28 13:04:07,954:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-28 13:04:07,954:INFO:create_model() successfully completed......................................
2024-04-28 13:04:08,124:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:08,124:INFO:Creating metrics dataframe
2024-04-28 13:04:08,132:INFO:Initializing Quadratic Discriminant Analysis
2024-04-28 13:04:08,132:INFO:Total runtime is 0.2615500132242839 minutes
2024-04-28 13:04:08,135:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:08,135:INFO:Initializing create_model()
2024-04-28 13:04:08,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:08,135:INFO:Checking exceptions
2024-04-28 13:04:08,135:INFO:Importing libraries
2024-04-28 13:04:08,136:INFO:Copying training dataset
2024-04-28 13:04:08,140:INFO:Defining folds
2024-04-28 13:04:08,141:INFO:Declaring metric variables
2024-04-28 13:04:08,143:INFO:Importing untrained model
2024-04-28 13:04:08,146:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-28 13:04:08,151:INFO:Starting cross validation
2024-04-28 13:04:08,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:08,329:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,334:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,337:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,341:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,342:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,348:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,354:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,355:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,356:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,362:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:04:08,369:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,371:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,373:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,374:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,376:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,379:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,389:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,389:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,392:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,393:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,393:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,394:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,394:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,397:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,397:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,398:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,398:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,400:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,401:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,402:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,403:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,403:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,405:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,406:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,408:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,409:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,411:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,412:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,415:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,418:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:08,425:INFO:Calculating mean and std
2024-04-28 13:04:08,426:INFO:Creating metrics dataframe
2024-04-28 13:04:08,429:INFO:Uploading results into container
2024-04-28 13:04:08,429:INFO:Uploading model into container now
2024-04-28 13:04:08,429:INFO:_master_model_container: 8
2024-04-28 13:04:08,429:INFO:_display_container: 2
2024-04-28 13:04:08,430:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-28 13:04:08,430:INFO:create_model() successfully completed......................................
2024-04-28 13:04:08,592:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:08,592:INFO:Creating metrics dataframe
2024-04-28 13:04:08,600:INFO:Initializing Ada Boost Classifier
2024-04-28 13:04:08,600:INFO:Total runtime is 0.2693458159764608 minutes
2024-04-28 13:04:08,603:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:08,603:INFO:Initializing create_model()
2024-04-28 13:04:08,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:08,604:INFO:Checking exceptions
2024-04-28 13:04:08,604:INFO:Importing libraries
2024-04-28 13:04:08,604:INFO:Copying training dataset
2024-04-28 13:04:08,608:INFO:Defining folds
2024-04-28 13:04:08,608:INFO:Declaring metric variables
2024-04-28 13:04:08,611:INFO:Importing untrained model
2024-04-28 13:04:08,613:INFO:Ada Boost Classifier Imported successfully
2024-04-28 13:04:08,618:INFO:Starting cross validation
2024-04-28 13:04:08,620:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:08,788:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:08,790:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:08,800:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:08,804:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:08,807:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:08,808:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:08,809:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:08,811:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:08,813:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:08,815:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:04:09,088:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,093:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,097:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,105:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,106:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,107:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,109:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,111:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,111:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,115:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,116:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,118:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,118:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,120:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,122:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,122:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,123:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,124:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,125:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,126:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,128:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,128:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,128:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,131:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,132:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,133:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:09,143:INFO:Calculating mean and std
2024-04-28 13:04:09,144:INFO:Creating metrics dataframe
2024-04-28 13:04:09,147:INFO:Uploading results into container
2024-04-28 13:04:09,147:INFO:Uploading model into container now
2024-04-28 13:04:09,147:INFO:_master_model_container: 9
2024-04-28 13:04:09,147:INFO:_display_container: 2
2024-04-28 13:04:09,147:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 13:04:09,148:INFO:create_model() successfully completed......................................
2024-04-28 13:04:09,319:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:09,319:INFO:Creating metrics dataframe
2024-04-28 13:04:09,328:INFO:Initializing Gradient Boosting Classifier
2024-04-28 13:04:09,328:INFO:Total runtime is 0.2814901908238729 minutes
2024-04-28 13:04:09,330:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:09,331:INFO:Initializing create_model()
2024-04-28 13:04:09,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:09,331:INFO:Checking exceptions
2024-04-28 13:04:09,331:INFO:Importing libraries
2024-04-28 13:04:09,331:INFO:Copying training dataset
2024-04-28 13:04:09,336:INFO:Defining folds
2024-04-28 13:04:09,336:INFO:Declaring metric variables
2024-04-28 13:04:09,339:INFO:Importing untrained model
2024-04-28 13:04:09,341:INFO:Gradient Boosting Classifier Imported successfully
2024-04-28 13:04:09,345:INFO:Starting cross validation
2024-04-28 13:04:09,347:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:10,401:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,405:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,409:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,421:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,426:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,430:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,431:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,432:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,435:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,435:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,437:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,442:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,443:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,445:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,446:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,446:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,448:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,450:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,450:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,454:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,461:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,464:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,464:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,466:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,467:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,469:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,481:INFO:Calculating mean and std
2024-04-28 13:04:10,482:INFO:Creating metrics dataframe
2024-04-28 13:04:10,485:INFO:Uploading results into container
2024-04-28 13:04:10,485:INFO:Uploading model into container now
2024-04-28 13:04:10,485:INFO:_master_model_container: 10
2024-04-28 13:04:10,485:INFO:_display_container: 2
2024-04-28 13:04:10,486:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-28 13:04:10,486:INFO:create_model() successfully completed......................................
2024-04-28 13:04:10,652:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:10,652:INFO:Creating metrics dataframe
2024-04-28 13:04:10,660:INFO:Initializing Linear Discriminant Analysis
2024-04-28 13:04:10,660:INFO:Total runtime is 0.3036770304044088 minutes
2024-04-28 13:04:10,663:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:10,663:INFO:Initializing create_model()
2024-04-28 13:04:10,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:10,663:INFO:Checking exceptions
2024-04-28 13:04:10,664:INFO:Importing libraries
2024-04-28 13:04:10,664:INFO:Copying training dataset
2024-04-28 13:04:10,668:INFO:Defining folds
2024-04-28 13:04:10,668:INFO:Declaring metric variables
2024-04-28 13:04:10,671:INFO:Importing untrained model
2024-04-28 13:04:10,673:INFO:Linear Discriminant Analysis Imported successfully
2024-04-28 13:04:10,677:INFO:Starting cross validation
2024-04-28 13:04:10,679:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:10,885:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,889:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,893:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,904:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,908:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,913:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,914:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,917:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,918:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,920:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,922:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,922:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,924:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,925:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,927:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,927:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,931:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,931:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,931:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,931:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,931:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,933:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,934:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,934:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,934:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,936:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,936:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,937:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,937:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,939:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:10,957:INFO:Calculating mean and std
2024-04-28 13:04:10,958:INFO:Creating metrics dataframe
2024-04-28 13:04:10,961:INFO:Uploading results into container
2024-04-28 13:04:10,961:INFO:Uploading model into container now
2024-04-28 13:04:10,962:INFO:_master_model_container: 11
2024-04-28 13:04:10,962:INFO:_display_container: 2
2024-04-28 13:04:10,962:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-28 13:04:10,962:INFO:create_model() successfully completed......................................
2024-04-28 13:04:11,134:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:11,134:INFO:Creating metrics dataframe
2024-04-28 13:04:11,142:INFO:Initializing Extra Trees Classifier
2024-04-28 13:04:11,143:INFO:Total runtime is 0.3117343664169312 minutes
2024-04-28 13:04:11,145:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:11,145:INFO:Initializing create_model()
2024-04-28 13:04:11,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:11,145:INFO:Checking exceptions
2024-04-28 13:04:11,145:INFO:Importing libraries
2024-04-28 13:04:11,145:INFO:Copying training dataset
2024-04-28 13:04:11,152:INFO:Defining folds
2024-04-28 13:04:11,152:INFO:Declaring metric variables
2024-04-28 13:04:11,155:INFO:Importing untrained model
2024-04-28 13:04:11,158:INFO:Extra Trees Classifier Imported successfully
2024-04-28 13:04:11,163:INFO:Starting cross validation
2024-04-28 13:04:11,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:11,753:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,754:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:11,755:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,756:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,756:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,756:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:11,757:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:11,757:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,758:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:11,760:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,766:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,770:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,772:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,777:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,781:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,799:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,800:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,800:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,800:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,801:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 209)

  warnings.warn(

2024-04-28 13:04:11,801:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:11,803:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,803:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,804:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:11,804:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:11,806:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,806:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,807:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,810:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,810:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,811:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,811:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,813:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,814:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,817:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,818:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:11,819:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,822:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,825:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,877:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:11,878:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:11,879:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,882:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,884:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:11,890:INFO:Calculating mean and std
2024-04-28 13:04:11,891:INFO:Creating metrics dataframe
2024-04-28 13:04:11,894:INFO:Uploading results into container
2024-04-28 13:04:11,894:INFO:Uploading model into container now
2024-04-28 13:04:11,894:INFO:_master_model_container: 12
2024-04-28 13:04:11,895:INFO:_display_container: 2
2024-04-28 13:04:11,895:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-28 13:04:11,895:INFO:create_model() successfully completed......................................
2024-04-28 13:04:12,062:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:12,063:INFO:Creating metrics dataframe
2024-04-28 13:04:12,072:INFO:Initializing Light Gradient Boosting Machine
2024-04-28 13:04:12,073:INFO:Total runtime is 0.327231776714325 minutes
2024-04-28 13:04:12,075:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:12,075:INFO:Initializing create_model()
2024-04-28 13:04:12,075:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:12,075:INFO:Checking exceptions
2024-04-28 13:04:12,075:INFO:Importing libraries
2024-04-28 13:04:12,076:INFO:Copying training dataset
2024-04-28 13:04:12,081:INFO:Defining folds
2024-04-28 13:04:12,081:INFO:Declaring metric variables
2024-04-28 13:04:12,083:INFO:Importing untrained model
2024-04-28 13:04:12,085:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-28 13:04:12,090:INFO:Starting cross validation
2024-04-28 13:04:12,091:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:12,942:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:12,943:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:12,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,958:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:12,959:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:12,961:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,964:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:12,965:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:12,965:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,967:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,969:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,970:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:12,971:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:12,971:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,972:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,973:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:12,973:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:12,976:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,976:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,976:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,980:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,984:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:12,998:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:12,998:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,000:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,003:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,007:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,072:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,073:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,075:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,079:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,083:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,095:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,096:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,098:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,102:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,106:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,145:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,146:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 209)

  warnings.warn(

2024-04-28 13:04:13,148:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,151:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,155:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,173:INFO:Calculating mean and std
2024-04-28 13:04:13,175:INFO:Creating metrics dataframe
2024-04-28 13:04:13,178:INFO:Uploading results into container
2024-04-28 13:04:13,178:INFO:Uploading model into container now
2024-04-28 13:04:13,179:INFO:_master_model_container: 13
2024-04-28 13:04:13,179:INFO:_display_container: 2
2024-04-28 13:04:13,179:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-28 13:04:13,179:INFO:create_model() successfully completed......................................
2024-04-28 13:04:13,364:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:13,365:INFO:Creating metrics dataframe
2024-04-28 13:04:13,374:INFO:Initializing Dummy Classifier
2024-04-28 13:04:13,374:INFO:Total runtime is 0.3489181598027548 minutes
2024-04-28 13:04:13,377:INFO:SubProcess create_model() called ==================================
2024-04-28 13:04:13,377:INFO:Initializing create_model()
2024-04-28 13:04:13,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0DAE0A60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:13,377:INFO:Checking exceptions
2024-04-28 13:04:13,378:INFO:Importing libraries
2024-04-28 13:04:13,378:INFO:Copying training dataset
2024-04-28 13:04:13,382:INFO:Defining folds
2024-04-28 13:04:13,383:INFO:Declaring metric variables
2024-04-28 13:04:13,385:INFO:Importing untrained model
2024-04-28 13:04:13,388:INFO:Dummy Classifier Imported successfully
2024-04-28 13:04:13,392:INFO:Starting cross validation
2024-04-28 13:04:13,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:04:13,620:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,621:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,621:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,622:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,623:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,624:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,627:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,628:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,629:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,629:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,629:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,630:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,632:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,632:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,632:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,637:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,639:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,639:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,640:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,642:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,642:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,645:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,645:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,646:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,646:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,647:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,648:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,648:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,649:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,650:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,650:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 210)

  warnings.warn(

2024-04-28 13:04:13,650:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,651:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,651:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,651:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,651:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,651:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,652:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:04:13,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 209)

  warnings.warn(

2024-04-28 13:04:13,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,653:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,654:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,654:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,654:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,655:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,655:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,656:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,657:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,656:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,657:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:04:13,658:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,659:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:04:13,665:INFO:Calculating mean and std
2024-04-28 13:04:13,666:INFO:Creating metrics dataframe
2024-04-28 13:04:13,669:INFO:Uploading results into container
2024-04-28 13:04:13,669:INFO:Uploading model into container now
2024-04-28 13:04:13,670:INFO:_master_model_container: 14
2024-04-28 13:04:13,670:INFO:_display_container: 2
2024-04-28 13:04:13,670:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-28 13:04:13,670:INFO:create_model() successfully completed......................................
2024-04-28 13:04:13,847:INFO:SubProcess create_model() end ==================================
2024-04-28 13:04:13,847:INFO:Creating metrics dataframe
2024-04-28 13:04:13,863:INFO:Initializing create_model()
2024-04-28 13:04:13,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:04:13,864:INFO:Checking exceptions
2024-04-28 13:04:13,865:INFO:Importing libraries
2024-04-28 13:04:13,865:INFO:Copying training dataset
2024-04-28 13:04:13,870:INFO:Defining folds
2024-04-28 13:04:13,871:INFO:Declaring metric variables
2024-04-28 13:04:13,871:INFO:Importing untrained model
2024-04-28 13:04:13,871:INFO:Declaring custom model
2024-04-28 13:04:13,871:INFO:Logistic Regression Imported successfully
2024-04-28 13:04:13,873:INFO:Cross validation set to False
2024-04-28 13:04:13,873:INFO:Fitting Model
2024-04-28 13:04:14,169:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:04:14,170:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:04:14,170:INFO:create_model() successfully completed......................................
2024-04-28 13:04:14,356:INFO:_master_model_container: 14
2024-04-28 13:04:14,356:INFO:_display_container: 2
2024-04-28 13:04:14,356:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:04:14,356:INFO:compare_models() successfully completed......................................
2024-04-28 13:04:40,283:INFO:Initializing predict_model()
2024-04-28 13:04:40,284:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE0A72CAF0>)
2024-04-28 13:04:40,284:INFO:Checking exceptions
2024-04-28 13:04:40,284:INFO:Preloading libraries
2024-04-28 13:04:40,285:INFO:Set up data.
2024-04-28 13:04:40,292:INFO:Set up index.
2024-04-28 13:05:07,883:INFO:Initializing predict_model()
2024-04-28 13:05:07,884:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE0AB1B790>)
2024-04-28 13:05:07,884:INFO:Checking exceptions
2024-04-28 13:05:07,884:INFO:Preloading libraries
2024-04-28 13:05:07,885:INFO:Set up data.
2024-04-28 13:05:07,892:INFO:Set up index.
2024-04-28 13:10:10,873:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\3442720438.py:57: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.fillna(df.mean(), inplace=True)

2024-04-28 13:10:38,423:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\1610967013.py:51: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.fillna(df.mean(), inplace=True)

2024-04-28 13:10:39,499:INFO:Initializing predict_model()
2024-04-28 13:10:39,499:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0C2D8E20>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE0AE62040>)
2024-04-28 13:10:39,500:INFO:Checking exceptions
2024-04-28 13:10:39,500:INFO:Preloading libraries
2024-04-28 13:10:39,502:INFO:Set up data.
2024-04-28 13:10:39,509:INFO:Set up index.
2024-04-28 13:10:45,373:INFO:PyCaret ClassificationExperiment
2024-04-28 13:10:45,373:INFO:Logging name: clf-default-name
2024-04-28 13:10:45,373:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:10:45,373:INFO:version 3.3.1
2024-04-28 13:10:45,373:INFO:Initializing setup()
2024-04-28 13:10:45,373:INFO:self.USI: ad6a
2024-04-28 13:10:45,373:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 13:10:45,373:INFO:Checking environment
2024-04-28 13:10:45,373:INFO:python_version: 3.9.12
2024-04-28 13:10:45,373:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 13:10:45,373:INFO:machine: AMD64
2024-04-28 13:10:45,373:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 13:10:45,376:INFO:Memory: svmem(total=34282364928, available=24077459456, percent=29.8, used=10204905472, free=24077459456)
2024-04-28 13:10:45,377:INFO:Physical Core: 6
2024-04-28 13:10:45,377:INFO:Logical Core: 12
2024-04-28 13:10:45,377:INFO:Checking libraries
2024-04-28 13:10:45,377:INFO:System:
2024-04-28 13:10:45,377:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:10:45,377:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 13:10:45,377:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 13:10:45,377:INFO:PyCaret required dependencies:
2024-04-28 13:10:45,377:INFO:                 pip: 21.2.4
2024-04-28 13:10:45,377:INFO:          setuptools: 61.2.0
2024-04-28 13:10:45,377:INFO:             pycaret: 3.3.1
2024-04-28 13:10:45,377:INFO:             IPython: 8.2.0
2024-04-28 13:10:45,377:INFO:          ipywidgets: 7.6.5
2024-04-28 13:10:45,377:INFO:                tqdm: 4.64.0
2024-04-28 13:10:45,377:INFO:               numpy: 1.21.5
2024-04-28 13:10:45,377:INFO:              pandas: 1.4.2
2024-04-28 13:10:45,377:INFO:              jinja2: 2.11.3
2024-04-28 13:10:45,377:INFO:               scipy: 1.7.3
2024-04-28 13:10:45,377:INFO:              joblib: 1.3.2
2024-04-28 13:10:45,377:INFO:             sklearn: 1.4.0
2024-04-28 13:10:45,377:INFO:                pyod: 1.1.3
2024-04-28 13:10:45,377:INFO:            imblearn: 0.12.2
2024-04-28 13:10:45,377:INFO:   category_encoders: 2.6.3
2024-04-28 13:10:45,377:INFO:            lightgbm: 4.3.0
2024-04-28 13:10:45,378:INFO:               numba: 0.55.1
2024-04-28 13:10:45,378:INFO:            requests: 2.27.1
2024-04-28 13:10:45,378:INFO:          matplotlib: 3.5.1
2024-04-28 13:10:45,378:INFO:          scikitplot: 0.3.7
2024-04-28 13:10:45,378:INFO:         yellowbrick: 1.5
2024-04-28 13:10:45,378:INFO:              plotly: 5.6.0
2024-04-28 13:10:45,378:INFO:    plotly-resampler: Not installed
2024-04-28 13:10:45,378:INFO:             kaleido: 0.2.1
2024-04-28 13:10:45,378:INFO:           schemdraw: 0.15
2024-04-28 13:10:45,378:INFO:         statsmodels: 0.13.2
2024-04-28 13:10:45,378:INFO:              sktime: 0.26.0
2024-04-28 13:10:45,378:INFO:               tbats: 1.1.3
2024-04-28 13:10:45,378:INFO:            pmdarima: 2.0.4
2024-04-28 13:10:45,378:INFO:              psutil: 5.9.8
2024-04-28 13:10:45,378:INFO:          markupsafe: 2.0.1
2024-04-28 13:10:45,378:INFO:             pickle5: Not installed
2024-04-28 13:10:45,378:INFO:         cloudpickle: 2.0.0
2024-04-28 13:10:45,378:INFO:         deprecation: 2.1.0
2024-04-28 13:10:45,378:INFO:              xxhash: 3.4.1
2024-04-28 13:10:45,378:INFO:           wurlitzer: Not installed
2024-04-28 13:10:45,378:INFO:PyCaret optional dependencies:
2024-04-28 13:10:45,378:INFO:                shap: Not installed
2024-04-28 13:10:45,378:INFO:           interpret: Not installed
2024-04-28 13:10:45,378:INFO:                umap: Not installed
2024-04-28 13:10:45,378:INFO:     ydata_profiling: Not installed
2024-04-28 13:10:45,378:INFO:  explainerdashboard: Not installed
2024-04-28 13:10:45,378:INFO:             autoviz: Not installed
2024-04-28 13:10:45,378:INFO:           fairlearn: Not installed
2024-04-28 13:10:45,379:INFO:          deepchecks: Not installed
2024-04-28 13:10:45,379:INFO:             xgboost: Not installed
2024-04-28 13:10:45,379:INFO:            catboost: Not installed
2024-04-28 13:10:45,379:INFO:              kmodes: Not installed
2024-04-28 13:10:45,379:INFO:             mlxtend: 0.23.1
2024-04-28 13:10:45,379:INFO:       statsforecast: Not installed
2024-04-28 13:10:45,379:INFO:        tune_sklearn: Not installed
2024-04-28 13:10:45,379:INFO:                 ray: Not installed
2024-04-28 13:10:45,379:INFO:            hyperopt: Not installed
2024-04-28 13:10:45,379:INFO:              optuna: 3.6.1
2024-04-28 13:10:45,379:INFO:               skopt: Not installed
2024-04-28 13:10:45,379:INFO:              mlflow: Not installed
2024-04-28 13:10:45,379:INFO:              gradio: Not installed
2024-04-28 13:10:45,379:INFO:             fastapi: Not installed
2024-04-28 13:10:45,379:INFO:             uvicorn: Not installed
2024-04-28 13:10:45,379:INFO:              m2cgen: Not installed
2024-04-28 13:10:45,379:INFO:           evidently: Not installed
2024-04-28 13:10:45,379:INFO:               fugue: Not installed
2024-04-28 13:10:45,379:INFO:           streamlit: 1.31.1
2024-04-28 13:10:45,379:INFO:             prophet: Not installed
2024-04-28 13:10:45,379:INFO:None
2024-04-28 13:10:45,379:INFO:Set up data.
2024-04-28 13:10:56,013:INFO:PyCaret ClassificationExperiment
2024-04-28 13:10:56,013:INFO:Logging name: clf-default-name
2024-04-28 13:10:56,013:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:10:56,013:INFO:version 3.3.1
2024-04-28 13:10:56,014:INFO:Initializing setup()
2024-04-28 13:10:56,014:INFO:self.USI: 6687
2024-04-28 13:10:56,014:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 13:10:56,014:INFO:Checking environment
2024-04-28 13:10:56,014:INFO:python_version: 3.9.12
2024-04-28 13:10:56,014:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 13:10:56,014:INFO:machine: AMD64
2024-04-28 13:10:56,014:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 13:10:56,017:INFO:Memory: svmem(total=34282364928, available=24065638400, percent=29.8, used=10216726528, free=24065638400)
2024-04-28 13:10:56,017:INFO:Physical Core: 6
2024-04-28 13:10:56,017:INFO:Logical Core: 12
2024-04-28 13:10:56,017:INFO:Checking libraries
2024-04-28 13:10:56,017:INFO:System:
2024-04-28 13:10:56,017:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:10:56,017:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 13:10:56,017:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 13:10:56,017:INFO:PyCaret required dependencies:
2024-04-28 13:10:56,017:INFO:                 pip: 21.2.4
2024-04-28 13:10:56,018:INFO:          setuptools: 61.2.0
2024-04-28 13:10:56,018:INFO:             pycaret: 3.3.1
2024-04-28 13:10:56,018:INFO:             IPython: 8.2.0
2024-04-28 13:10:56,018:INFO:          ipywidgets: 7.6.5
2024-04-28 13:10:56,018:INFO:                tqdm: 4.64.0
2024-04-28 13:10:56,018:INFO:               numpy: 1.21.5
2024-04-28 13:10:56,018:INFO:              pandas: 1.4.2
2024-04-28 13:10:56,018:INFO:              jinja2: 2.11.3
2024-04-28 13:10:56,018:INFO:               scipy: 1.7.3
2024-04-28 13:10:56,018:INFO:              joblib: 1.3.2
2024-04-28 13:10:56,018:INFO:             sklearn: 1.4.0
2024-04-28 13:10:56,018:INFO:                pyod: 1.1.3
2024-04-28 13:10:56,018:INFO:            imblearn: 0.12.2
2024-04-28 13:10:56,018:INFO:   category_encoders: 2.6.3
2024-04-28 13:10:56,018:INFO:            lightgbm: 4.3.0
2024-04-28 13:10:56,018:INFO:               numba: 0.55.1
2024-04-28 13:10:56,018:INFO:            requests: 2.27.1
2024-04-28 13:10:56,018:INFO:          matplotlib: 3.5.1
2024-04-28 13:10:56,018:INFO:          scikitplot: 0.3.7
2024-04-28 13:10:56,018:INFO:         yellowbrick: 1.5
2024-04-28 13:10:56,018:INFO:              plotly: 5.6.0
2024-04-28 13:10:56,018:INFO:    plotly-resampler: Not installed
2024-04-28 13:10:56,018:INFO:             kaleido: 0.2.1
2024-04-28 13:10:56,018:INFO:           schemdraw: 0.15
2024-04-28 13:10:56,018:INFO:         statsmodels: 0.13.2
2024-04-28 13:10:56,018:INFO:              sktime: 0.26.0
2024-04-28 13:10:56,018:INFO:               tbats: 1.1.3
2024-04-28 13:10:56,018:INFO:            pmdarima: 2.0.4
2024-04-28 13:10:56,019:INFO:              psutil: 5.9.8
2024-04-28 13:10:56,019:INFO:          markupsafe: 2.0.1
2024-04-28 13:10:56,019:INFO:             pickle5: Not installed
2024-04-28 13:10:56,019:INFO:         cloudpickle: 2.0.0
2024-04-28 13:10:56,019:INFO:         deprecation: 2.1.0
2024-04-28 13:10:56,019:INFO:              xxhash: 3.4.1
2024-04-28 13:10:56,019:INFO:           wurlitzer: Not installed
2024-04-28 13:10:56,019:INFO:PyCaret optional dependencies:
2024-04-28 13:10:56,019:INFO:                shap: Not installed
2024-04-28 13:10:56,019:INFO:           interpret: Not installed
2024-04-28 13:10:56,019:INFO:                umap: Not installed
2024-04-28 13:10:56,019:INFO:     ydata_profiling: Not installed
2024-04-28 13:10:56,019:INFO:  explainerdashboard: Not installed
2024-04-28 13:10:56,019:INFO:             autoviz: Not installed
2024-04-28 13:10:56,019:INFO:           fairlearn: Not installed
2024-04-28 13:10:56,019:INFO:          deepchecks: Not installed
2024-04-28 13:10:56,019:INFO:             xgboost: Not installed
2024-04-28 13:10:56,019:INFO:            catboost: Not installed
2024-04-28 13:10:56,019:INFO:              kmodes: Not installed
2024-04-28 13:10:56,019:INFO:             mlxtend: 0.23.1
2024-04-28 13:10:56,019:INFO:       statsforecast: Not installed
2024-04-28 13:10:56,019:INFO:        tune_sklearn: Not installed
2024-04-28 13:10:56,019:INFO:                 ray: Not installed
2024-04-28 13:10:56,019:INFO:            hyperopt: Not installed
2024-04-28 13:10:56,019:INFO:              optuna: 3.6.1
2024-04-28 13:10:56,019:INFO:               skopt: Not installed
2024-04-28 13:10:56,019:INFO:              mlflow: Not installed
2024-04-28 13:10:56,019:INFO:              gradio: Not installed
2024-04-28 13:10:56,019:INFO:             fastapi: Not installed
2024-04-28 13:10:56,019:INFO:             uvicorn: Not installed
2024-04-28 13:10:56,020:INFO:              m2cgen: Not installed
2024-04-28 13:10:56,020:INFO:           evidently: Not installed
2024-04-28 13:10:56,020:INFO:               fugue: Not installed
2024-04-28 13:10:56,020:INFO:           streamlit: 1.31.1
2024-04-28 13:10:56,020:INFO:             prophet: Not installed
2024-04-28 13:10:56,020:INFO:None
2024-04-28 13:10:56,020:INFO:Set up data.
2024-04-28 13:10:56,029:INFO:Set up folding strategy.
2024-04-28 13:10:56,030:INFO:Set up train/test split.
2024-04-28 13:10:56,035:INFO:Set up index.
2024-04-28 13:10:56,036:INFO:Assigning column types.
2024-04-28 13:10:56,038:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:10:56,081:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:10:56,081:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:10:56,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,152:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:10:56,153:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:10:56,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,181:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:10:56,225:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:10:56,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:10:56,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,325:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:10:56,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:56,470:INFO:Preparing preprocessing pipeline...
2024-04-28 13:10:56,471:INFO:Set up label encoding.
2024-04-28 13:10:56,471:INFO:Set up simple imputation.
2024-04-28 13:10:56,474:INFO:Set up encoding of ordinal features.
2024-04-28 13:10:56,481:INFO:Set up encoding of categorical features.
2024-04-28 13:10:56,481:INFO:Set up imbalanced handling.
2024-04-28 13:10:56,597:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:10:56,647:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifet...
                                    transformer=OneHotEncoder(cols=['homeowner_children',
                                                                    'zip_gender'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=27,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-04-28 13:10:56,647:INFO:Creating final display dataframe.
2024-04-28 13:10:57,000:INFO:Setup _display_container:                     Description                  Value
0                    Session id                     27
1                        Target                 target
2                   Target type                 Binary
3                Target mapping  Donor: 0, No Donor: 1
4           Original data shape             (2400, 30)
5        Transformed data shape             (2418, 45)
6   Transformed train set shape             (1698, 45)
7    Transformed test set shape              (720, 45)
8              Numeric features                     20
9          Categorical features                      9
10                   Preprocess                   True
11              Imputation type                 simple
12           Numeric imputation                   mean
13       Categorical imputation                   mode
14     Maximum one-hot encoding                     25
15              Encoding method                   None
16                Fix imbalance                   True
17         Fix imbalance method                  SMOTE
18               Fold Generator        StratifiedKFold
19                  Fold Number                     10
20                     CPU Jobs                     -1
21                      Use GPU                  False
22               Log Experiment                  False
23              Experiment Name       clf-default-name
24                          USI                   6687
2024-04-28 13:10:57,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:57,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:57,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:57,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:10:57,155:INFO:setup() successfully completed in 1.14s...............
2024-04-28 13:10:57,155:INFO:Initializing compare_models()
2024-04-28 13:10:57,156:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:10:57,156:INFO:Checking exceptions
2024-04-28 13:10:57,159:INFO:Preparing display monitor
2024-04-28 13:10:57,189:INFO:Initializing Logistic Regression
2024-04-28 13:10:57,189:INFO:Total runtime is 0.0 minutes
2024-04-28 13:10:57,191:INFO:SubProcess create_model() called ==================================
2024-04-28 13:10:57,192:INFO:Initializing create_model()
2024-04-28 13:10:57,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:10:57,192:INFO:Checking exceptions
2024-04-28 13:10:57,192:INFO:Importing libraries
2024-04-28 13:10:57,192:INFO:Copying training dataset
2024-04-28 13:10:57,197:INFO:Defining folds
2024-04-28 13:10:57,197:INFO:Declaring metric variables
2024-04-28 13:10:57,200:INFO:Importing untrained model
2024-04-28 13:10:57,203:INFO:Logistic Regression Imported successfully
2024-04-28 13:10:57,210:INFO:Starting cross validation
2024-04-28 13:10:57,212:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:10:57,680:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:10:57,687:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:10:57,716:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:10:57,737:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:10:57,738:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:10:57,742:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:10:57,743:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:10:57,747:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:10:57,747:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:10:57,768:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:10:57,772:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:10:57,775:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,399:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:11:03,413:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:11:03,418:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:11:03,435:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,437:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,440:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,452:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,452:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:11:03,455:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,459:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,462:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,462:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:11:03,466:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,467:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:11:03,467:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:11:03,468:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,494:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,496:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,498:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,499:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,502:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,506:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,514:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,514:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,516:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,518:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,519:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,522:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:03,542:INFO:Calculating mean and std
2024-04-28 13:11:03,545:INFO:Creating metrics dataframe
2024-04-28 13:11:03,549:INFO:Uploading results into container
2024-04-28 13:11:03,549:INFO:Uploading model into container now
2024-04-28 13:11:03,550:INFO:_master_model_container: 1
2024-04-28 13:11:03,550:INFO:_display_container: 2
2024-04-28 13:11:03,550:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:11:03,551:INFO:create_model() successfully completed......................................
2024-04-28 13:11:03,777:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:03,777:INFO:Creating metrics dataframe
2024-04-28 13:11:03,783:INFO:Initializing K Neighbors Classifier
2024-04-28 13:11:03,783:INFO:Total runtime is 0.10989991029103598 minutes
2024-04-28 13:11:03,786:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:03,786:INFO:Initializing create_model()
2024-04-28 13:11:03,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:03,786:INFO:Checking exceptions
2024-04-28 13:11:03,786:INFO:Importing libraries
2024-04-28 13:11:03,786:INFO:Copying training dataset
2024-04-28 13:11:03,791:INFO:Defining folds
2024-04-28 13:11:03,791:INFO:Declaring metric variables
2024-04-28 13:11:03,793:INFO:Importing untrained model
2024-04-28 13:11:03,796:INFO:K Neighbors Classifier Imported successfully
2024-04-28 13:11:03,800:INFO:Starting cross validation
2024-04-28 13:11:03,801:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:04,041:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:04,042:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:04,042:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:04,043:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:04,044:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,045:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,048:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,048:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:04,049:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,049:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:04,051:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,052:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,053:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,053:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:04,054:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,056:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:04,058:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,058:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:04,061:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

his is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:04,061:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:04,063:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,064:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:04,065:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,066:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,066:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:04,067:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:04,068:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:04,068:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,068:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,069:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,070:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,071:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,071:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,072:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:04,074:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,074:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,074:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,077:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:04,079:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:07,946:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:07,949:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:07,951:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:07,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:07,956:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,005:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,008:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,010:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,015:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,024:INFO:Calculating mean and std
2024-04-28 13:11:08,025:INFO:Creating metrics dataframe
2024-04-28 13:11:08,028:INFO:Uploading results into container
2024-04-28 13:11:08,028:INFO:Uploading model into container now
2024-04-28 13:11:08,028:INFO:_master_model_container: 2
2024-04-28 13:11:08,028:INFO:_display_container: 2
2024-04-28 13:11:08,029:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-28 13:11:08,029:INFO:create_model() successfully completed......................................
2024-04-28 13:11:08,232:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:08,232:INFO:Creating metrics dataframe
2024-04-28 13:11:08,239:INFO:Initializing Naive Bayes
2024-04-28 13:11:08,240:INFO:Total runtime is 0.18418412605921428 minutes
2024-04-28 13:11:08,242:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:08,242:INFO:Initializing create_model()
2024-04-28 13:11:08,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:08,242:INFO:Checking exceptions
2024-04-28 13:11:08,243:INFO:Importing libraries
2024-04-28 13:11:08,243:INFO:Copying training dataset
2024-04-28 13:11:08,247:INFO:Defining folds
2024-04-28 13:11:08,248:INFO:Declaring metric variables
2024-04-28 13:11:08,250:INFO:Importing untrained model
2024-04-28 13:11:08,253:INFO:Naive Bayes Imported successfully
2024-04-28 13:11:08,258:INFO:Starting cross validation
2024-04-28 13:11:08,260:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:08,475:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,476:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,476:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,476:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,477:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,478:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,478:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,479:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,479:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,479:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,482:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,482:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,482:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,483:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,483:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,484:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,484:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,484:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,485:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,486:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,486:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,486:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,487:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,489:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,489:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,490:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,491:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,491:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,492:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,493:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,493:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,494:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,495:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,498:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,498:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,499:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,499:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,500:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,501:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,501:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,501:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,504:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,505:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,506:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,508:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,510:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:08,511:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:08,513:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,515:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,518:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:08,531:INFO:Calculating mean and std
2024-04-28 13:11:08,532:INFO:Creating metrics dataframe
2024-04-28 13:11:08,535:INFO:Uploading results into container
2024-04-28 13:11:08,535:INFO:Uploading model into container now
2024-04-28 13:11:08,535:INFO:_master_model_container: 3
2024-04-28 13:11:08,535:INFO:_display_container: 2
2024-04-28 13:11:08,536:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-28 13:11:08,536:INFO:create_model() successfully completed......................................
2024-04-28 13:11:08,730:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:08,730:INFO:Creating metrics dataframe
2024-04-28 13:11:08,737:INFO:Initializing Decision Tree Classifier
2024-04-28 13:11:08,737:INFO:Total runtime is 0.19245831569035848 minutes
2024-04-28 13:11:08,740:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:08,741:INFO:Initializing create_model()
2024-04-28 13:11:08,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:08,741:INFO:Checking exceptions
2024-04-28 13:11:08,741:INFO:Importing libraries
2024-04-28 13:11:08,741:INFO:Copying training dataset
2024-04-28 13:11:08,746:INFO:Defining folds
2024-04-28 13:11:08,746:INFO:Declaring metric variables
2024-04-28 13:11:08,749:INFO:Importing untrained model
2024-04-28 13:11:08,751:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:11:08,757:INFO:Starting cross validation
2024-04-28 13:11:08,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:08,999:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,000:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,003:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,003:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,004:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,006:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,006:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,007:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,007:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,007:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,008:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,008:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,009:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,009:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,010:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,010:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,011:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,011:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,011:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,012:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,014:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,014:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,014:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,015:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,015:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,015:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,016:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,016:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,016:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,017:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,017:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,017:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,017:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,018:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,019:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,019:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,019:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:09,020:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:09,020:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,021:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,021:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,022:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,023:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,024:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,024:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,025:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,028:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,035:INFO:Calculating mean and std
2024-04-28 13:11:09,036:INFO:Creating metrics dataframe
2024-04-28 13:11:09,039:INFO:Uploading results into container
2024-04-28 13:11:09,039:INFO:Uploading model into container now
2024-04-28 13:11:09,040:INFO:_master_model_container: 4
2024-04-28 13:11:09,040:INFO:_display_container: 2
2024-04-28 13:11:09,040:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-28 13:11:09,040:INFO:create_model() successfully completed......................................
2024-04-28 13:11:09,224:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:09,225:INFO:Creating metrics dataframe
2024-04-28 13:11:09,232:INFO:Initializing SVM - Linear Kernel
2024-04-28 13:11:09,232:INFO:Total runtime is 0.20071579615275065 minutes
2024-04-28 13:11:09,234:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:09,235:INFO:Initializing create_model()
2024-04-28 13:11:09,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:09,235:INFO:Checking exceptions
2024-04-28 13:11:09,235:INFO:Importing libraries
2024-04-28 13:11:09,235:INFO:Copying training dataset
2024-04-28 13:11:09,240:INFO:Defining folds
2024-04-28 13:11:09,240:INFO:Declaring metric variables
2024-04-28 13:11:09,242:INFO:Importing untrained model
2024-04-28 13:11:09,245:INFO:SVM - Linear Kernel Imported successfully
2024-04-28 13:11:09,250:INFO:Starting cross validation
2024-04-28 13:11:09,252:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:09,478:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,482:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,484:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,484:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,485:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,486:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,486:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,486:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,487:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,489:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,489:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,490:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,491:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:09,491:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,493:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,493:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,494:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,495:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,496:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,497:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,498:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:09,500:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,500:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,501:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,502:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,504:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,505:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,506:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,507:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,510:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,528:INFO:Calculating mean and std
2024-04-28 13:11:09,529:INFO:Creating metrics dataframe
2024-04-28 13:11:09,532:INFO:Uploading results into container
2024-04-28 13:11:09,532:INFO:Uploading model into container now
2024-04-28 13:11:09,533:INFO:_master_model_container: 5
2024-04-28 13:11:09,533:INFO:_display_container: 2
2024-04-28 13:11:09,533:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-28 13:11:09,533:INFO:create_model() successfully completed......................................
2024-04-28 13:11:09,725:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:09,725:INFO:Creating metrics dataframe
2024-04-28 13:11:09,733:INFO:Initializing Ridge Classifier
2024-04-28 13:11:09,733:INFO:Total runtime is 0.20905672709147136 minutes
2024-04-28 13:11:09,736:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:09,736:INFO:Initializing create_model()
2024-04-28 13:11:09,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:09,736:INFO:Checking exceptions
2024-04-28 13:11:09,736:INFO:Importing libraries
2024-04-28 13:11:09,736:INFO:Copying training dataset
2024-04-28 13:11:09,741:INFO:Defining folds
2024-04-28 13:11:09,741:INFO:Declaring metric variables
2024-04-28 13:11:09,744:INFO:Importing untrained model
2024-04-28 13:11:09,746:INFO:Ridge Classifier Imported successfully
2024-04-28 13:11:09,750:INFO:Starting cross validation
2024-04-28 13:11:09,751:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:09,964:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,965:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,968:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,969:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,971:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,972:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,972:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,973:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,975:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,976:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,980:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,980:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,981:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,981:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,983:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,985:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,985:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,985:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,987:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,987:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,989:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,989:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,990:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,992:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,993:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:09,996:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,008:INFO:Calculating mean and std
2024-04-28 13:11:10,009:INFO:Creating metrics dataframe
2024-04-28 13:11:10,012:INFO:Uploading results into container
2024-04-28 13:11:10,012:INFO:Uploading model into container now
2024-04-28 13:11:10,012:INFO:_master_model_container: 6
2024-04-28 13:11:10,012:INFO:_display_container: 2
2024-04-28 13:11:10,013:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 13:11:10,013:INFO:create_model() successfully completed......................................
2024-04-28 13:11:10,195:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:10,195:INFO:Creating metrics dataframe
2024-04-28 13:11:10,203:INFO:Initializing Random Forest Classifier
2024-04-28 13:11:10,203:INFO:Total runtime is 0.21689717769622802 minutes
2024-04-28 13:11:10,205:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:10,205:INFO:Initializing create_model()
2024-04-28 13:11:10,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:10,206:INFO:Checking exceptions
2024-04-28 13:11:10,206:INFO:Importing libraries
2024-04-28 13:11:10,206:INFO:Copying training dataset
2024-04-28 13:11:10,211:INFO:Defining folds
2024-04-28 13:11:10,211:INFO:Declaring metric variables
2024-04-28 13:11:10,213:INFO:Importing untrained model
2024-04-28 13:11:10,216:INFO:Random Forest Classifier Imported successfully
2024-04-28 13:11:10,220:INFO:Starting cross validation
2024-04-28 13:11:10,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:10,890:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,890:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,891:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,891:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,892:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,893:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,893:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,893:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,895:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,897:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,898:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,899:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,902:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,904:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,906:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,906:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,907:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,908:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,909:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,910:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,913:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,914:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,917:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,917:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,922:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,922:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,924:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,928:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,931:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,937:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,937:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,937:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,938:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,939:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,940:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,942:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,943:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,946:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,952:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,953:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,953:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:10,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:10,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,955:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,957:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,958:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,959:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,960:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:10,965:INFO:Calculating mean and std
2024-04-28 13:11:10,966:INFO:Creating metrics dataframe
2024-04-28 13:11:10,969:INFO:Uploading results into container
2024-04-28 13:11:10,969:INFO:Uploading model into container now
2024-04-28 13:11:10,970:INFO:_master_model_container: 7
2024-04-28 13:11:10,970:INFO:_display_container: 2
2024-04-28 13:11:10,970:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-28 13:11:10,970:INFO:create_model() successfully completed......................................
2024-04-28 13:11:11,165:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:11,165:INFO:Creating metrics dataframe
2024-04-28 13:11:11,173:INFO:Initializing Quadratic Discriminant Analysis
2024-04-28 13:11:11,173:INFO:Total runtime is 0.23306187788645424 minutes
2024-04-28 13:11:11,176:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:11,177:INFO:Initializing create_model()
2024-04-28 13:11:11,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:11,177:INFO:Checking exceptions
2024-04-28 13:11:11,177:INFO:Importing libraries
2024-04-28 13:11:11,177:INFO:Copying training dataset
2024-04-28 13:11:11,182:INFO:Defining folds
2024-04-28 13:11:11,182:INFO:Declaring metric variables
2024-04-28 13:11:11,185:INFO:Importing untrained model
2024-04-28 13:11:11,187:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-28 13:11:11,191:INFO:Starting cross validation
2024-04-28 13:11:11,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:11,358:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,365:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,366:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,370:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,373:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,374:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,383:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,389:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,390:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,393:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:11:11,410:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,414:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,414:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,415:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,418:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,418:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,418:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,419:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,422:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,422:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,423:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,424:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,425:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,426:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,429:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,429:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,432:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,433:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,435:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,440:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,441:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,443:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,444:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,444:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,444:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,446:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,448:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:11,459:INFO:Calculating mean and std
2024-04-28 13:11:11,460:INFO:Creating metrics dataframe
2024-04-28 13:11:11,463:INFO:Uploading results into container
2024-04-28 13:11:11,463:INFO:Uploading model into container now
2024-04-28 13:11:11,463:INFO:_master_model_container: 8
2024-04-28 13:11:11,463:INFO:_display_container: 2
2024-04-28 13:11:11,464:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-28 13:11:11,464:INFO:create_model() successfully completed......................................
2024-04-28 13:11:11,648:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:11,648:INFO:Creating metrics dataframe
2024-04-28 13:11:11,656:INFO:Initializing Ada Boost Classifier
2024-04-28 13:11:11,656:INFO:Total runtime is 0.24111920595169065 minutes
2024-04-28 13:11:11,658:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:11,659:INFO:Initializing create_model()
2024-04-28 13:11:11,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:11,659:INFO:Checking exceptions
2024-04-28 13:11:11,659:INFO:Importing libraries
2024-04-28 13:11:11,659:INFO:Copying training dataset
2024-04-28 13:11:11,664:INFO:Defining folds
2024-04-28 13:11:11,664:INFO:Declaring metric variables
2024-04-28 13:11:11,666:INFO:Importing untrained model
2024-04-28 13:11:11,668:INFO:Ada Boost Classifier Imported successfully
2024-04-28 13:11:11,672:INFO:Starting cross validation
2024-04-28 13:11:11,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:11,825:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:11,828:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:11,830:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:11,842:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:11,845:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:11,845:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:11,846:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:11,847:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:11,849:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:11,852:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:11:12,088:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,093:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,097:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,104:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,107:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,114:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,114:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,117:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,117:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,118:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,119:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,120:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,122:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,122:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,123:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,123:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,125:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,126:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,126:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,129:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,129:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,129:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,129:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,131:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,132:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,134:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,134:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:12,141:INFO:Calculating mean and std
2024-04-28 13:11:12,142:INFO:Creating metrics dataframe
2024-04-28 13:11:12,145:INFO:Uploading results into container
2024-04-28 13:11:12,145:INFO:Uploading model into container now
2024-04-28 13:11:12,145:INFO:_master_model_container: 9
2024-04-28 13:11:12,146:INFO:_display_container: 2
2024-04-28 13:11:12,146:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 13:11:12,146:INFO:create_model() successfully completed......................................
2024-04-28 13:11:12,336:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:12,336:INFO:Creating metrics dataframe
2024-04-28 13:11:12,344:INFO:Initializing Gradient Boosting Classifier
2024-04-28 13:11:12,344:INFO:Total runtime is 0.2525796254475911 minutes
2024-04-28 13:11:12,347:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:12,348:INFO:Initializing create_model()
2024-04-28 13:11:12,348:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:12,348:INFO:Checking exceptions
2024-04-28 13:11:12,348:INFO:Importing libraries
2024-04-28 13:11:12,348:INFO:Copying training dataset
2024-04-28 13:11:12,352:INFO:Defining folds
2024-04-28 13:11:12,353:INFO:Declaring metric variables
2024-04-28 13:11:12,355:INFO:Importing untrained model
2024-04-28 13:11:12,357:INFO:Gradient Boosting Classifier Imported successfully
2024-04-28 13:11:12,362:INFO:Starting cross validation
2024-04-28 13:11:12,364:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:13,280:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,283:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,284:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,287:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,290:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,290:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,291:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,294:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,294:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,295:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,295:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,297:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,298:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,298:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,298:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,300:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,300:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,300:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,302:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,303:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,304:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,304:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,307:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,307:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,308:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,309:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,316:INFO:Calculating mean and std
2024-04-28 13:11:13,317:INFO:Creating metrics dataframe
2024-04-28 13:11:13,320:INFO:Uploading results into container
2024-04-28 13:11:13,321:INFO:Uploading model into container now
2024-04-28 13:11:13,321:INFO:_master_model_container: 10
2024-04-28 13:11:13,321:INFO:_display_container: 2
2024-04-28 13:11:13,321:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-28 13:11:13,321:INFO:create_model() successfully completed......................................
2024-04-28 13:11:13,508:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:13,508:INFO:Creating metrics dataframe
2024-04-28 13:11:13,517:INFO:Initializing Linear Discriminant Analysis
2024-04-28 13:11:13,517:INFO:Total runtime is 0.2721307357152303 minutes
2024-04-28 13:11:13,519:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:13,520:INFO:Initializing create_model()
2024-04-28 13:11:13,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:13,520:INFO:Checking exceptions
2024-04-28 13:11:13,520:INFO:Importing libraries
2024-04-28 13:11:13,520:INFO:Copying training dataset
2024-04-28 13:11:13,525:INFO:Defining folds
2024-04-28 13:11:13,525:INFO:Declaring metric variables
2024-04-28 13:11:13,527:INFO:Importing untrained model
2024-04-28 13:11:13,530:INFO:Linear Discriminant Analysis Imported successfully
2024-04-28 13:11:13,534:INFO:Starting cross validation
2024-04-28 13:11:13,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:13,739:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,741:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,745:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,749:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,750:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,751:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,752:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,753:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,754:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,754:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,756:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,757:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,757:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,757:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,758:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,760:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,761:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,763:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,764:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,766:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,769:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,769:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,770:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,771:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,772:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,773:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,773:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,774:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,775:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,776:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:13,794:INFO:Calculating mean and std
2024-04-28 13:11:13,795:INFO:Creating metrics dataframe
2024-04-28 13:11:13,798:INFO:Uploading results into container
2024-04-28 13:11:13,798:INFO:Uploading model into container now
2024-04-28 13:11:13,798:INFO:_master_model_container: 11
2024-04-28 13:11:13,799:INFO:_display_container: 2
2024-04-28 13:11:13,799:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-28 13:11:13,799:INFO:create_model() successfully completed......................................
2024-04-28 13:11:13,981:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:13,981:INFO:Creating metrics dataframe
2024-04-28 13:11:13,990:INFO:Initializing Extra Trees Classifier
2024-04-28 13:11:13,990:INFO:Total runtime is 0.2800145904223124 minutes
2024-04-28 13:11:13,993:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:13,993:INFO:Initializing create_model()
2024-04-28 13:11:13,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:13,993:INFO:Checking exceptions
2024-04-28 13:11:13,993:INFO:Importing libraries
2024-04-28 13:11:13,994:INFO:Copying training dataset
2024-04-28 13:11:13,998:INFO:Defining folds
2024-04-28 13:11:13,999:INFO:Declaring metric variables
2024-04-28 13:11:14,001:INFO:Importing untrained model
2024-04-28 13:11:14,003:INFO:Extra Trees Classifier Imported successfully
2024-04-28 13:11:14,007:INFO:Starting cross validation
2024-04-28 13:11:14,009:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:14,516:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,517:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,518:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,519:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,520:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,522:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,525:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,526:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,531:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,532:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,532:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,533:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,535:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,535:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,537:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,538:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,539:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,541:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,542:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,542:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,548:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,548:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,549:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,549:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,552:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,552:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,555:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,555:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,558:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,559:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,563:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,564:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,565:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,568:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,571:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,579:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,579:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,581:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,584:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,588:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,594:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,595:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,596:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,598:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,601:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,610:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:14,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:14,612:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,615:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,617:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:14,622:INFO:Calculating mean and std
2024-04-28 13:11:14,623:INFO:Creating metrics dataframe
2024-04-28 13:11:14,626:INFO:Uploading results into container
2024-04-28 13:11:14,626:INFO:Uploading model into container now
2024-04-28 13:11:14,627:INFO:_master_model_container: 12
2024-04-28 13:11:14,627:INFO:_display_container: 2
2024-04-28 13:11:14,627:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-28 13:11:14,627:INFO:create_model() successfully completed......................................
2024-04-28 13:11:14,816:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:14,816:INFO:Creating metrics dataframe
2024-04-28 13:11:14,825:INFO:Initializing Light Gradient Boosting Machine
2024-04-28 13:11:14,825:INFO:Total runtime is 0.2939272403717041 minutes
2024-04-28 13:11:14,828:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:14,828:INFO:Initializing create_model()
2024-04-28 13:11:14,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:14,828:INFO:Checking exceptions
2024-04-28 13:11:14,828:INFO:Importing libraries
2024-04-28 13:11:14,828:INFO:Copying training dataset
2024-04-28 13:11:14,833:INFO:Defining folds
2024-04-28 13:11:14,833:INFO:Declaring metric variables
2024-04-28 13:11:14,836:INFO:Importing untrained model
2024-04-28 13:11:14,839:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-28 13:11:14,843:INFO:Starting cross validation
2024-04-28 13:11:14,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:15,635:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,636:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,638:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,666:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,667:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,668:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,672:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,675:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,681:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,682:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,683:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,687:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,690:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,704:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,705:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,707:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,711:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,715:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,717:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,718:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,720:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,724:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,727:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,727:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,727:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,729:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,732:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,733:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,733:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,735:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,735:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,738:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,741:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,747:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,748:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,750:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,753:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,756:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,782:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,783:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,785:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,788:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,788:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:15,789:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:15,790:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,791:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,794:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,797:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:15,814:INFO:Calculating mean and std
2024-04-28 13:11:15,816:INFO:Creating metrics dataframe
2024-04-28 13:11:15,819:INFO:Uploading results into container
2024-04-28 13:11:15,820:INFO:Uploading model into container now
2024-04-28 13:11:15,820:INFO:_master_model_container: 13
2024-04-28 13:11:15,820:INFO:_display_container: 2
2024-04-28 13:11:15,821:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-28 13:11:15,821:INFO:create_model() successfully completed......................................
2024-04-28 13:11:16,029:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:16,029:INFO:Creating metrics dataframe
2024-04-28 13:11:16,038:INFO:Initializing Dummy Classifier
2024-04-28 13:11:16,038:INFO:Total runtime is 0.3141456325848897 minutes
2024-04-28 13:11:16,040:INFO:SubProcess create_model() called ==================================
2024-04-28 13:11:16,041:INFO:Initializing create_model()
2024-04-28 13:11:16,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F42B220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:16,041:INFO:Checking exceptions
2024-04-28 13:11:16,041:INFO:Importing libraries
2024-04-28 13:11:16,041:INFO:Copying training dataset
2024-04-28 13:11:16,046:INFO:Defining folds
2024-04-28 13:11:16,046:INFO:Declaring metric variables
2024-04-28 13:11:16,048:INFO:Importing untrained model
2024-04-28 13:11:16,050:INFO:Dummy Classifier Imported successfully
2024-04-28 13:11:16,054:INFO:Starting cross validation
2024-04-28 13:11:16,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:11:16,233:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,234:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,236:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,240:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,240:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,241:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,242:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,243:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,244:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,245:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,247:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,247:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,248:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,248:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,249:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,250:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,250:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,251:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,254:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,254:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,254:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,255:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,255:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,256:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,256:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,258:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,259:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,260:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,261:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,262:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,262:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,263:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,263:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,264:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,264:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,265:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,266:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,268:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,269:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,271:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,272:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,272:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,272:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,273:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,273:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:11:16,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,275:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:11:16,276:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,277:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,278:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,279:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,280:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,281:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:11:16,283:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:11:16,302:INFO:Calculating mean and std
2024-04-28 13:11:16,303:INFO:Creating metrics dataframe
2024-04-28 13:11:16,306:INFO:Uploading results into container
2024-04-28 13:11:16,306:INFO:Uploading model into container now
2024-04-28 13:11:16,306:INFO:_master_model_container: 14
2024-04-28 13:11:16,306:INFO:_display_container: 2
2024-04-28 13:11:16,306:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-28 13:11:16,306:INFO:create_model() successfully completed......................................
2024-04-28 13:11:16,494:INFO:SubProcess create_model() end ==================================
2024-04-28 13:11:16,494:INFO:Creating metrics dataframe
2024-04-28 13:11:16,510:INFO:Initializing create_model()
2024-04-28 13:11:16,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:11:16,510:INFO:Checking exceptions
2024-04-28 13:11:16,511:INFO:Importing libraries
2024-04-28 13:11:16,512:INFO:Copying training dataset
2024-04-28 13:11:16,515:INFO:Defining folds
2024-04-28 13:11:16,515:INFO:Declaring metric variables
2024-04-28 13:11:16,515:INFO:Importing untrained model
2024-04-28 13:11:16,515:INFO:Declaring custom model
2024-04-28 13:11:16,516:INFO:Logistic Regression Imported successfully
2024-04-28 13:11:16,517:INFO:Cross validation set to False
2024-04-28 13:11:16,517:INFO:Fitting Model
2024-04-28 13:11:16,775:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:11:16,776:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:11:16,776:INFO:create_model() successfully completed......................................
2024-04-28 13:11:16,983:INFO:_master_model_container: 14
2024-04-28 13:11:16,983:INFO:_display_container: 2
2024-04-28 13:11:16,983:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:11:16,983:INFO:compare_models() successfully completed......................................
2024-04-28 13:11:23,611:INFO:Initializing predict_model()
2024-04-28 13:11:23,611:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE0ABA60D0>)
2024-04-28 13:11:23,612:INFO:Checking exceptions
2024-04-28 13:11:23,612:INFO:Preloading libraries
2024-04-28 13:11:23,613:INFO:Set up data.
2024-04-28 13:11:23,620:INFO:Set up index.
2024-04-28 13:12:18,027:INFO:Initializing predict_model()
2024-04-28 13:12:18,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE10B4E700>)
2024-04-28 13:12:18,027:INFO:Checking exceptions
2024-04-28 13:12:18,027:INFO:Preloading libraries
2024-04-28 13:12:18,029:INFO:Set up data.
2024-04-28 13:12:18,036:INFO:Set up index.
2024-04-28 13:12:21,883:INFO:Initializing predict_model()
2024-04-28 13:12:21,883:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE0DB0CD30>)
2024-04-28 13:12:21,883:INFO:Checking exceptions
2024-04-28 13:12:21,883:INFO:Preloading libraries
2024-04-28 13:12:21,885:INFO:Set up data.
2024-04-28 13:12:21,892:INFO:Set up index.
2024-04-28 13:13:57,226:INFO:Initializing predict_model()
2024-04-28 13:13:57,226:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2B3F40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE0AB1B790>)
2024-04-28 13:13:57,227:INFO:Checking exceptions
2024-04-28 13:13:57,227:INFO:Preloading libraries
2024-04-28 13:13:57,229:INFO:Set up data.
2024-04-28 13:13:57,236:INFO:Set up index.
2024-04-28 13:17:57,391:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\1610967013.py:51: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.fillna(df.mean(), inplace=True)

2024-04-28 13:18:00,981:INFO:PyCaret ClassificationExperiment
2024-04-28 13:18:00,981:INFO:Logging name: clf-default-name
2024-04-28 13:18:00,981:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:18:00,981:INFO:version 3.3.1
2024-04-28 13:18:00,981:INFO:Initializing setup()
2024-04-28 13:18:00,981:INFO:self.USI: d416
2024-04-28 13:18:00,981:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 13:18:00,981:INFO:Checking environment
2024-04-28 13:18:00,981:INFO:python_version: 3.9.12
2024-04-28 13:18:00,981:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 13:18:00,981:INFO:machine: AMD64
2024-04-28 13:18:00,981:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 13:18:00,985:INFO:Memory: svmem(total=34282364928, available=24462753792, percent=28.6, used=9819611136, free=24462753792)
2024-04-28 13:18:00,985:INFO:Physical Core: 6
2024-04-28 13:18:00,985:INFO:Logical Core: 12
2024-04-28 13:18:00,985:INFO:Checking libraries
2024-04-28 13:18:00,985:INFO:System:
2024-04-28 13:18:00,985:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:18:00,985:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 13:18:00,985:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 13:18:00,985:INFO:PyCaret required dependencies:
2024-04-28 13:18:00,985:INFO:                 pip: 21.2.4
2024-04-28 13:18:00,985:INFO:          setuptools: 61.2.0
2024-04-28 13:18:00,985:INFO:             pycaret: 3.3.1
2024-04-28 13:18:00,985:INFO:             IPython: 8.2.0
2024-04-28 13:18:00,985:INFO:          ipywidgets: 7.6.5
2024-04-28 13:18:00,985:INFO:                tqdm: 4.64.0
2024-04-28 13:18:00,985:INFO:               numpy: 1.21.5
2024-04-28 13:18:00,985:INFO:              pandas: 1.4.2
2024-04-28 13:18:00,985:INFO:              jinja2: 2.11.3
2024-04-28 13:18:00,985:INFO:               scipy: 1.7.3
2024-04-28 13:18:00,985:INFO:              joblib: 1.3.2
2024-04-28 13:18:00,986:INFO:             sklearn: 1.4.0
2024-04-28 13:18:00,986:INFO:                pyod: 1.1.3
2024-04-28 13:18:00,986:INFO:            imblearn: 0.12.2
2024-04-28 13:18:00,986:INFO:   category_encoders: 2.6.3
2024-04-28 13:18:00,986:INFO:            lightgbm: 4.3.0
2024-04-28 13:18:00,986:INFO:               numba: 0.55.1
2024-04-28 13:18:00,986:INFO:            requests: 2.27.1
2024-04-28 13:18:00,986:INFO:          matplotlib: 3.5.1
2024-04-28 13:18:00,986:INFO:          scikitplot: 0.3.7
2024-04-28 13:18:00,986:INFO:         yellowbrick: 1.5
2024-04-28 13:18:00,986:INFO:              plotly: 5.6.0
2024-04-28 13:18:00,986:INFO:    plotly-resampler: Not installed
2024-04-28 13:18:00,986:INFO:             kaleido: 0.2.1
2024-04-28 13:18:00,986:INFO:           schemdraw: 0.15
2024-04-28 13:18:00,986:INFO:         statsmodels: 0.13.2
2024-04-28 13:18:00,986:INFO:              sktime: 0.26.0
2024-04-28 13:18:00,986:INFO:               tbats: 1.1.3
2024-04-28 13:18:00,986:INFO:            pmdarima: 2.0.4
2024-04-28 13:18:00,986:INFO:              psutil: 5.9.8
2024-04-28 13:18:00,986:INFO:          markupsafe: 2.0.1
2024-04-28 13:18:00,986:INFO:             pickle5: Not installed
2024-04-28 13:18:00,986:INFO:         cloudpickle: 2.0.0
2024-04-28 13:18:00,986:INFO:         deprecation: 2.1.0
2024-04-28 13:18:00,986:INFO:              xxhash: 3.4.1
2024-04-28 13:18:00,986:INFO:           wurlitzer: Not installed
2024-04-28 13:18:00,986:INFO:PyCaret optional dependencies:
2024-04-28 13:18:00,986:INFO:                shap: Not installed
2024-04-28 13:18:00,987:INFO:           interpret: Not installed
2024-04-28 13:18:00,987:INFO:                umap: Not installed
2024-04-28 13:18:00,987:INFO:     ydata_profiling: Not installed
2024-04-28 13:18:00,987:INFO:  explainerdashboard: Not installed
2024-04-28 13:18:00,987:INFO:             autoviz: Not installed
2024-04-28 13:18:00,987:INFO:           fairlearn: Not installed
2024-04-28 13:18:00,987:INFO:          deepchecks: Not installed
2024-04-28 13:18:00,987:INFO:             xgboost: Not installed
2024-04-28 13:18:00,987:INFO:            catboost: Not installed
2024-04-28 13:18:00,987:INFO:              kmodes: Not installed
2024-04-28 13:18:00,987:INFO:             mlxtend: 0.23.1
2024-04-28 13:18:00,987:INFO:       statsforecast: Not installed
2024-04-28 13:18:00,987:INFO:        tune_sklearn: Not installed
2024-04-28 13:18:00,987:INFO:                 ray: Not installed
2024-04-28 13:18:00,987:INFO:            hyperopt: Not installed
2024-04-28 13:18:00,987:INFO:              optuna: 3.6.1
2024-04-28 13:18:00,987:INFO:               skopt: Not installed
2024-04-28 13:18:00,987:INFO:              mlflow: Not installed
2024-04-28 13:18:00,987:INFO:              gradio: Not installed
2024-04-28 13:18:00,987:INFO:             fastapi: Not installed
2024-04-28 13:18:00,987:INFO:             uvicorn: Not installed
2024-04-28 13:18:00,987:INFO:              m2cgen: Not installed
2024-04-28 13:18:00,987:INFO:           evidently: Not installed
2024-04-28 13:18:00,987:INFO:               fugue: Not installed
2024-04-28 13:18:00,987:INFO:           streamlit: 1.31.1
2024-04-28 13:18:00,987:INFO:             prophet: Not installed
2024-04-28 13:18:00,987:INFO:None
2024-04-28 13:18:00,987:INFO:Set up data.
2024-04-28 13:18:00,997:INFO:Set up folding strategy.
2024-04-28 13:18:00,997:INFO:Set up train/test split.
2024-04-28 13:18:01,003:INFO:Set up index.
2024-04-28 13:18:01,003:INFO:Assigning column types.
2024-04-28 13:18:01,005:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:18:01,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:18:01,050:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:18:01,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,120:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:18:01,121:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:18:01,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,148:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:18:01,191:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:18:01,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,263:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:18:01,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,290:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:18:01,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:01,434:INFO:Preparing preprocessing pipeline...
2024-04-28 13:18:01,435:INFO:Set up label encoding.
2024-04-28 13:18:01,435:INFO:Set up simple imputation.
2024-04-28 13:18:01,438:INFO:Set up encoding of ordinal features.
2024-04-28 13:18:01,445:INFO:Set up encoding of categorical features.
2024-04-28 13:18:01,445:INFO:Set up imbalanced handling.
2024-04-28 13:18:01,559:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:18:01,608:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifet...
                                    transformer=OneHotEncoder(cols=['homeowner_children',
                                                                    'zip_gender'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=27,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2024-04-28 13:18:01,609:INFO:Creating final display dataframe.
2024-04-28 13:18:01,957:INFO:Setup _display_container:                     Description                  Value
0                    Session id                     27
1                        Target                 target
2                   Target type                 Binary
3                Target mapping  Donor: 0, No Donor: 1
4           Original data shape             (2400, 30)
5        Transformed data shape             (2418, 45)
6   Transformed train set shape             (1698, 45)
7    Transformed test set shape              (720, 45)
8              Numeric features                     20
9          Categorical features                      9
10                   Preprocess                   True
11              Imputation type                 simple
12           Numeric imputation                   mean
13       Categorical imputation                   mode
14     Maximum one-hot encoding                     25
15              Encoding method                   None
16                Fix imbalance                   True
17         Fix imbalance method                  SMOTE
18               Fold Generator        StratifiedKFold
19                  Fold Number                     10
20                     CPU Jobs                     -1
21                      Use GPU                  False
22               Log Experiment                  False
23              Experiment Name       clf-default-name
24                          USI                   d416
2024-04-28 13:18:02,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:02,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:02,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:02,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:18:02,108:INFO:setup() successfully completed in 1.13s...............
2024-04-28 13:18:02,111:INFO:Initializing compare_models()
2024-04-28 13:18:02,111:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:18:02,111:INFO:Checking exceptions
2024-04-28 13:18:02,114:INFO:Preparing display monitor
2024-04-28 13:18:02,147:INFO:Initializing Logistic Regression
2024-04-28 13:18:02,147:INFO:Total runtime is 0.0 minutes
2024-04-28 13:18:02,150:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:02,150:INFO:Initializing create_model()
2024-04-28 13:18:02,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:02,150:INFO:Checking exceptions
2024-04-28 13:18:02,150:INFO:Importing libraries
2024-04-28 13:18:02,150:INFO:Copying training dataset
2024-04-28 13:18:02,155:INFO:Defining folds
2024-04-28 13:18:02,156:INFO:Declaring metric variables
2024-04-28 13:18:02,159:INFO:Importing untrained model
2024-04-28 13:18:02,162:INFO:Logistic Regression Imported successfully
2024-04-28 13:18:02,167:INFO:Starting cross validation
2024-04-28 13:18:02,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:02,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:02,715:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:02,723:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:02,728:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:03,152:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:03,198:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:03,202:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:03,206:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,060:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:09,061:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:09,066:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:09,075:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:09,077:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:09,080:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:09,083:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:09,083:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:09,108:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,108:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,109:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,112:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,113:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,113:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,116:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,117:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,120:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,122:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,124:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,124:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,125:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,127:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,128:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,128:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,129:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,131:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,132:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,132:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,133:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,135:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,137:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,157:INFO:Calculating mean and std
2024-04-28 13:18:09,159:INFO:Creating metrics dataframe
2024-04-28 13:18:09,163:INFO:Uploading results into container
2024-04-28 13:18:09,164:INFO:Uploading model into container now
2024-04-28 13:18:09,164:INFO:_master_model_container: 1
2024-04-28 13:18:09,165:INFO:_display_container: 2
2024-04-28 13:18:09,165:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:18:09,165:INFO:create_model() successfully completed......................................
2024-04-28 13:18:09,486:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:09,487:INFO:Creating metrics dataframe
2024-04-28 13:18:09,493:INFO:Initializing K Neighbors Classifier
2024-04-28 13:18:09,493:INFO:Total runtime is 0.12242795626322428 minutes
2024-04-28 13:18:09,496:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:09,496:INFO:Initializing create_model()
2024-04-28 13:18:09,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:09,496:INFO:Checking exceptions
2024-04-28 13:18:09,496:INFO:Importing libraries
2024-04-28 13:18:09,496:INFO:Copying training dataset
2024-04-28 13:18:09,502:INFO:Defining folds
2024-04-28 13:18:09,502:INFO:Declaring metric variables
2024-04-28 13:18:09,504:INFO:Importing untrained model
2024-04-28 13:18:09,507:INFO:K Neighbors Classifier Imported successfully
2024-04-28 13:18:09,511:INFO:Starting cross validation
2024-04-28 13:18:09,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:09,753:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:09,753:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:09,755:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,757:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,760:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,765:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:09,768:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:09,768:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:09,769:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:09,771:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,772:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:09,772:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:09,773:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:09,774:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,774:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,775:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,778:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,778:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:09,779:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,779:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:09,780:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,781:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,782:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,783:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,782:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:09,785:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,785:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:09,786:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,789:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,789:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:09,791:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,792:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,794:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:09,796:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,915:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:13,917:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:13,918:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:13,919:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:13,920:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:13,921:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,921:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:13,922:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,923:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,923:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,925:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,926:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,926:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,927:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,929:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:13,949:INFO:Calculating mean and std
2024-04-28 13:18:13,951:INFO:Creating metrics dataframe
2024-04-28 13:18:13,953:INFO:Uploading results into container
2024-04-28 13:18:13,954:INFO:Uploading model into container now
2024-04-28 13:18:13,954:INFO:_master_model_container: 2
2024-04-28 13:18:13,954:INFO:_display_container: 2
2024-04-28 13:18:13,954:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-28 13:18:13,955:INFO:create_model() successfully completed......................................
2024-04-28 13:18:14,229:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:14,229:INFO:Creating metrics dataframe
2024-04-28 13:18:14,236:INFO:Initializing Naive Bayes
2024-04-28 13:18:14,237:INFO:Total runtime is 0.20149983167648317 minutes
2024-04-28 13:18:14,239:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:14,240:INFO:Initializing create_model()
2024-04-28 13:18:14,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:14,240:INFO:Checking exceptions
2024-04-28 13:18:14,240:INFO:Importing libraries
2024-04-28 13:18:14,240:INFO:Copying training dataset
2024-04-28 13:18:14,244:INFO:Defining folds
2024-04-28 13:18:14,245:INFO:Declaring metric variables
2024-04-28 13:18:14,247:INFO:Importing untrained model
2024-04-28 13:18:14,249:INFO:Naive Bayes Imported successfully
2024-04-28 13:18:14,253:INFO:Starting cross validation
2024-04-28 13:18:14,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:14,418:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,419:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,420:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,423:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,425:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,426:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,431:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,433:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,435:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,438:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,453:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,454:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,455:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,455:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,456:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,456:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,458:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,458:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,459:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,460:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,461:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,462:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

his is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,462:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,463:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,464:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,465:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,465:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,466:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,466:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,467:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,467:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,468:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,469:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,470:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,471:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,471:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,475:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,475:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,476:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,477:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,478:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,478:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:14,479:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,479:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:14,481:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,481:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,483:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,485:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,487:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:14,502:INFO:Calculating mean and std
2024-04-28 13:18:14,503:INFO:Creating metrics dataframe
2024-04-28 13:18:14,506:INFO:Uploading results into container
2024-04-28 13:18:14,506:INFO:Uploading model into container now
2024-04-28 13:18:14,506:INFO:_master_model_container: 3
2024-04-28 13:18:14,506:INFO:_display_container: 2
2024-04-28 13:18:14,507:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-28 13:18:14,507:INFO:create_model() successfully completed......................................
2024-04-28 13:18:14,762:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:14,763:INFO:Creating metrics dataframe
2024-04-28 13:18:14,770:INFO:Initializing Decision Tree Classifier
2024-04-28 13:18:14,770:INFO:Total runtime is 0.21037124395370485 minutes
2024-04-28 13:18:14,773:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:14,774:INFO:Initializing create_model()
2024-04-28 13:18:14,774:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:14,774:INFO:Checking exceptions
2024-04-28 13:18:14,774:INFO:Importing libraries
2024-04-28 13:18:14,774:INFO:Copying training dataset
2024-04-28 13:18:14,779:INFO:Defining folds
2024-04-28 13:18:14,779:INFO:Declaring metric variables
2024-04-28 13:18:14,782:INFO:Importing untrained model
2024-04-28 13:18:14,784:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:18:14,790:INFO:Starting cross validation
2024-04-28 13:18:14,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:15,011:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:15,012:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:15,015:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,019:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,022:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,023:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:15,023:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:15,024:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:15,025:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,026:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,029:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,030:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,032:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:15,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:15,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:15,034:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,035:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,035:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,036:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:15,037:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:15,037:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,037:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:15,037:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:15,039:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,039:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:15,039:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,039:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,039:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,040:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,040:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:15,042:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,042:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,042:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,043:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,043:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:15,044:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:15,045:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,045:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,046:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,046:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,047:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,047:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,050:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,053:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,073:INFO:Calculating mean and std
2024-04-28 13:18:15,074:INFO:Creating metrics dataframe
2024-04-28 13:18:15,077:INFO:Uploading results into container
2024-04-28 13:18:15,078:INFO:Uploading model into container now
2024-04-28 13:18:15,078:INFO:_master_model_container: 4
2024-04-28 13:18:15,078:INFO:_display_container: 2
2024-04-28 13:18:15,078:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-28 13:18:15,078:INFO:create_model() successfully completed......................................
2024-04-28 13:18:15,329:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:15,329:INFO:Creating metrics dataframe
2024-04-28 13:18:15,336:INFO:Initializing SVM - Linear Kernel
2024-04-28 13:18:15,336:INFO:Total runtime is 0.21981317599614464 minutes
2024-04-28 13:18:15,338:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:15,339:INFO:Initializing create_model()
2024-04-28 13:18:15,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:15,339:INFO:Checking exceptions
2024-04-28 13:18:15,339:INFO:Importing libraries
2024-04-28 13:18:15,339:INFO:Copying training dataset
2024-04-28 13:18:15,344:INFO:Defining folds
2024-04-28 13:18:15,344:INFO:Declaring metric variables
2024-04-28 13:18:15,346:INFO:Importing untrained model
2024-04-28 13:18:15,348:INFO:SVM - Linear Kernel Imported successfully
2024-04-28 13:18:15,353:INFO:Starting cross validation
2024-04-28 13:18:15,355:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:15,548:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,551:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,551:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,553:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,553:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,556:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,563:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,564:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,564:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,567:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,568:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,568:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,570:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:15,570:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,571:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,572:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,574:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,575:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,577:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,578:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,579:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,580:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,581:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,581:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,582:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,582:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:15,583:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,585:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,585:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,587:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,588:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,590:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:15,595:INFO:Calculating mean and std
2024-04-28 13:18:15,596:INFO:Creating metrics dataframe
2024-04-28 13:18:15,599:INFO:Uploading results into container
2024-04-28 13:18:15,599:INFO:Uploading model into container now
2024-04-28 13:18:15,599:INFO:_master_model_container: 5
2024-04-28 13:18:15,599:INFO:_display_container: 2
2024-04-28 13:18:15,600:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-28 13:18:15,600:INFO:create_model() successfully completed......................................
2024-04-28 13:18:15,853:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:15,853:INFO:Creating metrics dataframe
2024-04-28 13:18:15,860:INFO:Initializing Ridge Classifier
2024-04-28 13:18:15,860:INFO:Total runtime is 0.22855443954467777 minutes
2024-04-28 13:18:15,864:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:15,864:INFO:Initializing create_model()
2024-04-28 13:18:15,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:15,864:INFO:Checking exceptions
2024-04-28 13:18:15,864:INFO:Importing libraries
2024-04-28 13:18:15,864:INFO:Copying training dataset
2024-04-28 13:18:15,870:INFO:Defining folds
2024-04-28 13:18:15,870:INFO:Declaring metric variables
2024-04-28 13:18:15,873:INFO:Importing untrained model
2024-04-28 13:18:15,875:INFO:Ridge Classifier Imported successfully
2024-04-28 13:18:15,879:INFO:Starting cross validation
2024-04-28 13:18:15,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:16,071:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,075:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,079:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,083:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,084:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,086:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,087:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,088:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,089:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,089:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,091:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,091:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,091:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,092:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,092:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,093:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,096:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,096:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,102:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,103:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,104:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,104:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,104:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,106:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,106:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,106:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,107:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,108:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,122:INFO:Calculating mean and std
2024-04-28 13:18:16,123:INFO:Creating metrics dataframe
2024-04-28 13:18:16,126:INFO:Uploading results into container
2024-04-28 13:18:16,126:INFO:Uploading model into container now
2024-04-28 13:18:16,127:INFO:_master_model_container: 6
2024-04-28 13:18:16,127:INFO:_display_container: 2
2024-04-28 13:18:16,127:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 13:18:16,127:INFO:create_model() successfully completed......................................
2024-04-28 13:18:16,382:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:16,382:INFO:Creating metrics dataframe
2024-04-28 13:18:16,390:INFO:Initializing Random Forest Classifier
2024-04-28 13:18:16,390:INFO:Total runtime is 0.23737914562225346 minutes
2024-04-28 13:18:16,393:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:16,393:INFO:Initializing create_model()
2024-04-28 13:18:16,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:16,393:INFO:Checking exceptions
2024-04-28 13:18:16,393:INFO:Importing libraries
2024-04-28 13:18:16,393:INFO:Copying training dataset
2024-04-28 13:18:16,399:INFO:Defining folds
2024-04-28 13:18:16,399:INFO:Declaring metric variables
2024-04-28 13:18:16,401:INFO:Importing untrained model
2024-04-28 13:18:16,404:INFO:Random Forest Classifier Imported successfully
2024-04-28 13:18:16,411:INFO:Starting cross validation
2024-04-28 13:18:16,414:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:16,927:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:16,927:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:16,929:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,933:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:16,937:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,054:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:17,054:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:17,055:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:17,055:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:17,056:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:17,057:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:17,057:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,058:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,059:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,061:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,061:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,063:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,065:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,065:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,066:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,069:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:17,070:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:17,072:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,075:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,078:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,085:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:17,086:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:17,088:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,091:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,093:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,100:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:17,101:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:17,101:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:17,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:17,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:17,102:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:17,103:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,103:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,103:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,105:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,105:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,106:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,108:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,108:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,108:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,117:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:17,117:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:17,118:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,121:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,123:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,128:INFO:Calculating mean and std
2024-04-28 13:18:17,129:INFO:Creating metrics dataframe
2024-04-28 13:18:17,132:INFO:Uploading results into container
2024-04-28 13:18:17,132:INFO:Uploading model into container now
2024-04-28 13:18:17,132:INFO:_master_model_container: 7
2024-04-28 13:18:17,132:INFO:_display_container: 2
2024-04-28 13:18:17,133:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-28 13:18:17,133:INFO:create_model() successfully completed......................................
2024-04-28 13:18:17,389:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:17,389:INFO:Creating metrics dataframe
2024-04-28 13:18:17,397:INFO:Initializing Quadratic Discriminant Analysis
2024-04-28 13:18:17,397:INFO:Total runtime is 0.25416105985641485 minutes
2024-04-28 13:18:17,399:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:17,400:INFO:Initializing create_model()
2024-04-28 13:18:17,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:17,400:INFO:Checking exceptions
2024-04-28 13:18:17,400:INFO:Importing libraries
2024-04-28 13:18:17,400:INFO:Copying training dataset
2024-04-28 13:18:17,406:INFO:Defining folds
2024-04-28 13:18:17,406:INFO:Declaring metric variables
2024-04-28 13:18:17,409:INFO:Importing untrained model
2024-04-28 13:18:17,411:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-28 13:18:17,415:INFO:Starting cross validation
2024-04-28 13:18:17,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:17,578:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:18:17,591:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:18:17,591:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:18:17,591:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:18:17,593:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:18:17,595:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:18:17,595:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:18:17,598:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:18:17,606:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:18:17,623:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,626:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,626:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,630:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,634:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,635:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,639:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,639:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,642:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,643:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,644:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,648:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,649:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,649:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,650:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,656:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,659:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,661:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:17,669:INFO:Calculating mean and std
2024-04-28 13:18:17,670:INFO:Creating metrics dataframe
2024-04-28 13:18:17,672:INFO:Uploading results into container
2024-04-28 13:18:17,673:INFO:Uploading model into container now
2024-04-28 13:18:17,673:INFO:_master_model_container: 8
2024-04-28 13:18:17,673:INFO:_display_container: 2
2024-04-28 13:18:17,673:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-28 13:18:17,673:INFO:create_model() successfully completed......................................
2024-04-28 13:18:17,913:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:17,913:INFO:Creating metrics dataframe
2024-04-28 13:18:17,922:INFO:Initializing Ada Boost Classifier
2024-04-28 13:18:17,922:INFO:Total runtime is 0.26291903257370003 minutes
2024-04-28 13:18:17,924:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:17,924:INFO:Initializing create_model()
2024-04-28 13:18:17,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:17,925:INFO:Checking exceptions
2024-04-28 13:18:17,925:INFO:Importing libraries
2024-04-28 13:18:17,925:INFO:Copying training dataset
2024-04-28 13:18:17,931:INFO:Defining folds
2024-04-28 13:18:17,931:INFO:Declaring metric variables
2024-04-28 13:18:17,934:INFO:Importing untrained model
2024-04-28 13:18:17,936:INFO:Ada Boost Classifier Imported successfully
2024-04-28 13:18:17,940:INFO:Starting cross validation
2024-04-28 13:18:17,942:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:18,103:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,103:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,105:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,108:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,108:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,111:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,113:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,120:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,121:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,126:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:18:18,368:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,372:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,376:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,377:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,377:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,379:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,380:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,381:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,381:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,381:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,382:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,382:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,384:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,384:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,384:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,384:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,385:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,385:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,388:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,388:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,388:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,400:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,402:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,402:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,404:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,405:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,405:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,407:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,407:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:18,417:INFO:Calculating mean and std
2024-04-28 13:18:18,418:INFO:Creating metrics dataframe
2024-04-28 13:18:18,421:INFO:Uploading results into container
2024-04-28 13:18:18,421:INFO:Uploading model into container now
2024-04-28 13:18:18,421:INFO:_master_model_container: 9
2024-04-28 13:18:18,422:INFO:_display_container: 2
2024-04-28 13:18:18,422:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 13:18:18,422:INFO:create_model() successfully completed......................................
2024-04-28 13:18:18,676:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:18,676:INFO:Creating metrics dataframe
2024-04-28 13:18:18,685:INFO:Initializing Gradient Boosting Classifier
2024-04-28 13:18:18,686:INFO:Total runtime is 0.27564939260482796 minutes
2024-04-28 13:18:18,688:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:18,688:INFO:Initializing create_model()
2024-04-28 13:18:18,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:18,688:INFO:Checking exceptions
2024-04-28 13:18:18,688:INFO:Importing libraries
2024-04-28 13:18:18,689:INFO:Copying training dataset
2024-04-28 13:18:18,695:INFO:Defining folds
2024-04-28 13:18:18,695:INFO:Declaring metric variables
2024-04-28 13:18:18,697:INFO:Importing untrained model
2024-04-28 13:18:18,700:INFO:Gradient Boosting Classifier Imported successfully
2024-04-28 13:18:18,705:INFO:Starting cross validation
2024-04-28 13:18:18,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:19,591:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,595:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,599:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,611:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,615:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,619:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,622:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,624:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,625:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,625:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,628:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,628:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,629:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,630:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,632:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,633:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,633:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,635:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,644:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,646:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,646:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,648:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,649:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,650:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,650:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,652:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,654:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,658:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,661:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,663:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:19,675:INFO:Calculating mean and std
2024-04-28 13:18:19,676:INFO:Creating metrics dataframe
2024-04-28 13:18:19,679:INFO:Uploading results into container
2024-04-28 13:18:19,680:INFO:Uploading model into container now
2024-04-28 13:18:19,680:INFO:_master_model_container: 10
2024-04-28 13:18:19,680:INFO:_display_container: 2
2024-04-28 13:18:19,681:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-28 13:18:19,681:INFO:create_model() successfully completed......................................
2024-04-28 13:18:19,941:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:19,942:INFO:Creating metrics dataframe
2024-04-28 13:18:19,950:INFO:Initializing Linear Discriminant Analysis
2024-04-28 13:18:19,950:INFO:Total runtime is 0.2967185219128927 minutes
2024-04-28 13:18:19,953:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:19,953:INFO:Initializing create_model()
2024-04-28 13:18:19,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:19,953:INFO:Checking exceptions
2024-04-28 13:18:19,953:INFO:Importing libraries
2024-04-28 13:18:19,953:INFO:Copying training dataset
2024-04-28 13:18:19,958:INFO:Defining folds
2024-04-28 13:18:19,958:INFO:Declaring metric variables
2024-04-28 13:18:19,960:INFO:Importing untrained model
2024-04-28 13:18:19,963:INFO:Linear Discriminant Analysis Imported successfully
2024-04-28 13:18:19,967:INFO:Starting cross validation
2024-04-28 13:18:19,969:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:20,188:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,189:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,192:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,192:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,193:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,194:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,195:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,196:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,196:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,197:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,198:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,198:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,200:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,200:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,200:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,201:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,201:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,202:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,204:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,205:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,205:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,206:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,208:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,208:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,210:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,212:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,232:INFO:Calculating mean and std
2024-04-28 13:18:20,233:INFO:Creating metrics dataframe
2024-04-28 13:18:20,236:INFO:Uploading results into container
2024-04-28 13:18:20,236:INFO:Uploading model into container now
2024-04-28 13:18:20,236:INFO:_master_model_container: 11
2024-04-28 13:18:20,236:INFO:_display_container: 2
2024-04-28 13:18:20,237:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-28 13:18:20,237:INFO:create_model() successfully completed......................................
2024-04-28 13:18:20,492:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:20,493:INFO:Creating metrics dataframe
2024-04-28 13:18:20,501:INFO:Initializing Extra Trees Classifier
2024-04-28 13:18:20,502:INFO:Total runtime is 0.3059102217356365 minutes
2024-04-28 13:18:20,504:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:20,504:INFO:Initializing create_model()
2024-04-28 13:18:20,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:20,505:INFO:Checking exceptions
2024-04-28 13:18:20,505:INFO:Importing libraries
2024-04-28 13:18:20,505:INFO:Copying training dataset
2024-04-28 13:18:20,510:INFO:Defining folds
2024-04-28 13:18:20,510:INFO:Declaring metric variables
2024-04-28 13:18:20,512:INFO:Importing untrained model
2024-04-28 13:18:20,515:INFO:Extra Trees Classifier Imported successfully
2024-04-28 13:18:20,520:INFO:Starting cross validation
2024-04-28 13:18:20,522:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:20,984:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:20,985:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:20,986:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:20,986:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:20,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,988:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,992:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,993:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,996:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:20,996:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,034:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:21,035:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:21,037:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,041:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,045:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,064:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:21,065:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:21,065:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:21,065:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:21,067:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,068:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,071:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,072:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,075:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,076:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,080:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:21,080:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:21,081:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:21,081:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:21,082:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,083:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,087:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,088:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,090:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,092:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,095:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:21,096:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:21,098:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,101:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,103:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,110:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:21,111:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:21,112:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,114:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,117:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,140:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:21,141:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:21,142:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,145:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,148:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:21,168:INFO:Calculating mean and std
2024-04-28 13:18:21,169:INFO:Creating metrics dataframe
2024-04-28 13:18:21,172:INFO:Uploading results into container
2024-04-28 13:18:21,172:INFO:Uploading model into container now
2024-04-28 13:18:21,173:INFO:_master_model_container: 12
2024-04-28 13:18:21,173:INFO:_display_container: 2
2024-04-28 13:18:21,173:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-28 13:18:21,173:INFO:create_model() successfully completed......................................
2024-04-28 13:18:21,435:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:21,436:INFO:Creating metrics dataframe
2024-04-28 13:18:21,444:INFO:Initializing Light Gradient Boosting Machine
2024-04-28 13:18:21,444:INFO:Total runtime is 0.32160781621932993 minutes
2024-04-28 13:18:21,447:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:21,447:INFO:Initializing create_model()
2024-04-28 13:18:21,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:21,448:INFO:Checking exceptions
2024-04-28 13:18:21,448:INFO:Importing libraries
2024-04-28 13:18:21,448:INFO:Copying training dataset
2024-04-28 13:18:21,452:INFO:Defining folds
2024-04-28 13:18:21,452:INFO:Declaring metric variables
2024-04-28 13:18:21,454:INFO:Importing untrained model
2024-04-28 13:18:21,456:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-28 13:18:21,461:INFO:Starting cross validation
2024-04-28 13:18:21,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:22,282:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,283:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,285:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,289:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,293:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,299:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,300:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,302:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,305:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,308:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,320:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,321:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,323:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,323:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,324:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,325:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,328:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,330:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,332:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,333:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,346:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,346:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,348:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,352:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,356:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,356:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,356:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,357:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,357:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,358:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,359:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,361:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,362:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,364:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,365:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,405:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,405:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,407:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,410:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,413:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,508:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,509:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,510:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,514:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,518:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,528:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:22,529:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:22,530:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,534:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,537:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:22,558:INFO:Calculating mean and std
2024-04-28 13:18:22,560:INFO:Creating metrics dataframe
2024-04-28 13:18:22,563:INFO:Uploading results into container
2024-04-28 13:18:22,563:INFO:Uploading model into container now
2024-04-28 13:18:22,564:INFO:_master_model_container: 13
2024-04-28 13:18:22,564:INFO:_display_container: 2
2024-04-28 13:18:22,565:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-28 13:18:22,565:INFO:create_model() successfully completed......................................
2024-04-28 13:18:22,824:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:22,824:INFO:Creating metrics dataframe
2024-04-28 13:18:22,833:INFO:Initializing Dummy Classifier
2024-04-28 13:18:22,833:INFO:Total runtime is 0.3447622060775758 minutes
2024-04-28 13:18:22,835:INFO:SubProcess create_model() called ==================================
2024-04-28 13:18:22,835:INFO:Initializing create_model()
2024-04-28 13:18:22,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE0F2BEC70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:22,835:INFO:Checking exceptions
2024-04-28 13:18:22,835:INFO:Importing libraries
2024-04-28 13:18:22,836:INFO:Copying training dataset
2024-04-28 13:18:22,840:INFO:Defining folds
2024-04-28 13:18:22,840:INFO:Declaring metric variables
2024-04-28 13:18:22,843:INFO:Importing untrained model
2024-04-28 13:18:22,846:INFO:Dummy Classifier Imported successfully
2024-04-28 13:18:22,851:INFO:Starting cross validation
2024-04-28 13:18:22,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:18:23,051:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,052:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,054:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,054:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,055:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,057:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,058:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,060:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,061:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,063:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,063:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,064:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,065:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,065:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,067:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,068:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,069:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,069:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,069:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,070:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,070:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,072:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,072:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,072:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,073:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,074:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,075:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,075:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,076:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,077:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,077:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,077:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,078:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,079:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,079:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,079:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,080:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,081:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,081:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,081:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,081:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,082:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,082:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,083:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,084:WARNING:C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py:576: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2024-04-28 13:18:23,084:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,084:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,085:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\frame.py", line 737, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 351, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "C:\Users\dansc\anaconda3\lib\site-packages\pandas\core\internals\construction.py", line 422, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (2, 1), indices imply (2, 168)

  warnings.warn(

2024-04-28 13:18:23,086:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,086:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,087:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,088:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,088:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,088:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,089:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,089:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,090:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,091:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,092:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:18:23,094:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'No Donor') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-28 13:18:23,100:INFO:Calculating mean and std
2024-04-28 13:18:23,101:INFO:Creating metrics dataframe
2024-04-28 13:18:23,104:INFO:Uploading results into container
2024-04-28 13:18:23,104:INFO:Uploading model into container now
2024-04-28 13:18:23,104:INFO:_master_model_container: 14
2024-04-28 13:18:23,104:INFO:_display_container: 2
2024-04-28 13:18:23,105:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-28 13:18:23,105:INFO:create_model() successfully completed......................................
2024-04-28 13:18:23,369:INFO:SubProcess create_model() end ==================================
2024-04-28 13:18:23,369:INFO:Creating metrics dataframe
2024-04-28 13:18:23,387:INFO:Initializing create_model()
2024-04-28 13:18:23,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:18:23,388:INFO:Checking exceptions
2024-04-28 13:18:23,389:INFO:Importing libraries
2024-04-28 13:18:23,389:INFO:Copying training dataset
2024-04-28 13:18:23,393:INFO:Defining folds
2024-04-28 13:18:23,393:INFO:Declaring metric variables
2024-04-28 13:18:23,394:INFO:Importing untrained model
2024-04-28 13:18:23,394:INFO:Declaring custom model
2024-04-28 13:18:23,394:INFO:Logistic Regression Imported successfully
2024-04-28 13:18:23,395:INFO:Cross validation set to False
2024-04-28 13:18:23,396:INFO:Fitting Model
2024-04-28 13:18:23,654:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:18:23,655:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:18:23,655:INFO:create_model() successfully completed......................................
2024-04-28 13:18:23,917:INFO:_master_model_container: 14
2024-04-28 13:18:23,917:INFO:_display_container: 2
2024-04-28 13:18:23,917:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:18:23,917:INFO:compare_models() successfully completed......................................
2024-04-28 13:18:26,019:INFO:Initializing predict_model()
2024-04-28 13:18:26,019:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE1246D6D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE1274BAF0>)
2024-04-28 13:18:26,019:INFO:Checking exceptions
2024-04-28 13:18:26,019:INFO:Preloading libraries
2024-04-28 13:18:26,021:INFO:Set up data.
2024-04-28 13:18:26,028:INFO:Set up index.
2024-04-28 13:25:25,939:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\3370468113.py:51: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.fillna(df.mean(), inplace=True)

2024-04-28 13:25:52,045:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\3370468113.py:51: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.fillna(df.mean(), inplace=True)

2024-04-28 13:29:16,954:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\3370468113.py:51: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.fillna(df.mean(), inplace=True)

2024-04-28 13:37:42,254:INFO:PyCaret ClassificationExperiment
2024-04-28 13:37:42,254:INFO:Logging name: clf-default-name
2024-04-28 13:37:42,254:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:37:42,254:INFO:version 3.3.1
2024-04-28 13:37:42,254:INFO:Initializing setup()
2024-04-28 13:37:42,254:INFO:self.USI: f106
2024-04-28 13:37:42,254:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 13:37:42,254:INFO:Checking environment
2024-04-28 13:37:42,254:INFO:python_version: 3.9.12
2024-04-28 13:37:42,254:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 13:37:42,254:INFO:machine: AMD64
2024-04-28 13:37:42,254:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 13:37:42,257:INFO:Memory: svmem(total=34282364928, available=24179814400, percent=29.5, used=10102550528, free=24179814400)
2024-04-28 13:37:42,258:INFO:Physical Core: 6
2024-04-28 13:37:42,258:INFO:Logical Core: 12
2024-04-28 13:37:42,258:INFO:Checking libraries
2024-04-28 13:37:42,258:INFO:System:
2024-04-28 13:37:42,258:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:37:42,258:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 13:37:42,258:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 13:37:42,258:INFO:PyCaret required dependencies:
2024-04-28 13:37:42,258:INFO:                 pip: 21.2.4
2024-04-28 13:37:42,258:INFO:          setuptools: 61.2.0
2024-04-28 13:37:42,258:INFO:             pycaret: 3.3.1
2024-04-28 13:37:42,258:INFO:             IPython: 8.2.0
2024-04-28 13:37:42,258:INFO:          ipywidgets: 7.6.5
2024-04-28 13:37:42,258:INFO:                tqdm: 4.64.0
2024-04-28 13:37:42,258:INFO:               numpy: 1.21.5
2024-04-28 13:37:42,258:INFO:              pandas: 1.4.2
2024-04-28 13:37:42,258:INFO:              jinja2: 2.11.3
2024-04-28 13:37:42,258:INFO:               scipy: 1.7.3
2024-04-28 13:37:42,258:INFO:              joblib: 1.3.2
2024-04-28 13:37:42,258:INFO:             sklearn: 1.4.0
2024-04-28 13:37:42,258:INFO:                pyod: 1.1.3
2024-04-28 13:37:42,258:INFO:            imblearn: 0.12.2
2024-04-28 13:37:42,258:INFO:   category_encoders: 2.6.3
2024-04-28 13:37:42,258:INFO:            lightgbm: 4.3.0
2024-04-28 13:37:42,259:INFO:               numba: 0.55.1
2024-04-28 13:37:42,259:INFO:            requests: 2.27.1
2024-04-28 13:37:42,259:INFO:          matplotlib: 3.5.1
2024-04-28 13:37:42,259:INFO:          scikitplot: 0.3.7
2024-04-28 13:37:42,259:INFO:         yellowbrick: 1.5
2024-04-28 13:37:42,259:INFO:              plotly: 5.6.0
2024-04-28 13:37:42,259:INFO:    plotly-resampler: Not installed
2024-04-28 13:37:42,259:INFO:             kaleido: 0.2.1
2024-04-28 13:37:42,259:INFO:           schemdraw: 0.15
2024-04-28 13:37:42,259:INFO:         statsmodels: 0.13.2
2024-04-28 13:37:42,259:INFO:              sktime: 0.26.0
2024-04-28 13:37:42,259:INFO:               tbats: 1.1.3
2024-04-28 13:37:42,259:INFO:            pmdarima: 2.0.4
2024-04-28 13:37:42,259:INFO:              psutil: 5.9.8
2024-04-28 13:37:42,259:INFO:          markupsafe: 2.0.1
2024-04-28 13:37:42,259:INFO:             pickle5: Not installed
2024-04-28 13:37:42,259:INFO:         cloudpickle: 2.0.0
2024-04-28 13:37:42,259:INFO:         deprecation: 2.1.0
2024-04-28 13:37:42,259:INFO:              xxhash: 3.4.1
2024-04-28 13:37:42,259:INFO:           wurlitzer: Not installed
2024-04-28 13:37:42,259:INFO:PyCaret optional dependencies:
2024-04-28 13:37:42,259:INFO:                shap: Not installed
2024-04-28 13:37:42,259:INFO:           interpret: Not installed
2024-04-28 13:37:42,259:INFO:                umap: Not installed
2024-04-28 13:37:42,259:INFO:     ydata_profiling: Not installed
2024-04-28 13:37:42,259:INFO:  explainerdashboard: Not installed
2024-04-28 13:37:42,259:INFO:             autoviz: Not installed
2024-04-28 13:37:42,259:INFO:           fairlearn: Not installed
2024-04-28 13:37:42,259:INFO:          deepchecks: Not installed
2024-04-28 13:37:42,259:INFO:             xgboost: Not installed
2024-04-28 13:37:42,260:INFO:            catboost: Not installed
2024-04-28 13:37:42,260:INFO:              kmodes: Not installed
2024-04-28 13:37:42,260:INFO:             mlxtend: 0.23.1
2024-04-28 13:37:42,260:INFO:       statsforecast: Not installed
2024-04-28 13:37:42,260:INFO:        tune_sklearn: Not installed
2024-04-28 13:37:42,260:INFO:                 ray: Not installed
2024-04-28 13:37:42,260:INFO:            hyperopt: Not installed
2024-04-28 13:37:42,260:INFO:              optuna: 3.6.1
2024-04-28 13:37:42,260:INFO:               skopt: Not installed
2024-04-28 13:37:42,260:INFO:              mlflow: Not installed
2024-04-28 13:37:42,260:INFO:              gradio: Not installed
2024-04-28 13:37:42,260:INFO:             fastapi: Not installed
2024-04-28 13:37:42,260:INFO:             uvicorn: Not installed
2024-04-28 13:37:42,260:INFO:              m2cgen: Not installed
2024-04-28 13:37:42,260:INFO:           evidently: Not installed
2024-04-28 13:37:42,260:INFO:               fugue: Not installed
2024-04-28 13:37:42,260:INFO:           streamlit: 1.31.1
2024-04-28 13:37:42,260:INFO:             prophet: Not installed
2024-04-28 13:37:42,260:INFO:None
2024-04-28 13:37:42,260:INFO:Set up data.
2024-04-28 13:37:42,271:INFO:Set up folding strategy.
2024-04-28 13:37:42,272:INFO:Set up train/test split.
2024-04-28 13:37:42,276:INFO:Set up index.
2024-04-28 13:37:42,276:INFO:Assigning column types.
2024-04-28 13:37:42,279:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:37:42,322:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:37:42,323:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:37:42,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:37:42,394:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:37:42,422:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,422:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:37:42,466:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:37:42,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,537:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:37:42,563:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,564:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:37:42,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:42,708:INFO:Preparing preprocessing pipeline...
2024-04-28 13:37:42,709:INFO:Set up simple imputation.
2024-04-28 13:37:42,709:INFO:Set up imbalanced handling.
2024-04-28 13:37:42,709:INFO:Set up column name cleaning.
2024-04-28 13:37:42,774:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:37:42,780:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'med_fam_inc',
                                             'avg_fam_inc', 'pct_lt15k',
                                             'num_prom', 'lifetime_gifts',
                                             'largest_gift', 'last_gift',
                                             'months_since_donate', 'time_lag',
                                             'avg_gift',
                                             'interaction_wealth_i...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=27,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-28 13:37:42,780:INFO:Creating final display dataframe.
2024-04-28 13:37:42,941:INFO:Setup _display_container:                     Description             Value
0                    Session id                27
1                        Target   target_No Donor
2                   Target type            Binary
3           Original data shape        (3000, 47)
4        Transformed data shape        (3002, 47)
5   Transformed train set shape        (2102, 47)
6    Transformed test set shape         (900, 47)
7              Numeric features                46
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                Fix imbalance              True
13         Fix imbalance method             SMOTE
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              f106
2024-04-28 13:37:43,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:43,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:43,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:43,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:37:43,093:INFO:setup() successfully completed in 0.84s...............
2024-04-28 13:37:43,093:INFO:Initializing compare_models()
2024-04-28 13:37:43,094:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:37:43,094:INFO:Checking exceptions
2024-04-28 13:37:43,097:INFO:Preparing display monitor
2024-04-28 13:37:43,121:INFO:Initializing Logistic Regression
2024-04-28 13:37:43,121:INFO:Total runtime is 0.0 minutes
2024-04-28 13:37:43,123:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:43,124:INFO:Initializing create_model()
2024-04-28 13:37:43,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:43,124:INFO:Checking exceptions
2024-04-28 13:37:43,124:INFO:Importing libraries
2024-04-28 13:37:43,124:INFO:Copying training dataset
2024-04-28 13:37:43,129:INFO:Defining folds
2024-04-28 13:37:43,130:INFO:Declaring metric variables
2024-04-28 13:37:43,132:INFO:Importing untrained model
2024-04-28 13:37:43,134:INFO:Logistic Regression Imported successfully
2024-04-28 13:37:43,139:INFO:Starting cross validation
2024-04-28 13:37:43,140:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:37:50,393:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,487:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,497:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,497:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,498:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,501:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,506:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,509:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,511:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,512:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:37:50,545:INFO:Calculating mean and std
2024-04-28 13:37:50,547:INFO:Creating metrics dataframe
2024-04-28 13:37:50,552:INFO:Uploading results into container
2024-04-28 13:37:50,552:INFO:Uploading model into container now
2024-04-28 13:37:50,553:INFO:_master_model_container: 1
2024-04-28 13:37:50,553:INFO:_display_container: 2
2024-04-28 13:37:50,554:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:37:50,554:INFO:create_model() successfully completed......................................
2024-04-28 13:37:50,923:INFO:SubProcess create_model() end ==================================
2024-04-28 13:37:50,923:INFO:Creating metrics dataframe
2024-04-28 13:37:50,929:INFO:Initializing K Neighbors Classifier
2024-04-28 13:37:50,929:INFO:Total runtime is 0.13011826674143473 minutes
2024-04-28 13:37:50,932:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:50,932:INFO:Initializing create_model()
2024-04-28 13:37:50,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:50,932:INFO:Checking exceptions
2024-04-28 13:37:50,933:INFO:Importing libraries
2024-04-28 13:37:50,933:INFO:Copying training dataset
2024-04-28 13:37:50,938:INFO:Defining folds
2024-04-28 13:37:50,938:INFO:Declaring metric variables
2024-04-28 13:37:50,940:INFO:Importing untrained model
2024-04-28 13:37:50,943:INFO:K Neighbors Classifier Imported successfully
2024-04-28 13:37:50,947:INFO:Starting cross validation
2024-04-28 13:37:50,948:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:37:55,100:INFO:Calculating mean and std
2024-04-28 13:37:55,101:INFO:Creating metrics dataframe
2024-04-28 13:37:55,104:INFO:Uploading results into container
2024-04-28 13:37:55,104:INFO:Uploading model into container now
2024-04-28 13:37:55,104:INFO:_master_model_container: 2
2024-04-28 13:37:55,104:INFO:_display_container: 2
2024-04-28 13:37:55,105:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-28 13:37:55,105:INFO:create_model() successfully completed......................................
2024-04-28 13:37:55,402:INFO:SubProcess create_model() end ==================================
2024-04-28 13:37:55,402:INFO:Creating metrics dataframe
2024-04-28 13:37:55,409:INFO:Initializing Naive Bayes
2024-04-28 13:37:55,409:INFO:Total runtime is 0.20478634039560953 minutes
2024-04-28 13:37:55,411:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:55,412:INFO:Initializing create_model()
2024-04-28 13:37:55,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:55,412:INFO:Checking exceptions
2024-04-28 13:37:55,412:INFO:Importing libraries
2024-04-28 13:37:55,412:INFO:Copying training dataset
2024-04-28 13:37:55,416:INFO:Defining folds
2024-04-28 13:37:55,417:INFO:Declaring metric variables
2024-04-28 13:37:55,419:INFO:Importing untrained model
2024-04-28 13:37:55,421:INFO:Naive Bayes Imported successfully
2024-04-28 13:37:55,425:INFO:Starting cross validation
2024-04-28 13:37:55,426:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:37:55,531:INFO:Calculating mean and std
2024-04-28 13:37:55,532:INFO:Creating metrics dataframe
2024-04-28 13:37:55,535:INFO:Uploading results into container
2024-04-28 13:37:55,535:INFO:Uploading model into container now
2024-04-28 13:37:55,536:INFO:_master_model_container: 3
2024-04-28 13:37:55,536:INFO:_display_container: 2
2024-04-28 13:37:55,536:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-28 13:37:55,536:INFO:create_model() successfully completed......................................
2024-04-28 13:37:55,819:INFO:SubProcess create_model() end ==================================
2024-04-28 13:37:55,819:INFO:Creating metrics dataframe
2024-04-28 13:37:55,826:INFO:Initializing Decision Tree Classifier
2024-04-28 13:37:55,827:INFO:Total runtime is 0.2117578109105428 minutes
2024-04-28 13:37:55,829:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:55,829:INFO:Initializing create_model()
2024-04-28 13:37:55,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:55,829:INFO:Checking exceptions
2024-04-28 13:37:55,829:INFO:Importing libraries
2024-04-28 13:37:55,830:INFO:Copying training dataset
2024-04-28 13:37:55,835:INFO:Defining folds
2024-04-28 13:37:55,836:INFO:Declaring metric variables
2024-04-28 13:37:55,839:INFO:Importing untrained model
2024-04-28 13:37:55,841:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:37:55,846:INFO:Starting cross validation
2024-04-28 13:37:55,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:37:55,991:INFO:Calculating mean and std
2024-04-28 13:37:55,992:INFO:Creating metrics dataframe
2024-04-28 13:37:55,994:INFO:Uploading results into container
2024-04-28 13:37:55,995:INFO:Uploading model into container now
2024-04-28 13:37:55,995:INFO:_master_model_container: 4
2024-04-28 13:37:55,995:INFO:_display_container: 2
2024-04-28 13:37:55,995:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-28 13:37:55,996:INFO:create_model() successfully completed......................................
2024-04-28 13:37:56,282:INFO:SubProcess create_model() end ==================================
2024-04-28 13:37:56,282:INFO:Creating metrics dataframe
2024-04-28 13:37:56,289:INFO:Initializing SVM - Linear Kernel
2024-04-28 13:37:56,289:INFO:Total runtime is 0.2194648265838623 minutes
2024-04-28 13:37:56,292:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:56,292:INFO:Initializing create_model()
2024-04-28 13:37:56,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:56,292:INFO:Checking exceptions
2024-04-28 13:37:56,292:INFO:Importing libraries
2024-04-28 13:37:56,292:INFO:Copying training dataset
2024-04-28 13:37:56,297:INFO:Defining folds
2024-04-28 13:37:56,297:INFO:Declaring metric variables
2024-04-28 13:37:56,299:INFO:Importing untrained model
2024-04-28 13:37:56,302:INFO:SVM - Linear Kernel Imported successfully
2024-04-28 13:37:56,306:INFO:Starting cross validation
2024-04-28 13:37:56,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:37:56,431:INFO:Calculating mean and std
2024-04-28 13:37:56,432:INFO:Creating metrics dataframe
2024-04-28 13:37:56,435:INFO:Uploading results into container
2024-04-28 13:37:56,435:INFO:Uploading model into container now
2024-04-28 13:37:56,436:INFO:_master_model_container: 5
2024-04-28 13:37:56,436:INFO:_display_container: 2
2024-04-28 13:37:56,436:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-28 13:37:56,436:INFO:create_model() successfully completed......................................
2024-04-28 13:37:56,717:INFO:SubProcess create_model() end ==================================
2024-04-28 13:37:56,717:INFO:Creating metrics dataframe
2024-04-28 13:37:56,725:INFO:Initializing Ridge Classifier
2024-04-28 13:37:56,725:INFO:Total runtime is 0.22673064072926838 minutes
2024-04-28 13:37:56,727:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:56,727:INFO:Initializing create_model()
2024-04-28 13:37:56,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:56,728:INFO:Checking exceptions
2024-04-28 13:37:56,728:INFO:Importing libraries
2024-04-28 13:37:56,728:INFO:Copying training dataset
2024-04-28 13:37:56,732:INFO:Defining folds
2024-04-28 13:37:56,733:INFO:Declaring metric variables
2024-04-28 13:37:56,735:INFO:Importing untrained model
2024-04-28 13:37:56,737:INFO:Ridge Classifier Imported successfully
2024-04-28 13:37:56,742:INFO:Starting cross validation
2024-04-28 13:37:56,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:37:56,857:INFO:Calculating mean and std
2024-04-28 13:37:56,859:INFO:Creating metrics dataframe
2024-04-28 13:37:56,861:INFO:Uploading results into container
2024-04-28 13:37:56,861:INFO:Uploading model into container now
2024-04-28 13:37:56,862:INFO:_master_model_container: 6
2024-04-28 13:37:56,862:INFO:_display_container: 2
2024-04-28 13:37:56,862:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 13:37:56,862:INFO:create_model() successfully completed......................................
2024-04-28 13:37:57,152:INFO:SubProcess create_model() end ==================================
2024-04-28 13:37:57,152:INFO:Creating metrics dataframe
2024-04-28 13:37:57,159:INFO:Initializing Random Forest Classifier
2024-04-28 13:37:57,159:INFO:Total runtime is 0.23395386139551796 minutes
2024-04-28 13:37:57,162:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:57,162:INFO:Initializing create_model()
2024-04-28 13:37:57,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:57,162:INFO:Checking exceptions
2024-04-28 13:37:57,162:INFO:Importing libraries
2024-04-28 13:37:57,162:INFO:Copying training dataset
2024-04-28 13:37:57,167:INFO:Defining folds
2024-04-28 13:37:57,167:INFO:Declaring metric variables
2024-04-28 13:37:57,169:INFO:Importing untrained model
2024-04-28 13:37:57,171:INFO:Random Forest Classifier Imported successfully
2024-04-28 13:37:57,176:INFO:Starting cross validation
2024-04-28 13:37:57,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:37:57,875:INFO:Calculating mean and std
2024-04-28 13:37:57,876:INFO:Creating metrics dataframe
2024-04-28 13:37:57,878:INFO:Uploading results into container
2024-04-28 13:37:57,879:INFO:Uploading model into container now
2024-04-28 13:37:57,879:INFO:_master_model_container: 7
2024-04-28 13:37:57,879:INFO:_display_container: 2
2024-04-28 13:37:57,880:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-28 13:37:57,880:INFO:create_model() successfully completed......................................
2024-04-28 13:37:58,165:INFO:SubProcess create_model() end ==================================
2024-04-28 13:37:58,165:INFO:Creating metrics dataframe
2024-04-28 13:37:58,172:INFO:Initializing Quadratic Discriminant Analysis
2024-04-28 13:37:58,173:INFO:Total runtime is 0.25086382230122883 minutes
2024-04-28 13:37:58,175:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:58,175:INFO:Initializing create_model()
2024-04-28 13:37:58,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:58,176:INFO:Checking exceptions
2024-04-28 13:37:58,176:INFO:Importing libraries
2024-04-28 13:37:58,176:INFO:Copying training dataset
2024-04-28 13:37:58,181:INFO:Defining folds
2024-04-28 13:37:58,181:INFO:Declaring metric variables
2024-04-28 13:37:58,183:INFO:Importing untrained model
2024-04-28 13:37:58,186:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-28 13:37:58,190:INFO:Starting cross validation
2024-04-28 13:37:58,191:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:37:58,234:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,250:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:37:58,259:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,266:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,268:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,268:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,268:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,269:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,274:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:37:58,286:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:37:58,287:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:37:58,288:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:37:58,302:INFO:Calculating mean and std
2024-04-28 13:37:58,303:INFO:Creating metrics dataframe
2024-04-28 13:37:58,306:INFO:Uploading results into container
2024-04-28 13:37:58,306:INFO:Uploading model into container now
2024-04-28 13:37:58,306:INFO:_master_model_container: 8
2024-04-28 13:37:58,306:INFO:_display_container: 2
2024-04-28 13:37:58,307:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-28 13:37:58,307:INFO:create_model() successfully completed......................................
2024-04-28 13:37:58,599:INFO:SubProcess create_model() end ==================================
2024-04-28 13:37:58,599:INFO:Creating metrics dataframe
2024-04-28 13:37:58,607:INFO:Initializing Ada Boost Classifier
2024-04-28 13:37:58,607:INFO:Total runtime is 0.2580870469411214 minutes
2024-04-28 13:37:58,610:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:58,610:INFO:Initializing create_model()
2024-04-28 13:37:58,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:58,610:INFO:Checking exceptions
2024-04-28 13:37:58,610:INFO:Importing libraries
2024-04-28 13:37:58,610:INFO:Copying training dataset
2024-04-28 13:37:58,615:INFO:Defining folds
2024-04-28 13:37:58,615:INFO:Declaring metric variables
2024-04-28 13:37:58,618:INFO:Importing untrained model
2024-04-28 13:37:58,620:INFO:Ada Boost Classifier Imported successfully
2024-04-28 13:37:58,627:INFO:Starting cross validation
2024-04-28 13:37:58,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:37:58,670:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:37:58,691:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:37:58,693:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:37:58,697:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:37:58,698:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:37:58,702:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:37:58,703:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:37:58,706:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:37:58,708:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:37:58,996:INFO:Calculating mean and std
2024-04-28 13:37:58,997:INFO:Creating metrics dataframe
2024-04-28 13:37:59,000:INFO:Uploading results into container
2024-04-28 13:37:59,000:INFO:Uploading model into container now
2024-04-28 13:37:59,000:INFO:_master_model_container: 9
2024-04-28 13:37:59,000:INFO:_display_container: 2
2024-04-28 13:37:59,001:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 13:37:59,001:INFO:create_model() successfully completed......................................
2024-04-28 13:37:59,287:INFO:SubProcess create_model() end ==================================
2024-04-28 13:37:59,287:INFO:Creating metrics dataframe
2024-04-28 13:37:59,296:INFO:Initializing Gradient Boosting Classifier
2024-04-28 13:37:59,296:INFO:Total runtime is 0.26958085695902506 minutes
2024-04-28 13:37:59,298:INFO:SubProcess create_model() called ==================================
2024-04-28 13:37:59,298:INFO:Initializing create_model()
2024-04-28 13:37:59,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:37:59,299:INFO:Checking exceptions
2024-04-28 13:37:59,299:INFO:Importing libraries
2024-04-28 13:37:59,299:INFO:Copying training dataset
2024-04-28 13:37:59,303:INFO:Defining folds
2024-04-28 13:37:59,303:INFO:Declaring metric variables
2024-04-28 13:37:59,306:INFO:Importing untrained model
2024-04-28 13:37:59,308:INFO:Gradient Boosting Classifier Imported successfully
2024-04-28 13:37:59,312:INFO:Starting cross validation
2024-04-28 13:37:59,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:38:00,269:INFO:Calculating mean and std
2024-04-28 13:38:00,270:INFO:Creating metrics dataframe
2024-04-28 13:38:00,273:INFO:Uploading results into container
2024-04-28 13:38:00,273:INFO:Uploading model into container now
2024-04-28 13:38:00,273:INFO:_master_model_container: 10
2024-04-28 13:38:00,273:INFO:_display_container: 2
2024-04-28 13:38:00,274:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-28 13:38:00,274:INFO:create_model() successfully completed......................................
2024-04-28 13:38:00,562:INFO:SubProcess create_model() end ==================================
2024-04-28 13:38:00,562:INFO:Creating metrics dataframe
2024-04-28 13:38:00,570:INFO:Initializing Linear Discriminant Analysis
2024-04-28 13:38:00,570:INFO:Total runtime is 0.29081682364145917 minutes
2024-04-28 13:38:00,573:INFO:SubProcess create_model() called ==================================
2024-04-28 13:38:00,573:INFO:Initializing create_model()
2024-04-28 13:38:00,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:38:00,573:INFO:Checking exceptions
2024-04-28 13:38:00,573:INFO:Importing libraries
2024-04-28 13:38:00,573:INFO:Copying training dataset
2024-04-28 13:38:00,578:INFO:Defining folds
2024-04-28 13:38:00,578:INFO:Declaring metric variables
2024-04-28 13:38:00,580:INFO:Importing untrained model
2024-04-28 13:38:00,583:INFO:Linear Discriminant Analysis Imported successfully
2024-04-28 13:38:00,587:INFO:Starting cross validation
2024-04-28 13:38:00,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:38:00,702:INFO:Calculating mean and std
2024-04-28 13:38:00,703:INFO:Creating metrics dataframe
2024-04-28 13:38:00,706:INFO:Uploading results into container
2024-04-28 13:38:00,706:INFO:Uploading model into container now
2024-04-28 13:38:00,706:INFO:_master_model_container: 11
2024-04-28 13:38:00,706:INFO:_display_container: 2
2024-04-28 13:38:00,707:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-28 13:38:00,707:INFO:create_model() successfully completed......................................
2024-04-28 13:38:00,982:INFO:SubProcess create_model() end ==================================
2024-04-28 13:38:00,983:INFO:Creating metrics dataframe
2024-04-28 13:38:00,991:INFO:Initializing Extra Trees Classifier
2024-04-28 13:38:00,991:INFO:Total runtime is 0.297823170820872 minutes
2024-04-28 13:38:00,994:INFO:SubProcess create_model() called ==================================
2024-04-28 13:38:00,994:INFO:Initializing create_model()
2024-04-28 13:38:00,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:38:00,994:INFO:Checking exceptions
2024-04-28 13:38:00,994:INFO:Importing libraries
2024-04-28 13:38:00,994:INFO:Copying training dataset
2024-04-28 13:38:00,999:INFO:Defining folds
2024-04-28 13:38:01,000:INFO:Declaring metric variables
2024-04-28 13:38:01,002:INFO:Importing untrained model
2024-04-28 13:38:01,004:INFO:Extra Trees Classifier Imported successfully
2024-04-28 13:38:01,008:INFO:Starting cross validation
2024-04-28 13:38:01,009:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:38:01,610:INFO:Calculating mean and std
2024-04-28 13:38:01,611:INFO:Creating metrics dataframe
2024-04-28 13:38:01,614:INFO:Uploading results into container
2024-04-28 13:38:01,614:INFO:Uploading model into container now
2024-04-28 13:38:01,614:INFO:_master_model_container: 12
2024-04-28 13:38:01,614:INFO:_display_container: 2
2024-04-28 13:38:01,614:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-28 13:38:01,615:INFO:create_model() successfully completed......................................
2024-04-28 13:38:01,907:INFO:SubProcess create_model() end ==================================
2024-04-28 13:38:01,907:INFO:Creating metrics dataframe
2024-04-28 13:38:01,917:INFO:Initializing Light Gradient Boosting Machine
2024-04-28 13:38:01,917:INFO:Total runtime is 0.3132538636525472 minutes
2024-04-28 13:38:01,919:INFO:SubProcess create_model() called ==================================
2024-04-28 13:38:01,919:INFO:Initializing create_model()
2024-04-28 13:38:01,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:38:01,919:INFO:Checking exceptions
2024-04-28 13:38:01,920:INFO:Importing libraries
2024-04-28 13:38:01,920:INFO:Copying training dataset
2024-04-28 13:38:01,924:INFO:Defining folds
2024-04-28 13:38:01,925:INFO:Declaring metric variables
2024-04-28 13:38:01,927:INFO:Importing untrained model
2024-04-28 13:38:01,929:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-28 13:38:01,934:INFO:Starting cross validation
2024-04-28 13:38:01,935:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:38:02,741:INFO:Calculating mean and std
2024-04-28 13:38:02,743:INFO:Creating metrics dataframe
2024-04-28 13:38:02,746:INFO:Uploading results into container
2024-04-28 13:38:02,746:INFO:Uploading model into container now
2024-04-28 13:38:02,747:INFO:_master_model_container: 13
2024-04-28 13:38:02,747:INFO:_display_container: 2
2024-04-28 13:38:02,747:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-28 13:38:02,747:INFO:create_model() successfully completed......................................
2024-04-28 13:38:03,053:INFO:SubProcess create_model() end ==================================
2024-04-28 13:38:03,054:INFO:Creating metrics dataframe
2024-04-28 13:38:03,062:INFO:Initializing Dummy Classifier
2024-04-28 13:38:03,062:INFO:Total runtime is 0.3323378841082255 minutes
2024-04-28 13:38:03,065:INFO:SubProcess create_model() called ==================================
2024-04-28 13:38:03,065:INFO:Initializing create_model()
2024-04-28 13:38:03,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE16B11640>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:38:03,065:INFO:Checking exceptions
2024-04-28 13:38:03,066:INFO:Importing libraries
2024-04-28 13:38:03,066:INFO:Copying training dataset
2024-04-28 13:38:03,070:INFO:Defining folds
2024-04-28 13:38:03,071:INFO:Declaring metric variables
2024-04-28 13:38:03,073:INFO:Importing untrained model
2024-04-28 13:38:03,075:INFO:Dummy Classifier Imported successfully
2024-04-28 13:38:03,080:INFO:Starting cross validation
2024-04-28 13:38:03,081:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:38:03,128:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,157:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,158:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,159:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,159:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,163:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,168:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,169:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,170:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,171:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:38:03,185:INFO:Calculating mean and std
2024-04-28 13:38:03,186:INFO:Creating metrics dataframe
2024-04-28 13:38:03,189:INFO:Uploading results into container
2024-04-28 13:38:03,189:INFO:Uploading model into container now
2024-04-28 13:38:03,189:INFO:_master_model_container: 14
2024-04-28 13:38:03,189:INFO:_display_container: 2
2024-04-28 13:38:03,190:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-28 13:38:03,190:INFO:create_model() successfully completed......................................
2024-04-28 13:38:03,473:INFO:SubProcess create_model() end ==================================
2024-04-28 13:38:03,474:INFO:Creating metrics dataframe
2024-04-28 13:38:03,489:INFO:Initializing create_model()
2024-04-28 13:38:03,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:38:03,489:INFO:Checking exceptions
2024-04-28 13:38:03,491:INFO:Importing libraries
2024-04-28 13:38:03,491:INFO:Copying training dataset
2024-04-28 13:38:03,495:INFO:Defining folds
2024-04-28 13:38:03,495:INFO:Declaring metric variables
2024-04-28 13:38:03,495:INFO:Importing untrained model
2024-04-28 13:38:03,495:INFO:Declaring custom model
2024-04-28 13:38:03,495:INFO:Ridge Classifier Imported successfully
2024-04-28 13:38:03,496:INFO:Cross validation set to False
2024-04-28 13:38:03,496:INFO:Fitting Model
2024-04-28 13:38:03,546:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 13:38:03,546:INFO:create_model() successfully completed......................................
2024-04-28 13:38:03,883:INFO:_master_model_container: 14
2024-04-28 13:38:03,883:INFO:_display_container: 2
2024-04-28 13:38:03,883:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 13:38:03,883:INFO:compare_models() successfully completed......................................
2024-04-28 13:38:11,020:INFO:Initializing predict_model()
2024-04-28 13:38:11,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE1440C8B0>)
2024-04-28 13:38:11,020:INFO:Checking exceptions
2024-04-28 13:38:11,020:INFO:Preloading libraries
2024-04-28 13:38:11,022:INFO:Set up data.
2024-04-28 13:38:11,029:INFO:Set up index.
2024-04-28 13:39:17,721:INFO:Initializing predict_model()
2024-04-28 13:39:17,721:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE10B4E700>)
2024-04-28 13:39:17,721:INFO:Checking exceptions
2024-04-28 13:39:17,721:INFO:Preloading libraries
2024-04-28 13:39:17,723:INFO:Set up data.
2024-04-28 13:39:17,733:INFO:Set up index.
2024-04-28 13:39:29,617:INFO:Initializing predict_model()
2024-04-28 13:39:29,617:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE150E9790>)
2024-04-28 13:39:29,617:INFO:Checking exceptions
2024-04-28 13:39:29,617:INFO:Preloading libraries
2024-04-28 13:39:29,619:INFO:Set up data.
2024-04-28 13:39:29,625:INFO:Set up index.
2024-04-28 13:39:48,304:INFO:Initializing predict_model()
2024-04-28 13:39:48,304:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE1427D160>)
2024-04-28 13:39:48,304:INFO:Checking exceptions
2024-04-28 13:39:48,304:INFO:Preloading libraries
2024-04-28 13:39:48,306:INFO:Set up data.
2024-04-28 13:39:48,312:INFO:Set up index.
2024-04-28 13:40:03,953:INFO:Initializing predict_model()
2024-04-28 13:40:03,953:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE157B0B50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE11EA8160>)
2024-04-28 13:40:03,953:INFO:Checking exceptions
2024-04-28 13:40:03,953:INFO:Preloading libraries
2024-04-28 13:40:03,955:INFO:Set up data.
2024-04-28 13:40:03,961:INFO:Set up index.
2024-04-28 13:40:34,110:INFO:PyCaret ClassificationExperiment
2024-04-28 13:40:34,110:INFO:Logging name: clf-default-name
2024-04-28 13:40:34,110:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:40:34,110:INFO:version 3.3.1
2024-04-28 13:40:34,110:INFO:Initializing setup()
2024-04-28 13:40:34,110:INFO:self.USI: 95ea
2024-04-28 13:40:34,110:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 13:40:34,110:INFO:Checking environment
2024-04-28 13:40:34,110:INFO:python_version: 3.9.12
2024-04-28 13:40:34,110:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 13:40:34,110:INFO:machine: AMD64
2024-04-28 13:40:34,110:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 13:40:34,114:INFO:Memory: svmem(total=34282364928, available=22181920768, percent=35.3, used=12100444160, free=22181920768)
2024-04-28 13:40:34,114:INFO:Physical Core: 6
2024-04-28 13:40:34,114:INFO:Logical Core: 12
2024-04-28 13:40:34,114:INFO:Checking libraries
2024-04-28 13:40:34,114:INFO:System:
2024-04-28 13:40:34,114:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:40:34,114:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 13:40:34,114:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 13:40:34,114:INFO:PyCaret required dependencies:
2024-04-28 13:40:34,114:INFO:                 pip: 21.2.4
2024-04-28 13:40:34,114:INFO:          setuptools: 61.2.0
2024-04-28 13:40:34,115:INFO:             pycaret: 3.3.1
2024-04-28 13:40:34,115:INFO:             IPython: 8.2.0
2024-04-28 13:40:34,115:INFO:          ipywidgets: 7.6.5
2024-04-28 13:40:34,115:INFO:                tqdm: 4.64.0
2024-04-28 13:40:34,115:INFO:               numpy: 1.21.5
2024-04-28 13:40:34,115:INFO:              pandas: 1.4.2
2024-04-28 13:40:34,115:INFO:              jinja2: 2.11.3
2024-04-28 13:40:34,115:INFO:               scipy: 1.7.3
2024-04-28 13:40:34,115:INFO:              joblib: 1.3.2
2024-04-28 13:40:34,115:INFO:             sklearn: 1.4.0
2024-04-28 13:40:34,115:INFO:                pyod: 1.1.3
2024-04-28 13:40:34,115:INFO:            imblearn: 0.12.2
2024-04-28 13:40:34,115:INFO:   category_encoders: 2.6.3
2024-04-28 13:40:34,115:INFO:            lightgbm: 4.3.0
2024-04-28 13:40:34,115:INFO:               numba: 0.55.1
2024-04-28 13:40:34,115:INFO:            requests: 2.27.1
2024-04-28 13:40:34,115:INFO:          matplotlib: 3.5.1
2024-04-28 13:40:34,115:INFO:          scikitplot: 0.3.7
2024-04-28 13:40:34,115:INFO:         yellowbrick: 1.5
2024-04-28 13:40:34,115:INFO:              plotly: 5.6.0
2024-04-28 13:40:34,115:INFO:    plotly-resampler: Not installed
2024-04-28 13:40:34,115:INFO:             kaleido: 0.2.1
2024-04-28 13:40:34,115:INFO:           schemdraw: 0.15
2024-04-28 13:40:34,115:INFO:         statsmodels: 0.13.2
2024-04-28 13:40:34,115:INFO:              sktime: 0.26.0
2024-04-28 13:40:34,115:INFO:               tbats: 1.1.3
2024-04-28 13:40:34,115:INFO:            pmdarima: 2.0.4
2024-04-28 13:40:34,115:INFO:              psutil: 5.9.8
2024-04-28 13:40:34,115:INFO:          markupsafe: 2.0.1
2024-04-28 13:40:34,115:INFO:             pickle5: Not installed
2024-04-28 13:40:34,116:INFO:         cloudpickle: 2.0.0
2024-04-28 13:40:34,116:INFO:         deprecation: 2.1.0
2024-04-28 13:40:34,116:INFO:              xxhash: 3.4.1
2024-04-28 13:40:34,116:INFO:           wurlitzer: Not installed
2024-04-28 13:40:34,116:INFO:PyCaret optional dependencies:
2024-04-28 13:40:34,116:INFO:                shap: Not installed
2024-04-28 13:40:34,116:INFO:           interpret: Not installed
2024-04-28 13:40:34,116:INFO:                umap: Not installed
2024-04-28 13:40:34,116:INFO:     ydata_profiling: Not installed
2024-04-28 13:40:34,116:INFO:  explainerdashboard: Not installed
2024-04-28 13:40:34,116:INFO:             autoviz: Not installed
2024-04-28 13:40:34,116:INFO:           fairlearn: Not installed
2024-04-28 13:40:34,116:INFO:          deepchecks: Not installed
2024-04-28 13:40:34,116:INFO:             xgboost: Not installed
2024-04-28 13:40:34,116:INFO:            catboost: Not installed
2024-04-28 13:40:34,116:INFO:              kmodes: Not installed
2024-04-28 13:40:34,116:INFO:             mlxtend: 0.23.1
2024-04-28 13:40:34,116:INFO:       statsforecast: Not installed
2024-04-28 13:40:34,116:INFO:        tune_sklearn: Not installed
2024-04-28 13:40:34,116:INFO:                 ray: Not installed
2024-04-28 13:40:34,116:INFO:            hyperopt: Not installed
2024-04-28 13:40:34,116:INFO:              optuna: 3.6.1
2024-04-28 13:40:34,116:INFO:               skopt: Not installed
2024-04-28 13:40:34,116:INFO:              mlflow: Not installed
2024-04-28 13:40:34,116:INFO:              gradio: Not installed
2024-04-28 13:40:34,116:INFO:             fastapi: Not installed
2024-04-28 13:40:34,116:INFO:             uvicorn: Not installed
2024-04-28 13:40:34,116:INFO:              m2cgen: Not installed
2024-04-28 13:40:34,116:INFO:           evidently: Not installed
2024-04-28 13:40:34,117:INFO:               fugue: Not installed
2024-04-28 13:40:34,117:INFO:           streamlit: 1.31.1
2024-04-28 13:40:34,117:INFO:             prophet: Not installed
2024-04-28 13:40:34,117:INFO:None
2024-04-28 13:40:34,117:INFO:Set up data.
2024-04-28 13:40:34,124:INFO:Set up folding strategy.
2024-04-28 13:40:34,125:INFO:Set up train/test split.
2024-04-28 13:40:34,130:INFO:Set up index.
2024-04-28 13:40:34,130:INFO:Assigning column types.
2024-04-28 13:40:34,133:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:40:34,175:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:40:34,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:40:34,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,248:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:40:34,248:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:40:34,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,275:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:40:34,319:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:40:34,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,389:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:40:34,416:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,416:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:40:34,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,559:INFO:Preparing preprocessing pipeline...
2024-04-28 13:40:34,559:INFO:Set up simple imputation.
2024-04-28 13:40:34,559:INFO:Set up imbalanced handling.
2024-04-28 13:40:34,560:INFO:Set up column name cleaning.
2024-04-28 13:40:34,621:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:40:34,628:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['home_value', 'pct_lt15k',
                                             'num_prom', 'lifetime_gifts',
                                             'largest_gift', 'last_gift',
                                             'time_lag',
                                             'interaction_wealth_income',
                                             'income_to_home_ratio',
                                             'wealth_to_home_ratio',
                                             'gift_to_income_ratio',
                                             'zipconvert5_Ye...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=27,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-28 13:40:34,628:INFO:Creating final display dataframe.
2024-04-28 13:40:34,780:INFO:Setup _display_container:                     Description             Value
0                    Session id                27
1                        Target   target_No Donor
2                   Target type            Binary
3           Original data shape        (3000, 29)
4        Transformed data shape        (3002, 29)
5   Transformed train set shape        (2102, 29)
6    Transformed test set shape         (900, 29)
7              Numeric features                28
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                Fix imbalance              True
13         Fix imbalance method             SMOTE
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              95ea
2024-04-28 13:40:34,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:34,934:INFO:setup() successfully completed in 0.83s...............
2024-04-28 13:40:34,934:INFO:Initializing compare_models()
2024-04-28 13:40:34,934:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:40:34,934:INFO:Checking exceptions
2024-04-28 13:40:34,937:INFO:Preparing display monitor
2024-04-28 13:40:34,961:INFO:Initializing Logistic Regression
2024-04-28 13:40:34,962:INFO:Total runtime is 1.6681353251139323e-05 minutes
2024-04-28 13:40:34,964:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:34,964:INFO:Initializing create_model()
2024-04-28 13:40:34,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:34,965:INFO:Checking exceptions
2024-04-28 13:40:34,965:INFO:Importing libraries
2024-04-28 13:40:34,965:INFO:Copying training dataset
2024-04-28 13:40:34,969:INFO:Defining folds
2024-04-28 13:40:34,969:INFO:Declaring metric variables
2024-04-28 13:40:34,971:INFO:Importing untrained model
2024-04-28 13:40:34,973:INFO:Logistic Regression Imported successfully
2024-04-28 13:40:34,978:INFO:Starting cross validation
2024-04-28 13:40:34,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:35,255:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,275:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,280:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,282:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,287:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,287:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,294:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,296:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,296:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,299:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:35,319:INFO:Calculating mean and std
2024-04-28 13:40:35,319:INFO:Creating metrics dataframe
2024-04-28 13:40:35,322:INFO:Uploading results into container
2024-04-28 13:40:35,322:INFO:Uploading model into container now
2024-04-28 13:40:35,322:INFO:_master_model_container: 1
2024-04-28 13:40:35,322:INFO:_display_container: 2
2024-04-28 13:40:35,323:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:40:35,323:INFO:create_model() successfully completed......................................
2024-04-28 13:40:35,661:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:35,661:INFO:Creating metrics dataframe
2024-04-28 13:40:35,667:INFO:Initializing K Neighbors Classifier
2024-04-28 13:40:35,667:INFO:Total runtime is 0.011760707696278891 minutes
2024-04-28 13:40:35,670:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:35,670:INFO:Initializing create_model()
2024-04-28 13:40:35,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:35,670:INFO:Checking exceptions
2024-04-28 13:40:35,670:INFO:Importing libraries
2024-04-28 13:40:35,670:INFO:Copying training dataset
2024-04-28 13:40:35,674:INFO:Defining folds
2024-04-28 13:40:35,674:INFO:Declaring metric variables
2024-04-28 13:40:35,676:INFO:Importing untrained model
2024-04-28 13:40:35,679:INFO:K Neighbors Classifier Imported successfully
2024-04-28 13:40:35,683:INFO:Starting cross validation
2024-04-28 13:40:35,685:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:35,844:INFO:Calculating mean and std
2024-04-28 13:40:35,844:INFO:Creating metrics dataframe
2024-04-28 13:40:35,847:INFO:Uploading results into container
2024-04-28 13:40:35,847:INFO:Uploading model into container now
2024-04-28 13:40:35,847:INFO:_master_model_container: 2
2024-04-28 13:40:35,847:INFO:_display_container: 2
2024-04-28 13:40:35,848:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-28 13:40:35,848:INFO:create_model() successfully completed......................................
2024-04-28 13:40:36,137:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:36,137:INFO:Creating metrics dataframe
2024-04-28 13:40:36,144:INFO:Initializing Naive Bayes
2024-04-28 13:40:36,144:INFO:Total runtime is 0.01971795161565145 minutes
2024-04-28 13:40:36,146:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:36,147:INFO:Initializing create_model()
2024-04-28 13:40:36,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:36,147:INFO:Checking exceptions
2024-04-28 13:40:36,147:INFO:Importing libraries
2024-04-28 13:40:36,147:INFO:Copying training dataset
2024-04-28 13:40:36,151:INFO:Defining folds
2024-04-28 13:40:36,151:INFO:Declaring metric variables
2024-04-28 13:40:36,154:INFO:Importing untrained model
2024-04-28 13:40:36,156:INFO:Naive Bayes Imported successfully
2024-04-28 13:40:36,160:INFO:Starting cross validation
2024-04-28 13:40:36,161:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:36,258:INFO:Calculating mean and std
2024-04-28 13:40:36,259:INFO:Creating metrics dataframe
2024-04-28 13:40:36,262:INFO:Uploading results into container
2024-04-28 13:40:36,262:INFO:Uploading model into container now
2024-04-28 13:40:36,262:INFO:_master_model_container: 3
2024-04-28 13:40:36,262:INFO:_display_container: 2
2024-04-28 13:40:36,262:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-28 13:40:36,262:INFO:create_model() successfully completed......................................
2024-04-28 13:40:36,535:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:36,535:INFO:Creating metrics dataframe
2024-04-28 13:40:36,542:INFO:Initializing Decision Tree Classifier
2024-04-28 13:40:36,542:INFO:Total runtime is 0.02634061972300212 minutes
2024-04-28 13:40:36,544:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:36,545:INFO:Initializing create_model()
2024-04-28 13:40:36,545:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:36,545:INFO:Checking exceptions
2024-04-28 13:40:36,545:INFO:Importing libraries
2024-04-28 13:40:36,545:INFO:Copying training dataset
2024-04-28 13:40:36,550:INFO:Defining folds
2024-04-28 13:40:36,550:INFO:Declaring metric variables
2024-04-28 13:40:36,552:INFO:Importing untrained model
2024-04-28 13:40:36,554:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:40:36,559:INFO:Starting cross validation
2024-04-28 13:40:36,560:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:36,689:INFO:Calculating mean and std
2024-04-28 13:40:36,690:INFO:Creating metrics dataframe
2024-04-28 13:40:36,693:INFO:Uploading results into container
2024-04-28 13:40:36,693:INFO:Uploading model into container now
2024-04-28 13:40:36,693:INFO:_master_model_container: 4
2024-04-28 13:40:36,693:INFO:_display_container: 2
2024-04-28 13:40:36,694:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-28 13:40:36,694:INFO:create_model() successfully completed......................................
2024-04-28 13:40:36,980:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:36,980:INFO:Creating metrics dataframe
2024-04-28 13:40:36,987:INFO:Initializing SVM - Linear Kernel
2024-04-28 13:40:36,987:INFO:Total runtime is 0.0337640404701233 minutes
2024-04-28 13:40:36,989:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:36,989:INFO:Initializing create_model()
2024-04-28 13:40:36,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:36,990:INFO:Checking exceptions
2024-04-28 13:40:36,990:INFO:Importing libraries
2024-04-28 13:40:36,990:INFO:Copying training dataset
2024-04-28 13:40:36,994:INFO:Defining folds
2024-04-28 13:40:36,994:INFO:Declaring metric variables
2024-04-28 13:40:36,997:INFO:Importing untrained model
2024-04-28 13:40:37,000:INFO:SVM - Linear Kernel Imported successfully
2024-04-28 13:40:37,005:INFO:Starting cross validation
2024-04-28 13:40:37,006:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:37,118:INFO:Calculating mean and std
2024-04-28 13:40:37,119:INFO:Creating metrics dataframe
2024-04-28 13:40:37,122:INFO:Uploading results into container
2024-04-28 13:40:37,123:INFO:Uploading model into container now
2024-04-28 13:40:37,123:INFO:_master_model_container: 5
2024-04-28 13:40:37,123:INFO:_display_container: 2
2024-04-28 13:40:37,124:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-28 13:40:37,124:INFO:create_model() successfully completed......................................
2024-04-28 13:40:37,402:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:37,402:INFO:Creating metrics dataframe
2024-04-28 13:40:37,410:INFO:Initializing Ridge Classifier
2024-04-28 13:40:37,410:INFO:Total runtime is 0.04082045157750448 minutes
2024-04-28 13:40:37,412:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:37,412:INFO:Initializing create_model()
2024-04-28 13:40:37,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:37,413:INFO:Checking exceptions
2024-04-28 13:40:37,413:INFO:Importing libraries
2024-04-28 13:40:37,413:INFO:Copying training dataset
2024-04-28 13:40:37,418:INFO:Defining folds
2024-04-28 13:40:37,418:INFO:Declaring metric variables
2024-04-28 13:40:37,420:INFO:Importing untrained model
2024-04-28 13:40:37,423:INFO:Ridge Classifier Imported successfully
2024-04-28 13:40:37,427:INFO:Starting cross validation
2024-04-28 13:40:37,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:37,527:INFO:Calculating mean and std
2024-04-28 13:40:37,528:INFO:Creating metrics dataframe
2024-04-28 13:40:37,531:INFO:Uploading results into container
2024-04-28 13:40:37,531:INFO:Uploading model into container now
2024-04-28 13:40:37,531:INFO:_master_model_container: 6
2024-04-28 13:40:37,531:INFO:_display_container: 2
2024-04-28 13:40:37,532:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 13:40:37,532:INFO:create_model() successfully completed......................................
2024-04-28 13:40:37,822:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:37,823:INFO:Creating metrics dataframe
2024-04-28 13:40:37,830:INFO:Initializing Random Forest Classifier
2024-04-28 13:40:37,830:INFO:Total runtime is 0.04781013727188111 minutes
2024-04-28 13:40:37,833:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:37,833:INFO:Initializing create_model()
2024-04-28 13:40:37,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:37,833:INFO:Checking exceptions
2024-04-28 13:40:37,834:INFO:Importing libraries
2024-04-28 13:40:37,834:INFO:Copying training dataset
2024-04-28 13:40:37,839:INFO:Defining folds
2024-04-28 13:40:37,839:INFO:Declaring metric variables
2024-04-28 13:40:37,841:INFO:Importing untrained model
2024-04-28 13:40:37,843:INFO:Random Forest Classifier Imported successfully
2024-04-28 13:40:37,849:INFO:Starting cross validation
2024-04-28 13:40:37,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:38,462:INFO:Calculating mean and std
2024-04-28 13:40:38,463:INFO:Creating metrics dataframe
2024-04-28 13:40:38,466:INFO:Uploading results into container
2024-04-28 13:40:38,466:INFO:Uploading model into container now
2024-04-28 13:40:38,466:INFO:_master_model_container: 7
2024-04-28 13:40:38,466:INFO:_display_container: 2
2024-04-28 13:40:38,467:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-28 13:40:38,467:INFO:create_model() successfully completed......................................
2024-04-28 13:40:38,740:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:38,740:INFO:Creating metrics dataframe
2024-04-28 13:40:38,748:INFO:Initializing Quadratic Discriminant Analysis
2024-04-28 13:40:38,748:INFO:Total runtime is 0.06310737927754721 minutes
2024-04-28 13:40:38,751:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:38,751:INFO:Initializing create_model()
2024-04-28 13:40:38,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:38,751:INFO:Checking exceptions
2024-04-28 13:40:38,751:INFO:Importing libraries
2024-04-28 13:40:38,751:INFO:Copying training dataset
2024-04-28 13:40:38,755:INFO:Defining folds
2024-04-28 13:40:38,755:INFO:Declaring metric variables
2024-04-28 13:40:38,757:INFO:Importing untrained model
2024-04-28 13:40:38,760:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-28 13:40:38,765:INFO:Starting cross validation
2024-04-28 13:40:38,766:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:38,798:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,812:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:38,822:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,828:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,829:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,831:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,832:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,832:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,834:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,836:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,838:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:38,848:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:38,849:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:38,863:INFO:Calculating mean and std
2024-04-28 13:40:38,864:INFO:Creating metrics dataframe
2024-04-28 13:40:38,867:INFO:Uploading results into container
2024-04-28 13:40:38,867:INFO:Uploading model into container now
2024-04-28 13:40:38,868:INFO:_master_model_container: 8
2024-04-28 13:40:38,868:INFO:_display_container: 2
2024-04-28 13:40:38,868:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-28 13:40:38,868:INFO:create_model() successfully completed......................................
2024-04-28 13:40:39,159:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:39,159:INFO:Creating metrics dataframe
2024-04-28 13:40:39,168:INFO:Initializing Ada Boost Classifier
2024-04-28 13:40:39,168:INFO:Total runtime is 0.07011375029881796 minutes
2024-04-28 13:40:39,170:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:39,170:INFO:Initializing create_model()
2024-04-28 13:40:39,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:39,171:INFO:Checking exceptions
2024-04-28 13:40:39,171:INFO:Importing libraries
2024-04-28 13:40:39,171:INFO:Copying training dataset
2024-04-28 13:40:39,175:INFO:Defining folds
2024-04-28 13:40:39,175:INFO:Declaring metric variables
2024-04-28 13:40:39,178:INFO:Importing untrained model
2024-04-28 13:40:39,180:INFO:Ada Boost Classifier Imported successfully
2024-04-28 13:40:39,185:INFO:Starting cross validation
2024-04-28 13:40:39,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:39,219:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,246:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,246:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,247:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,249:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,251:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,251:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,253:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,254:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,254:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:39,485:INFO:Calculating mean and std
2024-04-28 13:40:39,486:INFO:Creating metrics dataframe
2024-04-28 13:40:39,489:INFO:Uploading results into container
2024-04-28 13:40:39,490:INFO:Uploading model into container now
2024-04-28 13:40:39,490:INFO:_master_model_container: 9
2024-04-28 13:40:39,490:INFO:_display_container: 2
2024-04-28 13:40:39,490:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 13:40:39,491:INFO:create_model() successfully completed......................................
2024-04-28 13:40:39,767:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:39,767:INFO:Creating metrics dataframe
2024-04-28 13:40:39,775:INFO:Initializing Gradient Boosting Classifier
2024-04-28 13:40:39,775:INFO:Total runtime is 0.0802229404449463 minutes
2024-04-28 13:40:39,777:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:39,778:INFO:Initializing create_model()
2024-04-28 13:40:39,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:39,778:INFO:Checking exceptions
2024-04-28 13:40:39,778:INFO:Importing libraries
2024-04-28 13:40:39,778:INFO:Copying training dataset
2024-04-28 13:40:39,782:INFO:Defining folds
2024-04-28 13:40:39,782:INFO:Declaring metric variables
2024-04-28 13:40:39,784:INFO:Importing untrained model
2024-04-28 13:40:39,787:INFO:Gradient Boosting Classifier Imported successfully
2024-04-28 13:40:39,792:INFO:Starting cross validation
2024-04-28 13:40:39,793:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:40,424:INFO:Calculating mean and std
2024-04-28 13:40:40,425:INFO:Creating metrics dataframe
2024-04-28 13:40:40,428:INFO:Uploading results into container
2024-04-28 13:40:40,428:INFO:Uploading model into container now
2024-04-28 13:40:40,428:INFO:_master_model_container: 10
2024-04-28 13:40:40,428:INFO:_display_container: 2
2024-04-28 13:40:40,429:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-28 13:40:40,429:INFO:create_model() successfully completed......................................
2024-04-28 13:40:40,717:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:40,717:INFO:Creating metrics dataframe
2024-04-28 13:40:40,725:INFO:Initializing Linear Discriminant Analysis
2024-04-28 13:40:40,725:INFO:Total runtime is 0.09607067902882895 minutes
2024-04-28 13:40:40,728:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:40,728:INFO:Initializing create_model()
2024-04-28 13:40:40,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:40,728:INFO:Checking exceptions
2024-04-28 13:40:40,728:INFO:Importing libraries
2024-04-28 13:40:40,728:INFO:Copying training dataset
2024-04-28 13:40:40,732:INFO:Defining folds
2024-04-28 13:40:40,732:INFO:Declaring metric variables
2024-04-28 13:40:40,734:INFO:Importing untrained model
2024-04-28 13:40:40,737:INFO:Linear Discriminant Analysis Imported successfully
2024-04-28 13:40:40,742:INFO:Starting cross validation
2024-04-28 13:40:40,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:40,838:INFO:Calculating mean and std
2024-04-28 13:40:40,839:INFO:Creating metrics dataframe
2024-04-28 13:40:40,842:INFO:Uploading results into container
2024-04-28 13:40:40,842:INFO:Uploading model into container now
2024-04-28 13:40:40,842:INFO:_master_model_container: 11
2024-04-28 13:40:40,842:INFO:_display_container: 2
2024-04-28 13:40:40,843:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-28 13:40:40,843:INFO:create_model() successfully completed......................................
2024-04-28 13:40:41,128:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:41,128:INFO:Creating metrics dataframe
2024-04-28 13:40:41,136:INFO:Initializing Extra Trees Classifier
2024-04-28 13:40:41,137:INFO:Total runtime is 0.10292692184448243 minutes
2024-04-28 13:40:41,139:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:41,139:INFO:Initializing create_model()
2024-04-28 13:40:41,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:41,139:INFO:Checking exceptions
2024-04-28 13:40:41,139:INFO:Importing libraries
2024-04-28 13:40:41,139:INFO:Copying training dataset
2024-04-28 13:40:41,143:INFO:Defining folds
2024-04-28 13:40:41,144:INFO:Declaring metric variables
2024-04-28 13:40:41,146:INFO:Importing untrained model
2024-04-28 13:40:41,148:INFO:Extra Trees Classifier Imported successfully
2024-04-28 13:40:41,153:INFO:Starting cross validation
2024-04-28 13:40:41,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:41,680:INFO:Calculating mean and std
2024-04-28 13:40:41,681:INFO:Creating metrics dataframe
2024-04-28 13:40:41,684:INFO:Uploading results into container
2024-04-28 13:40:41,685:INFO:Uploading model into container now
2024-04-28 13:40:41,685:INFO:_master_model_container: 12
2024-04-28 13:40:41,685:INFO:_display_container: 2
2024-04-28 13:40:41,685:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-28 13:40:41,685:INFO:create_model() successfully completed......................................
2024-04-28 13:40:41,974:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:41,974:INFO:Creating metrics dataframe
2024-04-28 13:40:41,983:INFO:Initializing Light Gradient Boosting Machine
2024-04-28 13:40:41,983:INFO:Total runtime is 0.11702307065327963 minutes
2024-04-28 13:40:41,985:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:41,986:INFO:Initializing create_model()
2024-04-28 13:40:41,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:41,986:INFO:Checking exceptions
2024-04-28 13:40:41,986:INFO:Importing libraries
2024-04-28 13:40:41,986:INFO:Copying training dataset
2024-04-28 13:40:41,990:INFO:Defining folds
2024-04-28 13:40:41,990:INFO:Declaring metric variables
2024-04-28 13:40:41,992:INFO:Importing untrained model
2024-04-28 13:40:41,995:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-28 13:40:41,999:INFO:Starting cross validation
2024-04-28 13:40:42,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:42,777:INFO:Calculating mean and std
2024-04-28 13:40:42,779:INFO:Creating metrics dataframe
2024-04-28 13:40:42,782:INFO:Uploading results into container
2024-04-28 13:40:42,782:INFO:Uploading model into container now
2024-04-28 13:40:42,783:INFO:_master_model_container: 13
2024-04-28 13:40:42,783:INFO:_display_container: 2
2024-04-28 13:40:42,783:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-28 13:40:42,783:INFO:create_model() successfully completed......................................
2024-04-28 13:40:43,091:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:43,091:INFO:Creating metrics dataframe
2024-04-28 13:40:43,100:INFO:Initializing Dummy Classifier
2024-04-28 13:40:43,101:INFO:Total runtime is 0.13565667867660525 minutes
2024-04-28 13:40:43,103:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:43,103:INFO:Initializing create_model()
2024-04-28 13:40:43,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE1539DEB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:43,103:INFO:Checking exceptions
2024-04-28 13:40:43,103:INFO:Importing libraries
2024-04-28 13:40:43,103:INFO:Copying training dataset
2024-04-28 13:40:43,107:INFO:Defining folds
2024-04-28 13:40:43,108:INFO:Declaring metric variables
2024-04-28 13:40:43,110:INFO:Importing untrained model
2024-04-28 13:40:43,112:INFO:Dummy Classifier Imported successfully
2024-04-28 13:40:43,116:INFO:Starting cross validation
2024-04-28 13:40:43,117:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:43,157:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:43,179:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:43,183:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:43,191:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:43,192:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:43,192:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:43,194:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:43,197:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:43,200:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:43,208:INFO:Calculating mean and std
2024-04-28 13:40:43,209:INFO:Creating metrics dataframe
2024-04-28 13:40:43,212:INFO:Uploading results into container
2024-04-28 13:40:43,213:INFO:Uploading model into container now
2024-04-28 13:40:43,213:INFO:_master_model_container: 14
2024-04-28 13:40:43,213:INFO:_display_container: 2
2024-04-28 13:40:43,213:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-28 13:40:43,213:INFO:create_model() successfully completed......................................
2024-04-28 13:40:43,497:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:43,497:INFO:Creating metrics dataframe
2024-04-28 13:40:43,513:INFO:Initializing create_model()
2024-04-28 13:40:43,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE143D5610>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:43,513:INFO:Checking exceptions
2024-04-28 13:40:43,515:INFO:Importing libraries
2024-04-28 13:40:43,515:INFO:Copying training dataset
2024-04-28 13:40:43,519:INFO:Defining folds
2024-04-28 13:40:43,519:INFO:Declaring metric variables
2024-04-28 13:40:43,519:INFO:Importing untrained model
2024-04-28 13:40:43,519:INFO:Declaring custom model
2024-04-28 13:40:43,519:INFO:Logistic Regression Imported successfully
2024-04-28 13:40:43,520:INFO:Cross validation set to False
2024-04-28 13:40:43,520:INFO:Fitting Model
2024-04-28 13:40:43,723:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:43,724:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:40:43,724:INFO:create_model() successfully completed......................................
2024-04-28 13:40:44,038:INFO:_master_model_container: 14
2024-04-28 13:40:44,038:INFO:_display_container: 2
2024-04-28 13:40:44,039:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:40:44,039:INFO:compare_models() successfully completed......................................
2024-04-28 13:40:46,934:INFO:PyCaret ClassificationExperiment
2024-04-28 13:40:46,934:INFO:Logging name: clf-default-name
2024-04-28 13:40:46,934:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:40:46,934:INFO:version 3.3.1
2024-04-28 13:40:46,934:INFO:Initializing setup()
2024-04-28 13:40:46,934:INFO:self.USI: d1f2
2024-04-28 13:40:46,934:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 13:40:46,935:INFO:Checking environment
2024-04-28 13:40:46,935:INFO:python_version: 3.9.12
2024-04-28 13:40:46,935:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 13:40:46,935:INFO:machine: AMD64
2024-04-28 13:40:46,935:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 13:40:46,938:INFO:Memory: svmem(total=34282364928, available=22045941760, percent=35.7, used=12236423168, free=22045941760)
2024-04-28 13:40:46,939:INFO:Physical Core: 6
2024-04-28 13:40:46,939:INFO:Logical Core: 12
2024-04-28 13:40:46,939:INFO:Checking libraries
2024-04-28 13:40:46,939:INFO:System:
2024-04-28 13:40:46,939:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:40:46,939:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 13:40:46,939:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 13:40:46,939:INFO:PyCaret required dependencies:
2024-04-28 13:40:46,939:INFO:                 pip: 21.2.4
2024-04-28 13:40:46,939:INFO:          setuptools: 61.2.0
2024-04-28 13:40:46,939:INFO:             pycaret: 3.3.1
2024-04-28 13:40:46,939:INFO:             IPython: 8.2.0
2024-04-28 13:40:46,939:INFO:          ipywidgets: 7.6.5
2024-04-28 13:40:46,939:INFO:                tqdm: 4.64.0
2024-04-28 13:40:46,939:INFO:               numpy: 1.21.5
2024-04-28 13:40:46,939:INFO:              pandas: 1.4.2
2024-04-28 13:40:46,939:INFO:              jinja2: 2.11.3
2024-04-28 13:40:46,939:INFO:               scipy: 1.7.3
2024-04-28 13:40:46,939:INFO:              joblib: 1.3.2
2024-04-28 13:40:46,939:INFO:             sklearn: 1.4.0
2024-04-28 13:40:46,939:INFO:                pyod: 1.1.3
2024-04-28 13:40:46,939:INFO:            imblearn: 0.12.2
2024-04-28 13:40:46,939:INFO:   category_encoders: 2.6.3
2024-04-28 13:40:46,939:INFO:            lightgbm: 4.3.0
2024-04-28 13:40:46,940:INFO:               numba: 0.55.1
2024-04-28 13:40:46,940:INFO:            requests: 2.27.1
2024-04-28 13:40:46,940:INFO:          matplotlib: 3.5.1
2024-04-28 13:40:46,940:INFO:          scikitplot: 0.3.7
2024-04-28 13:40:46,940:INFO:         yellowbrick: 1.5
2024-04-28 13:40:46,940:INFO:              plotly: 5.6.0
2024-04-28 13:40:46,940:INFO:    plotly-resampler: Not installed
2024-04-28 13:40:46,940:INFO:             kaleido: 0.2.1
2024-04-28 13:40:46,940:INFO:           schemdraw: 0.15
2024-04-28 13:40:46,940:INFO:         statsmodels: 0.13.2
2024-04-28 13:40:46,940:INFO:              sktime: 0.26.0
2024-04-28 13:40:46,940:INFO:               tbats: 1.1.3
2024-04-28 13:40:46,940:INFO:            pmdarima: 2.0.4
2024-04-28 13:40:46,940:INFO:              psutil: 5.9.8
2024-04-28 13:40:46,940:INFO:          markupsafe: 2.0.1
2024-04-28 13:40:46,940:INFO:             pickle5: Not installed
2024-04-28 13:40:46,940:INFO:         cloudpickle: 2.0.0
2024-04-28 13:40:46,940:INFO:         deprecation: 2.1.0
2024-04-28 13:40:46,940:INFO:              xxhash: 3.4.1
2024-04-28 13:40:46,940:INFO:           wurlitzer: Not installed
2024-04-28 13:40:46,940:INFO:PyCaret optional dependencies:
2024-04-28 13:40:46,940:INFO:                shap: Not installed
2024-04-28 13:40:46,940:INFO:           interpret: Not installed
2024-04-28 13:40:46,940:INFO:                umap: Not installed
2024-04-28 13:40:46,940:INFO:     ydata_profiling: Not installed
2024-04-28 13:40:46,940:INFO:  explainerdashboard: Not installed
2024-04-28 13:40:46,941:INFO:             autoviz: Not installed
2024-04-28 13:40:46,941:INFO:           fairlearn: Not installed
2024-04-28 13:40:46,941:INFO:          deepchecks: Not installed
2024-04-28 13:40:46,941:INFO:             xgboost: Not installed
2024-04-28 13:40:46,941:INFO:            catboost: Not installed
2024-04-28 13:40:46,941:INFO:              kmodes: Not installed
2024-04-28 13:40:46,941:INFO:             mlxtend: 0.23.1
2024-04-28 13:40:46,941:INFO:       statsforecast: Not installed
2024-04-28 13:40:46,941:INFO:        tune_sklearn: Not installed
2024-04-28 13:40:46,941:INFO:                 ray: Not installed
2024-04-28 13:40:46,941:INFO:            hyperopt: Not installed
2024-04-28 13:40:46,941:INFO:              optuna: 3.6.1
2024-04-28 13:40:46,941:INFO:               skopt: Not installed
2024-04-28 13:40:46,941:INFO:              mlflow: Not installed
2024-04-28 13:40:46,941:INFO:              gradio: Not installed
2024-04-28 13:40:46,941:INFO:             fastapi: Not installed
2024-04-28 13:40:46,941:INFO:             uvicorn: Not installed
2024-04-28 13:40:46,941:INFO:              m2cgen: Not installed
2024-04-28 13:40:46,941:INFO:           evidently: Not installed
2024-04-28 13:40:46,941:INFO:               fugue: Not installed
2024-04-28 13:40:46,941:INFO:           streamlit: 1.31.1
2024-04-28 13:40:46,941:INFO:             prophet: Not installed
2024-04-28 13:40:46,941:INFO:None
2024-04-28 13:40:46,941:INFO:Set up data.
2024-04-28 13:40:46,949:INFO:Set up folding strategy.
2024-04-28 13:40:46,949:INFO:Set up train/test split.
2024-04-28 13:40:46,953:INFO:Set up index.
2024-04-28 13:40:46,953:INFO:Assigning column types.
2024-04-28 13:40:46,956:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:40:46,999:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:40:47,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:40:47,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:40:47,072:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:40:47,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,100:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:40:47,143:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:40:47,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,170:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,214:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:40:47,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,242:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:40:47,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,384:INFO:Preparing preprocessing pipeline...
2024-04-28 13:40:47,385:INFO:Set up simple imputation.
2024-04-28 13:40:47,385:INFO:Set up imbalanced handling.
2024-04-28 13:40:47,386:INFO:Set up column name cleaning.
2024-04-28 13:40:47,445:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:40:47,450:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['home_value', 'pct_lt15k',
                                             'num_prom', 'lifetime_gifts',
                                             'largest_gift', 'last_gift',
                                             'time_lag',
                                             'interaction_wealth_income',
                                             'income_to_home_ratio',
                                             'wealth_to_home_ratio',
                                             'gift_to_income_ratio',
                                             'zipconvert5_Ye...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=27,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-28 13:40:47,451:INFO:Creating final display dataframe.
2024-04-28 13:40:47,604:INFO:Setup _display_container:                     Description             Value
0                    Session id                27
1                        Target   target_No Donor
2                   Target type            Binary
3           Original data shape        (3000, 29)
4        Transformed data shape        (3002, 29)
5   Transformed train set shape        (2102, 29)
6    Transformed test set shape         (900, 29)
7              Numeric features                28
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                Fix imbalance              True
13         Fix imbalance method             SMOTE
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              d1f2
2024-04-28 13:40:47,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,756:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:40:47,757:INFO:setup() successfully completed in 0.83s...............
2024-04-28 13:40:47,759:INFO:Initializing compare_models()
2024-04-28 13:40:47,759:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:40:47,759:INFO:Checking exceptions
2024-04-28 13:40:47,762:INFO:Preparing display monitor
2024-04-28 13:40:47,785:INFO:Initializing Logistic Regression
2024-04-28 13:40:47,786:INFO:Total runtime is 1.6681353251139323e-05 minutes
2024-04-28 13:40:47,788:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:47,788:INFO:Initializing create_model()
2024-04-28 13:40:47,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:47,789:INFO:Checking exceptions
2024-04-28 13:40:47,789:INFO:Importing libraries
2024-04-28 13:40:47,789:INFO:Copying training dataset
2024-04-28 13:40:47,793:INFO:Defining folds
2024-04-28 13:40:47,793:INFO:Declaring metric variables
2024-04-28 13:40:47,796:INFO:Importing untrained model
2024-04-28 13:40:47,798:INFO:Logistic Regression Imported successfully
2024-04-28 13:40:47,803:INFO:Starting cross validation
2024-04-28 13:40:47,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:48,079:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,097:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,100:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,104:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,109:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,113:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,119:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:48,143:INFO:Calculating mean and std
2024-04-28 13:40:48,143:INFO:Creating metrics dataframe
2024-04-28 13:40:48,146:INFO:Uploading results into container
2024-04-28 13:40:48,146:INFO:Uploading model into container now
2024-04-28 13:40:48,146:INFO:_master_model_container: 1
2024-04-28 13:40:48,146:INFO:_display_container: 2
2024-04-28 13:40:48,147:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:40:48,147:INFO:create_model() successfully completed......................................
2024-04-28 13:40:48,437:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:48,437:INFO:Creating metrics dataframe
2024-04-28 13:40:48,443:INFO:Initializing K Neighbors Classifier
2024-04-28 13:40:48,443:INFO:Total runtime is 0.010976660251617431 minutes
2024-04-28 13:40:48,446:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:48,446:INFO:Initializing create_model()
2024-04-28 13:40:48,446:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:48,446:INFO:Checking exceptions
2024-04-28 13:40:48,446:INFO:Importing libraries
2024-04-28 13:40:48,446:INFO:Copying training dataset
2024-04-28 13:40:48,450:INFO:Defining folds
2024-04-28 13:40:48,450:INFO:Declaring metric variables
2024-04-28 13:40:48,453:INFO:Importing untrained model
2024-04-28 13:40:48,455:INFO:K Neighbors Classifier Imported successfully
2024-04-28 13:40:48,460:INFO:Starting cross validation
2024-04-28 13:40:48,462:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:48,617:INFO:Calculating mean and std
2024-04-28 13:40:48,617:INFO:Creating metrics dataframe
2024-04-28 13:40:48,620:INFO:Uploading results into container
2024-04-28 13:40:48,620:INFO:Uploading model into container now
2024-04-28 13:40:48,620:INFO:_master_model_container: 2
2024-04-28 13:40:48,620:INFO:_display_container: 2
2024-04-28 13:40:48,621:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-28 13:40:48,621:INFO:create_model() successfully completed......................................
2024-04-28 13:40:48,899:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:48,899:INFO:Creating metrics dataframe
2024-04-28 13:40:48,906:INFO:Initializing Naive Bayes
2024-04-28 13:40:48,906:INFO:Total runtime is 0.018691039085388182 minutes
2024-04-28 13:40:48,909:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:48,909:INFO:Initializing create_model()
2024-04-28 13:40:48,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:48,909:INFO:Checking exceptions
2024-04-28 13:40:48,909:INFO:Importing libraries
2024-04-28 13:40:48,909:INFO:Copying training dataset
2024-04-28 13:40:48,914:INFO:Defining folds
2024-04-28 13:40:48,914:INFO:Declaring metric variables
2024-04-28 13:40:48,917:INFO:Importing untrained model
2024-04-28 13:40:48,919:INFO:Naive Bayes Imported successfully
2024-04-28 13:40:48,925:INFO:Starting cross validation
2024-04-28 13:40:48,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:49,033:INFO:Calculating mean and std
2024-04-28 13:40:49,034:INFO:Creating metrics dataframe
2024-04-28 13:40:49,037:INFO:Uploading results into container
2024-04-28 13:40:49,037:INFO:Uploading model into container now
2024-04-28 13:40:49,038:INFO:_master_model_container: 3
2024-04-28 13:40:49,038:INFO:_display_container: 2
2024-04-28 13:40:49,038:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-28 13:40:49,038:INFO:create_model() successfully completed......................................
2024-04-28 13:40:49,331:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:49,331:INFO:Creating metrics dataframe
2024-04-28 13:40:49,338:INFO:Initializing Decision Tree Classifier
2024-04-28 13:40:49,338:INFO:Total runtime is 0.025880920886993408 minutes
2024-04-28 13:40:49,341:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:49,341:INFO:Initializing create_model()
2024-04-28 13:40:49,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:49,341:INFO:Checking exceptions
2024-04-28 13:40:49,341:INFO:Importing libraries
2024-04-28 13:40:49,341:INFO:Copying training dataset
2024-04-28 13:40:49,346:INFO:Defining folds
2024-04-28 13:40:49,347:INFO:Declaring metric variables
2024-04-28 13:40:49,349:INFO:Importing untrained model
2024-04-28 13:40:49,352:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:40:49,357:INFO:Starting cross validation
2024-04-28 13:40:49,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:49,480:INFO:Calculating mean and std
2024-04-28 13:40:49,481:INFO:Creating metrics dataframe
2024-04-28 13:40:49,484:INFO:Uploading results into container
2024-04-28 13:40:49,485:INFO:Uploading model into container now
2024-04-28 13:40:49,485:INFO:_master_model_container: 4
2024-04-28 13:40:49,485:INFO:_display_container: 2
2024-04-28 13:40:49,485:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-28 13:40:49,485:INFO:create_model() successfully completed......................................
2024-04-28 13:40:49,760:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:49,760:INFO:Creating metrics dataframe
2024-04-28 13:40:49,767:INFO:Initializing SVM - Linear Kernel
2024-04-28 13:40:49,767:INFO:Total runtime is 0.033037424087524414 minutes
2024-04-28 13:40:49,769:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:49,770:INFO:Initializing create_model()
2024-04-28 13:40:49,770:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:49,770:INFO:Checking exceptions
2024-04-28 13:40:49,770:INFO:Importing libraries
2024-04-28 13:40:49,770:INFO:Copying training dataset
2024-04-28 13:40:49,774:INFO:Defining folds
2024-04-28 13:40:49,774:INFO:Declaring metric variables
2024-04-28 13:40:49,776:INFO:Importing untrained model
2024-04-28 13:40:49,779:INFO:SVM - Linear Kernel Imported successfully
2024-04-28 13:40:49,783:INFO:Starting cross validation
2024-04-28 13:40:49,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:49,894:INFO:Calculating mean and std
2024-04-28 13:40:49,895:INFO:Creating metrics dataframe
2024-04-28 13:40:49,898:INFO:Uploading results into container
2024-04-28 13:40:49,898:INFO:Uploading model into container now
2024-04-28 13:40:49,899:INFO:_master_model_container: 5
2024-04-28 13:40:49,899:INFO:_display_container: 2
2024-04-28 13:40:49,899:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-28 13:40:49,899:INFO:create_model() successfully completed......................................
2024-04-28 13:40:50,185:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:50,185:INFO:Creating metrics dataframe
2024-04-28 13:40:50,193:INFO:Initializing Ridge Classifier
2024-04-28 13:40:50,193:INFO:Total runtime is 0.04014387528101603 minutes
2024-04-28 13:40:50,195:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:50,195:INFO:Initializing create_model()
2024-04-28 13:40:50,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:50,196:INFO:Checking exceptions
2024-04-28 13:40:50,196:INFO:Importing libraries
2024-04-28 13:40:50,196:INFO:Copying training dataset
2024-04-28 13:40:50,200:INFO:Defining folds
2024-04-28 13:40:50,200:INFO:Declaring metric variables
2024-04-28 13:40:50,202:INFO:Importing untrained model
2024-04-28 13:40:50,204:INFO:Ridge Classifier Imported successfully
2024-04-28 13:40:50,208:INFO:Starting cross validation
2024-04-28 13:40:50,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:50,305:INFO:Calculating mean and std
2024-04-28 13:40:50,306:INFO:Creating metrics dataframe
2024-04-28 13:40:50,309:INFO:Uploading results into container
2024-04-28 13:40:50,309:INFO:Uploading model into container now
2024-04-28 13:40:50,309:INFO:_master_model_container: 6
2024-04-28 13:40:50,309:INFO:_display_container: 2
2024-04-28 13:40:50,310:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 13:40:50,310:INFO:create_model() successfully completed......................................
2024-04-28 13:40:50,603:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:50,603:INFO:Creating metrics dataframe
2024-04-28 13:40:50,610:INFO:Initializing Random Forest Classifier
2024-04-28 13:40:50,610:INFO:Total runtime is 0.04708352088928223 minutes
2024-04-28 13:40:50,612:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:50,613:INFO:Initializing create_model()
2024-04-28 13:40:50,613:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:50,613:INFO:Checking exceptions
2024-04-28 13:40:50,613:INFO:Importing libraries
2024-04-28 13:40:50,613:INFO:Copying training dataset
2024-04-28 13:40:50,617:INFO:Defining folds
2024-04-28 13:40:50,618:INFO:Declaring metric variables
2024-04-28 13:40:50,620:INFO:Importing untrained model
2024-04-28 13:40:50,622:INFO:Random Forest Classifier Imported successfully
2024-04-28 13:40:50,628:INFO:Starting cross validation
2024-04-28 13:40:50,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:51,261:INFO:Calculating mean and std
2024-04-28 13:40:51,262:INFO:Creating metrics dataframe
2024-04-28 13:40:51,265:INFO:Uploading results into container
2024-04-28 13:40:51,265:INFO:Uploading model into container now
2024-04-28 13:40:51,265:INFO:_master_model_container: 7
2024-04-28 13:40:51,265:INFO:_display_container: 2
2024-04-28 13:40:51,266:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-28 13:40:51,266:INFO:create_model() successfully completed......................................
2024-04-28 13:40:51,554:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:51,554:INFO:Creating metrics dataframe
2024-04-28 13:40:51,562:INFO:Initializing Quadratic Discriminant Analysis
2024-04-28 13:40:51,562:INFO:Total runtime is 0.06294793685277303 minutes
2024-04-28 13:40:51,565:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:51,565:INFO:Initializing create_model()
2024-04-28 13:40:51,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:51,565:INFO:Checking exceptions
2024-04-28 13:40:51,565:INFO:Importing libraries
2024-04-28 13:40:51,565:INFO:Copying training dataset
2024-04-28 13:40:51,570:INFO:Defining folds
2024-04-28 13:40:51,570:INFO:Declaring metric variables
2024-04-28 13:40:51,572:INFO:Importing untrained model
2024-04-28 13:40:51,574:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-28 13:40:51,579:INFO:Starting cross validation
2024-04-28 13:40:51,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:51,612:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,625:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:51,639:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,644:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,647:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,649:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,651:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,653:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,655:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:40:51,663:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:51,670:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:51,676:INFO:Calculating mean and std
2024-04-28 13:40:51,677:INFO:Creating metrics dataframe
2024-04-28 13:40:51,680:INFO:Uploading results into container
2024-04-28 13:40:51,680:INFO:Uploading model into container now
2024-04-28 13:40:51,681:INFO:_master_model_container: 8
2024-04-28 13:40:51,681:INFO:_display_container: 2
2024-04-28 13:40:51,681:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-28 13:40:51,681:INFO:create_model() successfully completed......................................
2024-04-28 13:40:51,961:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:51,961:INFO:Creating metrics dataframe
2024-04-28 13:40:51,969:INFO:Initializing Ada Boost Classifier
2024-04-28 13:40:51,970:INFO:Total runtime is 0.06975412368774414 minutes
2024-04-28 13:40:51,972:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:51,972:INFO:Initializing create_model()
2024-04-28 13:40:51,972:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:51,972:INFO:Checking exceptions
2024-04-28 13:40:51,972:INFO:Importing libraries
2024-04-28 13:40:51,972:INFO:Copying training dataset
2024-04-28 13:40:51,976:INFO:Defining folds
2024-04-28 13:40:51,976:INFO:Declaring metric variables
2024-04-28 13:40:51,979:INFO:Importing untrained model
2024-04-28 13:40:51,981:INFO:Ada Boost Classifier Imported successfully
2024-04-28 13:40:51,986:INFO:Starting cross validation
2024-04-28 13:40:51,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:52,019:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,037:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,043:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,043:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,046:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,048:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,050:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,051:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,052:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,054:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:40:52,276:INFO:Calculating mean and std
2024-04-28 13:40:52,277:INFO:Creating metrics dataframe
2024-04-28 13:40:52,280:INFO:Uploading results into container
2024-04-28 13:40:52,280:INFO:Uploading model into container now
2024-04-28 13:40:52,280:INFO:_master_model_container: 9
2024-04-28 13:40:52,280:INFO:_display_container: 2
2024-04-28 13:40:52,281:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 13:40:52,281:INFO:create_model() successfully completed......................................
2024-04-28 13:40:52,571:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:52,571:INFO:Creating metrics dataframe
2024-04-28 13:40:52,579:INFO:Initializing Gradient Boosting Classifier
2024-04-28 13:40:52,579:INFO:Total runtime is 0.07989668051401774 minutes
2024-04-28 13:40:52,582:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:52,582:INFO:Initializing create_model()
2024-04-28 13:40:52,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:52,582:INFO:Checking exceptions
2024-04-28 13:40:52,582:INFO:Importing libraries
2024-04-28 13:40:52,582:INFO:Copying training dataset
2024-04-28 13:40:52,586:INFO:Defining folds
2024-04-28 13:40:52,586:INFO:Declaring metric variables
2024-04-28 13:40:52,589:INFO:Importing untrained model
2024-04-28 13:40:52,592:INFO:Gradient Boosting Classifier Imported successfully
2024-04-28 13:40:52,596:INFO:Starting cross validation
2024-04-28 13:40:52,597:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:53,231:INFO:Calculating mean and std
2024-04-28 13:40:53,232:INFO:Creating metrics dataframe
2024-04-28 13:40:53,235:INFO:Uploading results into container
2024-04-28 13:40:53,235:INFO:Uploading model into container now
2024-04-28 13:40:53,236:INFO:_master_model_container: 10
2024-04-28 13:40:53,236:INFO:_display_container: 2
2024-04-28 13:40:53,236:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-28 13:40:53,236:INFO:create_model() successfully completed......................................
2024-04-28 13:40:53,530:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:53,530:INFO:Creating metrics dataframe
2024-04-28 13:40:53,538:INFO:Initializing Linear Discriminant Analysis
2024-04-28 13:40:53,538:INFO:Total runtime is 0.09588790734608968 minutes
2024-04-28 13:40:53,540:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:53,540:INFO:Initializing create_model()
2024-04-28 13:40:53,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:53,541:INFO:Checking exceptions
2024-04-28 13:40:53,541:INFO:Importing libraries
2024-04-28 13:40:53,541:INFO:Copying training dataset
2024-04-28 13:40:53,545:INFO:Defining folds
2024-04-28 13:40:53,545:INFO:Declaring metric variables
2024-04-28 13:40:53,547:INFO:Importing untrained model
2024-04-28 13:40:53,550:INFO:Linear Discriminant Analysis Imported successfully
2024-04-28 13:40:53,555:INFO:Starting cross validation
2024-04-28 13:40:53,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:53,663:INFO:Calculating mean and std
2024-04-28 13:40:53,664:INFO:Creating metrics dataframe
2024-04-28 13:40:53,667:INFO:Uploading results into container
2024-04-28 13:40:53,668:INFO:Uploading model into container now
2024-04-28 13:40:53,668:INFO:_master_model_container: 11
2024-04-28 13:40:53,668:INFO:_display_container: 2
2024-04-28 13:40:53,668:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-28 13:40:53,668:INFO:create_model() successfully completed......................................
2024-04-28 13:40:53,954:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:53,954:INFO:Creating metrics dataframe
2024-04-28 13:40:53,963:INFO:Initializing Extra Trees Classifier
2024-04-28 13:40:53,963:INFO:Total runtime is 0.10297767718633016 minutes
2024-04-28 13:40:53,965:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:53,966:INFO:Initializing create_model()
2024-04-28 13:40:53,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:53,966:INFO:Checking exceptions
2024-04-28 13:40:53,966:INFO:Importing libraries
2024-04-28 13:40:53,966:INFO:Copying training dataset
2024-04-28 13:40:53,970:INFO:Defining folds
2024-04-28 13:40:53,970:INFO:Declaring metric variables
2024-04-28 13:40:53,973:INFO:Importing untrained model
2024-04-28 13:40:53,975:INFO:Extra Trees Classifier Imported successfully
2024-04-28 13:40:53,979:INFO:Starting cross validation
2024-04-28 13:40:53,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:54,490:INFO:Calculating mean and std
2024-04-28 13:40:54,491:INFO:Creating metrics dataframe
2024-04-28 13:40:54,494:INFO:Uploading results into container
2024-04-28 13:40:54,494:INFO:Uploading model into container now
2024-04-28 13:40:54,494:INFO:_master_model_container: 12
2024-04-28 13:40:54,494:INFO:_display_container: 2
2024-04-28 13:40:54,495:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-28 13:40:54,495:INFO:create_model() successfully completed......................................
2024-04-28 13:40:54,782:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:54,782:INFO:Creating metrics dataframe
2024-04-28 13:40:54,792:INFO:Initializing Light Gradient Boosting Machine
2024-04-28 13:40:54,792:INFO:Total runtime is 0.11679023504257202 minutes
2024-04-28 13:40:54,794:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:54,795:INFO:Initializing create_model()
2024-04-28 13:40:54,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:54,795:INFO:Checking exceptions
2024-04-28 13:40:54,795:INFO:Importing libraries
2024-04-28 13:40:54,795:INFO:Copying training dataset
2024-04-28 13:40:54,801:INFO:Defining folds
2024-04-28 13:40:54,801:INFO:Declaring metric variables
2024-04-28 13:40:54,803:INFO:Importing untrained model
2024-04-28 13:40:54,806:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-28 13:40:54,812:INFO:Starting cross validation
2024-04-28 13:40:54,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:55,545:INFO:Calculating mean and std
2024-04-28 13:40:55,547:INFO:Creating metrics dataframe
2024-04-28 13:40:55,550:INFO:Uploading results into container
2024-04-28 13:40:55,550:INFO:Uploading model into container now
2024-04-28 13:40:55,551:INFO:_master_model_container: 13
2024-04-28 13:40:55,551:INFO:_display_container: 2
2024-04-28 13:40:55,551:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-28 13:40:55,551:INFO:create_model() successfully completed......................................
2024-04-28 13:40:55,858:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:55,858:INFO:Creating metrics dataframe
2024-04-28 13:40:55,867:INFO:Initializing Dummy Classifier
2024-04-28 13:40:55,868:INFO:Total runtime is 0.13472320238749186 minutes
2024-04-28 13:40:55,870:INFO:SubProcess create_model() called ==================================
2024-04-28 13:40:55,870:INFO:Initializing create_model()
2024-04-28 13:40:55,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE12102F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:55,871:INFO:Checking exceptions
2024-04-28 13:40:55,871:INFO:Importing libraries
2024-04-28 13:40:55,871:INFO:Copying training dataset
2024-04-28 13:40:55,875:INFO:Defining folds
2024-04-28 13:40:55,875:INFO:Declaring metric variables
2024-04-28 13:40:55,877:INFO:Importing untrained model
2024-04-28 13:40:55,879:INFO:Dummy Classifier Imported successfully
2024-04-28 13:40:55,884:INFO:Starting cross validation
2024-04-28 13:40:55,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:40:55,933:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,956:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,958:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,966:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,967:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,967:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,968:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,969:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,970:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,971:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:40:55,989:INFO:Calculating mean and std
2024-04-28 13:40:55,990:INFO:Creating metrics dataframe
2024-04-28 13:40:55,993:INFO:Uploading results into container
2024-04-28 13:40:55,993:INFO:Uploading model into container now
2024-04-28 13:40:55,993:INFO:_master_model_container: 14
2024-04-28 13:40:55,993:INFO:_display_container: 2
2024-04-28 13:40:55,994:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-28 13:40:55,994:INFO:create_model() successfully completed......................................
2024-04-28 13:40:56,276:INFO:SubProcess create_model() end ==================================
2024-04-28 13:40:56,276:INFO:Creating metrics dataframe
2024-04-28 13:40:56,292:INFO:Initializing create_model()
2024-04-28 13:40:56,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:40:56,292:INFO:Checking exceptions
2024-04-28 13:40:56,293:INFO:Importing libraries
2024-04-28 13:40:56,293:INFO:Copying training dataset
2024-04-28 13:40:56,297:INFO:Defining folds
2024-04-28 13:40:56,297:INFO:Declaring metric variables
2024-04-28 13:40:56,297:INFO:Importing untrained model
2024-04-28 13:40:56,297:INFO:Declaring custom model
2024-04-28 13:40:56,297:INFO:Logistic Regression Imported successfully
2024-04-28 13:40:56,298:INFO:Cross validation set to False
2024-04-28 13:40:56,298:INFO:Fitting Model
2024-04-28 13:40:56,498:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:40:56,498:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:40:56,498:INFO:create_model() successfully completed......................................
2024-04-28 13:40:56,806:INFO:_master_model_container: 14
2024-04-28 13:40:56,806:INFO:_display_container: 2
2024-04-28 13:40:56,807:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:40:56,807:INFO:compare_models() successfully completed......................................
2024-04-28 13:40:56,822:INFO:Initializing predict_model()
2024-04-28 13:40:56,822:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE168F0F70>)
2024-04-28 13:40:56,822:INFO:Checking exceptions
2024-04-28 13:40:56,822:INFO:Preloading libraries
2024-04-28 13:40:56,823:INFO:Set up data.
2024-04-28 13:40:56,829:INFO:Set up index.
2024-04-28 13:41:01,737:INFO:Initializing predict_model()
2024-04-28 13:41:01,737:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE12AABFD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE12815E50>)
2024-04-28 13:41:01,737:INFO:Checking exceptions
2024-04-28 13:41:01,737:INFO:Preloading libraries
2024-04-28 13:41:01,739:INFO:Set up data.
2024-04-28 13:41:01,746:INFO:Set up index.
2024-04-28 13:41:30,320:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\3370468113.py:51: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.fillna(df.mean(), inplace=True)

2024-04-28 13:41:41,631:INFO:PyCaret ClassificationExperiment
2024-04-28 13:41:41,631:INFO:Logging name: clf-default-name
2024-04-28 13:41:41,631:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-28 13:41:41,631:INFO:version 3.3.1
2024-04-28 13:41:41,631:INFO:Initializing setup()
2024-04-28 13:41:41,631:INFO:self.USI: 53aa
2024-04-28 13:41:41,631:INFO:self._variable_keys: {'log_plots_param', 'n_jobs_param', 'seed', 'y_train', 'X_train', 'idx', 'USI', 'data', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'fold_groups_param', 'memory', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'X', 'logging_param', '_available_plots', 'exp_name_log', 'y', 'fix_imbalance', 'X_test', 'pipeline', 'target_param', 'gpu_param'}
2024-04-28 13:41:41,631:INFO:Checking environment
2024-04-28 13:41:41,631:INFO:python_version: 3.9.12
2024-04-28 13:41:41,631:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-28 13:41:41,631:INFO:machine: AMD64
2024-04-28 13:41:41,631:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-28 13:41:41,634:INFO:Memory: svmem(total=34282364928, available=22014431232, percent=35.8, used=12267933696, free=22014431232)
2024-04-28 13:41:41,634:INFO:Physical Core: 6
2024-04-28 13:41:41,634:INFO:Logical Core: 12
2024-04-28 13:41:41,634:INFO:Checking libraries
2024-04-28 13:41:41,634:INFO:System:
2024-04-28 13:41:41,635:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-28 13:41:41,635:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-28 13:41:41,635:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-28 13:41:41,635:INFO:PyCaret required dependencies:
2024-04-28 13:41:41,635:INFO:                 pip: 21.2.4
2024-04-28 13:41:41,635:INFO:          setuptools: 61.2.0
2024-04-28 13:41:41,635:INFO:             pycaret: 3.3.1
2024-04-28 13:41:41,635:INFO:             IPython: 8.2.0
2024-04-28 13:41:41,635:INFO:          ipywidgets: 7.6.5
2024-04-28 13:41:41,635:INFO:                tqdm: 4.64.0
2024-04-28 13:41:41,635:INFO:               numpy: 1.21.5
2024-04-28 13:41:41,635:INFO:              pandas: 1.4.2
2024-04-28 13:41:41,635:INFO:              jinja2: 2.11.3
2024-04-28 13:41:41,635:INFO:               scipy: 1.7.3
2024-04-28 13:41:41,635:INFO:              joblib: 1.3.2
2024-04-28 13:41:41,635:INFO:             sklearn: 1.4.0
2024-04-28 13:41:41,635:INFO:                pyod: 1.1.3
2024-04-28 13:41:41,635:INFO:            imblearn: 0.12.2
2024-04-28 13:41:41,635:INFO:   category_encoders: 2.6.3
2024-04-28 13:41:41,635:INFO:            lightgbm: 4.3.0
2024-04-28 13:41:41,635:INFO:               numba: 0.55.1
2024-04-28 13:41:41,635:INFO:            requests: 2.27.1
2024-04-28 13:41:41,635:INFO:          matplotlib: 3.5.1
2024-04-28 13:41:41,635:INFO:          scikitplot: 0.3.7
2024-04-28 13:41:41,635:INFO:         yellowbrick: 1.5
2024-04-28 13:41:41,635:INFO:              plotly: 5.6.0
2024-04-28 13:41:41,635:INFO:    plotly-resampler: Not installed
2024-04-28 13:41:41,635:INFO:             kaleido: 0.2.1
2024-04-28 13:41:41,635:INFO:           schemdraw: 0.15
2024-04-28 13:41:41,636:INFO:         statsmodels: 0.13.2
2024-04-28 13:41:41,636:INFO:              sktime: 0.26.0
2024-04-28 13:41:41,636:INFO:               tbats: 1.1.3
2024-04-28 13:41:41,636:INFO:            pmdarima: 2.0.4
2024-04-28 13:41:41,636:INFO:              psutil: 5.9.8
2024-04-28 13:41:41,636:INFO:          markupsafe: 2.0.1
2024-04-28 13:41:41,636:INFO:             pickle5: Not installed
2024-04-28 13:41:41,636:INFO:         cloudpickle: 2.0.0
2024-04-28 13:41:41,636:INFO:         deprecation: 2.1.0
2024-04-28 13:41:41,636:INFO:              xxhash: 3.4.1
2024-04-28 13:41:41,636:INFO:           wurlitzer: Not installed
2024-04-28 13:41:41,636:INFO:PyCaret optional dependencies:
2024-04-28 13:41:41,636:INFO:                shap: Not installed
2024-04-28 13:41:41,636:INFO:           interpret: Not installed
2024-04-28 13:41:41,636:INFO:                umap: Not installed
2024-04-28 13:41:41,636:INFO:     ydata_profiling: Not installed
2024-04-28 13:41:41,636:INFO:  explainerdashboard: Not installed
2024-04-28 13:41:41,636:INFO:             autoviz: Not installed
2024-04-28 13:41:41,636:INFO:           fairlearn: Not installed
2024-04-28 13:41:41,636:INFO:          deepchecks: Not installed
2024-04-28 13:41:41,636:INFO:             xgboost: Not installed
2024-04-28 13:41:41,636:INFO:            catboost: Not installed
2024-04-28 13:41:41,636:INFO:              kmodes: Not installed
2024-04-28 13:41:41,636:INFO:             mlxtend: 0.23.1
2024-04-28 13:41:41,636:INFO:       statsforecast: Not installed
2024-04-28 13:41:41,636:INFO:        tune_sklearn: Not installed
2024-04-28 13:41:41,636:INFO:                 ray: Not installed
2024-04-28 13:41:41,636:INFO:            hyperopt: Not installed
2024-04-28 13:41:41,637:INFO:              optuna: 3.6.1
2024-04-28 13:41:41,637:INFO:               skopt: Not installed
2024-04-28 13:41:41,637:INFO:              mlflow: Not installed
2024-04-28 13:41:41,637:INFO:              gradio: Not installed
2024-04-28 13:41:41,637:INFO:             fastapi: Not installed
2024-04-28 13:41:41,637:INFO:             uvicorn: Not installed
2024-04-28 13:41:41,637:INFO:              m2cgen: Not installed
2024-04-28 13:41:41,637:INFO:           evidently: Not installed
2024-04-28 13:41:41,637:INFO:               fugue: Not installed
2024-04-28 13:41:41,637:INFO:           streamlit: 1.31.1
2024-04-28 13:41:41,637:INFO:             prophet: Not installed
2024-04-28 13:41:41,637:INFO:None
2024-04-28 13:41:41,637:INFO:Set up data.
2024-04-28 13:41:41,645:INFO:Set up folding strategy.
2024-04-28 13:41:41,645:INFO:Set up train/test split.
2024-04-28 13:41:41,649:INFO:Set up index.
2024-04-28 13:41:41,649:INFO:Assigning column types.
2024-04-28 13:41:41,651:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-28 13:41:41,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:41:41,696:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:41:41,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:41,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:41,765:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-28 13:41:41,766:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:41:41,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:41,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:41,793:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-28 13:41:41,836:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:41:41,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:41,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:41,907:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-28 13:41:41,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:41,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:41,933:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-28 13:41:42,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:42,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:42,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:42,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:42,076:INFO:Preparing preprocessing pipeline...
2024-04-28 13:41:42,077:INFO:Set up simple imputation.
2024-04-28 13:41:42,077:INFO:Set up imbalanced handling.
2024-04-28 13:41:42,077:INFO:Set up column name cleaning.
2024-04-28 13:41:42,135:INFO:Finished creating preprocessing pipeline.
2024-04-28 13:41:42,141:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['home_value', 'pct_lt15k',
                                             'num_prom', 'lifetime_gifts',
                                             'largest_gift', 'last_gift',
                                             'time_lag',
                                             'interaction_wealth_income',
                                             'income_to_home_ratio',
                                             'wealth_to_home_ratio',
                                             'gift_to_income_ratio',
                                             'zipconvert5_Ye...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=27,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-28 13:41:42,141:INFO:Creating final display dataframe.
2024-04-28 13:41:42,298:INFO:Setup _display_container:                     Description             Value
0                    Session id                27
1                        Target   target_No Donor
2                   Target type            Binary
3           Original data shape        (3000, 29)
4        Transformed data shape        (3002, 29)
5   Transformed train set shape        (2102, 29)
6    Transformed test set shape         (900, 29)
7              Numeric features                28
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                Fix imbalance              True
13         Fix imbalance method             SMOTE
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              53aa
2024-04-28 13:41:42,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:42,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:42,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:42,457:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-28 13:41:42,458:INFO:setup() successfully completed in 0.83s...............
2024-04-28 13:41:42,458:INFO:Initializing compare_models()
2024-04-28 13:41:42,458:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-28 13:41:42,458:INFO:Checking exceptions
2024-04-28 13:41:42,461:INFO:Preparing display monitor
2024-04-28 13:41:42,485:INFO:Initializing Logistic Regression
2024-04-28 13:41:42,485:INFO:Total runtime is 0.0 minutes
2024-04-28 13:41:42,487:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:42,487:INFO:Initializing create_model()
2024-04-28 13:41:42,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:42,487:INFO:Checking exceptions
2024-04-28 13:41:42,488:INFO:Importing libraries
2024-04-28 13:41:42,488:INFO:Copying training dataset
2024-04-28 13:41:42,491:INFO:Defining folds
2024-04-28 13:41:42,491:INFO:Declaring metric variables
2024-04-28 13:41:42,493:INFO:Importing untrained model
2024-04-28 13:41:42,495:INFO:Logistic Regression Imported successfully
2024-04-28 13:41:42,499:INFO:Starting cross validation
2024-04-28 13:41:42,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:42,733:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,763:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,790:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,795:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,798:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,802:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,802:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,803:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,805:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,808:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:42,832:INFO:Calculating mean and std
2024-04-28 13:41:42,832:INFO:Creating metrics dataframe
2024-04-28 13:41:42,835:INFO:Uploading results into container
2024-04-28 13:41:42,835:INFO:Uploading model into container now
2024-04-28 13:41:42,836:INFO:_master_model_container: 1
2024-04-28 13:41:42,836:INFO:_display_container: 2
2024-04-28 13:41:42,836:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:41:42,836:INFO:create_model() successfully completed......................................
2024-04-28 13:41:43,129:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:43,129:INFO:Creating metrics dataframe
2024-04-28 13:41:43,135:INFO:Initializing K Neighbors Classifier
2024-04-28 13:41:43,135:INFO:Total runtime is 0.010826508204142252 minutes
2024-04-28 13:41:43,137:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:43,137:INFO:Initializing create_model()
2024-04-28 13:41:43,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:43,138:INFO:Checking exceptions
2024-04-28 13:41:43,138:INFO:Importing libraries
2024-04-28 13:41:43,138:INFO:Copying training dataset
2024-04-28 13:41:43,141:INFO:Defining folds
2024-04-28 13:41:43,142:INFO:Declaring metric variables
2024-04-28 13:41:43,144:INFO:Importing untrained model
2024-04-28 13:41:43,146:INFO:K Neighbors Classifier Imported successfully
2024-04-28 13:41:43,150:INFO:Starting cross validation
2024-04-28 13:41:43,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:43,312:INFO:Calculating mean and std
2024-04-28 13:41:43,312:INFO:Creating metrics dataframe
2024-04-28 13:41:43,315:INFO:Uploading results into container
2024-04-28 13:41:43,315:INFO:Uploading model into container now
2024-04-28 13:41:43,315:INFO:_master_model_container: 2
2024-04-28 13:41:43,315:INFO:_display_container: 2
2024-04-28 13:41:43,316:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-28 13:41:43,316:INFO:create_model() successfully completed......................................
2024-04-28 13:41:43,602:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:43,603:INFO:Creating metrics dataframe
2024-04-28 13:41:43,610:INFO:Initializing Naive Bayes
2024-04-28 13:41:43,610:INFO:Total runtime is 0.018750401337941487 minutes
2024-04-28 13:41:43,613:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:43,614:INFO:Initializing create_model()
2024-04-28 13:41:43,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:43,614:INFO:Checking exceptions
2024-04-28 13:41:43,614:INFO:Importing libraries
2024-04-28 13:41:43,614:INFO:Copying training dataset
2024-04-28 13:41:43,622:INFO:Defining folds
2024-04-28 13:41:43,622:INFO:Declaring metric variables
2024-04-28 13:41:43,625:INFO:Importing untrained model
2024-04-28 13:41:43,629:INFO:Naive Bayes Imported successfully
2024-04-28 13:41:43,634:INFO:Starting cross validation
2024-04-28 13:41:43,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:43,739:INFO:Calculating mean and std
2024-04-28 13:41:43,740:INFO:Creating metrics dataframe
2024-04-28 13:41:43,743:INFO:Uploading results into container
2024-04-28 13:41:43,743:INFO:Uploading model into container now
2024-04-28 13:41:43,743:INFO:_master_model_container: 3
2024-04-28 13:41:43,743:INFO:_display_container: 2
2024-04-28 13:41:43,743:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-28 13:41:43,744:INFO:create_model() successfully completed......................................
2024-04-28 13:41:44,055:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:44,055:INFO:Creating metrics dataframe
2024-04-28 13:41:44,062:INFO:Initializing Decision Tree Classifier
2024-04-28 13:41:44,062:INFO:Total runtime is 0.026273898283640542 minutes
2024-04-28 13:41:44,065:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:44,065:INFO:Initializing create_model()
2024-04-28 13:41:44,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:44,065:INFO:Checking exceptions
2024-04-28 13:41:44,065:INFO:Importing libraries
2024-04-28 13:41:44,066:INFO:Copying training dataset
2024-04-28 13:41:44,070:INFO:Defining folds
2024-04-28 13:41:44,070:INFO:Declaring metric variables
2024-04-28 13:41:44,073:INFO:Importing untrained model
2024-04-28 13:41:44,075:INFO:Decision Tree Classifier Imported successfully
2024-04-28 13:41:44,079:INFO:Starting cross validation
2024-04-28 13:41:44,080:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:44,199:INFO:Calculating mean and std
2024-04-28 13:41:44,200:INFO:Creating metrics dataframe
2024-04-28 13:41:44,203:INFO:Uploading results into container
2024-04-28 13:41:44,203:INFO:Uploading model into container now
2024-04-28 13:41:44,204:INFO:_master_model_container: 4
2024-04-28 13:41:44,204:INFO:_display_container: 2
2024-04-28 13:41:44,204:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-28 13:41:44,204:INFO:create_model() successfully completed......................................
2024-04-28 13:41:44,508:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:44,508:INFO:Creating metrics dataframe
2024-04-28 13:41:44,515:INFO:Initializing SVM - Linear Kernel
2024-04-28 13:41:44,515:INFO:Total runtime is 0.03383076588312785 minutes
2024-04-28 13:41:44,517:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:44,518:INFO:Initializing create_model()
2024-04-28 13:41:44,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:44,518:INFO:Checking exceptions
2024-04-28 13:41:44,518:INFO:Importing libraries
2024-04-28 13:41:44,518:INFO:Copying training dataset
2024-04-28 13:41:44,523:INFO:Defining folds
2024-04-28 13:41:44,523:INFO:Declaring metric variables
2024-04-28 13:41:44,525:INFO:Importing untrained model
2024-04-28 13:41:44,527:INFO:SVM - Linear Kernel Imported successfully
2024-04-28 13:41:44,532:INFO:Starting cross validation
2024-04-28 13:41:44,533:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:44,637:INFO:Calculating mean and std
2024-04-28 13:41:44,638:INFO:Creating metrics dataframe
2024-04-28 13:41:44,641:INFO:Uploading results into container
2024-04-28 13:41:44,641:INFO:Uploading model into container now
2024-04-28 13:41:44,641:INFO:_master_model_container: 5
2024-04-28 13:41:44,641:INFO:_display_container: 2
2024-04-28 13:41:44,642:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-28 13:41:44,642:INFO:create_model() successfully completed......................................
2024-04-28 13:41:44,930:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:44,930:INFO:Creating metrics dataframe
2024-04-28 13:41:44,938:INFO:Initializing Ridge Classifier
2024-04-28 13:41:44,938:INFO:Total runtime is 0.04087052742640177 minutes
2024-04-28 13:41:44,940:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:44,940:INFO:Initializing create_model()
2024-04-28 13:41:44,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:44,941:INFO:Checking exceptions
2024-04-28 13:41:44,941:INFO:Importing libraries
2024-04-28 13:41:44,941:INFO:Copying training dataset
2024-04-28 13:41:44,945:INFO:Defining folds
2024-04-28 13:41:44,945:INFO:Declaring metric variables
2024-04-28 13:41:44,948:INFO:Importing untrained model
2024-04-28 13:41:44,951:INFO:Ridge Classifier Imported successfully
2024-04-28 13:41:44,961:INFO:Starting cross validation
2024-04-28 13:41:44,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:45,068:INFO:Calculating mean and std
2024-04-28 13:41:45,069:INFO:Creating metrics dataframe
2024-04-28 13:41:45,072:INFO:Uploading results into container
2024-04-28 13:41:45,073:INFO:Uploading model into container now
2024-04-28 13:41:45,073:INFO:_master_model_container: 6
2024-04-28 13:41:45,073:INFO:_display_container: 2
2024-04-28 13:41:45,073:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-28 13:41:45,073:INFO:create_model() successfully completed......................................
2024-04-28 13:41:45,367:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:45,367:INFO:Creating metrics dataframe
2024-04-28 13:41:45,374:INFO:Initializing Random Forest Classifier
2024-04-28 13:41:45,374:INFO:Total runtime is 0.04814378023147583 minutes
2024-04-28 13:41:45,377:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:45,377:INFO:Initializing create_model()
2024-04-28 13:41:45,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:45,377:INFO:Checking exceptions
2024-04-28 13:41:45,378:INFO:Importing libraries
2024-04-28 13:41:45,378:INFO:Copying training dataset
2024-04-28 13:41:45,382:INFO:Defining folds
2024-04-28 13:41:45,382:INFO:Declaring metric variables
2024-04-28 13:41:45,385:INFO:Importing untrained model
2024-04-28 13:41:45,387:INFO:Random Forest Classifier Imported successfully
2024-04-28 13:41:45,392:INFO:Starting cross validation
2024-04-28 13:41:45,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:46,001:INFO:Calculating mean and std
2024-04-28 13:41:46,002:INFO:Creating metrics dataframe
2024-04-28 13:41:46,005:INFO:Uploading results into container
2024-04-28 13:41:46,005:INFO:Uploading model into container now
2024-04-28 13:41:46,005:INFO:_master_model_container: 7
2024-04-28 13:41:46,005:INFO:_display_container: 2
2024-04-28 13:41:46,006:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-28 13:41:46,006:INFO:create_model() successfully completed......................................
2024-04-28 13:41:46,293:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:46,293:INFO:Creating metrics dataframe
2024-04-28 13:41:46,301:INFO:Initializing Quadratic Discriminant Analysis
2024-04-28 13:41:46,301:INFO:Total runtime is 0.06359116236368816 minutes
2024-04-28 13:41:46,303:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:46,304:INFO:Initializing create_model()
2024-04-28 13:41:46,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:46,304:INFO:Checking exceptions
2024-04-28 13:41:46,304:INFO:Importing libraries
2024-04-28 13:41:46,304:INFO:Copying training dataset
2024-04-28 13:41:46,309:INFO:Defining folds
2024-04-28 13:41:46,309:INFO:Declaring metric variables
2024-04-28 13:41:46,311:INFO:Importing untrained model
2024-04-28 13:41:46,314:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-28 13:41:46,320:INFO:Starting cross validation
2024-04-28 13:41:46,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:46,355:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,371:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:46,382:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,386:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,388:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,389:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,392:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,393:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,395:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,398:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,401:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-04-28 13:41:46,407:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:46,416:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:46,429:INFO:Calculating mean and std
2024-04-28 13:41:46,430:INFO:Creating metrics dataframe
2024-04-28 13:41:46,433:INFO:Uploading results into container
2024-04-28 13:41:46,434:INFO:Uploading model into container now
2024-04-28 13:41:46,434:INFO:_master_model_container: 8
2024-04-28 13:41:46,434:INFO:_display_container: 2
2024-04-28 13:41:46,434:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-28 13:41:46,434:INFO:create_model() successfully completed......................................
2024-04-28 13:41:46,722:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:46,723:INFO:Creating metrics dataframe
2024-04-28 13:41:46,730:INFO:Initializing Ada Boost Classifier
2024-04-28 13:41:46,731:INFO:Total runtime is 0.07076434294382732 minutes
2024-04-28 13:41:46,733:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:46,733:INFO:Initializing create_model()
2024-04-28 13:41:46,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:46,734:INFO:Checking exceptions
2024-04-28 13:41:46,734:INFO:Importing libraries
2024-04-28 13:41:46,734:INFO:Copying training dataset
2024-04-28 13:41:46,738:INFO:Defining folds
2024-04-28 13:41:46,738:INFO:Declaring metric variables
2024-04-28 13:41:46,740:INFO:Importing untrained model
2024-04-28 13:41:46,742:INFO:Ada Boost Classifier Imported successfully
2024-04-28 13:41:46,747:INFO:Starting cross validation
2024-04-28 13:41:46,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:46,778:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:46,804:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:46,808:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:46,808:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:46,808:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:46,810:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:46,812:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:46,814:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:46,814:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:46,817:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-28 13:41:47,029:INFO:Calculating mean and std
2024-04-28 13:41:47,030:INFO:Creating metrics dataframe
2024-04-28 13:41:47,034:INFO:Uploading results into container
2024-04-28 13:41:47,034:INFO:Uploading model into container now
2024-04-28 13:41:47,035:INFO:_master_model_container: 9
2024-04-28 13:41:47,035:INFO:_display_container: 2
2024-04-28 13:41:47,035:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-28 13:41:47,035:INFO:create_model() successfully completed......................................
2024-04-28 13:41:47,322:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:47,323:INFO:Creating metrics dataframe
2024-04-28 13:41:47,331:INFO:Initializing Gradient Boosting Classifier
2024-04-28 13:41:47,331:INFO:Total runtime is 0.08075677156448365 minutes
2024-04-28 13:41:47,333:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:47,333:INFO:Initializing create_model()
2024-04-28 13:41:47,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:47,334:INFO:Checking exceptions
2024-04-28 13:41:47,334:INFO:Importing libraries
2024-04-28 13:41:47,334:INFO:Copying training dataset
2024-04-28 13:41:47,338:INFO:Defining folds
2024-04-28 13:41:47,338:INFO:Declaring metric variables
2024-04-28 13:41:47,341:INFO:Importing untrained model
2024-04-28 13:41:47,343:INFO:Gradient Boosting Classifier Imported successfully
2024-04-28 13:41:47,348:INFO:Starting cross validation
2024-04-28 13:41:47,349:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:47,986:INFO:Calculating mean and std
2024-04-28 13:41:47,987:INFO:Creating metrics dataframe
2024-04-28 13:41:47,990:INFO:Uploading results into container
2024-04-28 13:41:47,990:INFO:Uploading model into container now
2024-04-28 13:41:47,990:INFO:_master_model_container: 10
2024-04-28 13:41:47,990:INFO:_display_container: 2
2024-04-28 13:41:47,991:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-28 13:41:47,991:INFO:create_model() successfully completed......................................
2024-04-28 13:41:48,284:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:48,284:INFO:Creating metrics dataframe
2024-04-28 13:41:48,293:INFO:Initializing Linear Discriminant Analysis
2024-04-28 13:41:48,293:INFO:Total runtime is 0.09678801695505779 minutes
2024-04-28 13:41:48,296:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:48,296:INFO:Initializing create_model()
2024-04-28 13:41:48,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:48,296:INFO:Checking exceptions
2024-04-28 13:41:48,296:INFO:Importing libraries
2024-04-28 13:41:48,296:INFO:Copying training dataset
2024-04-28 13:41:48,301:INFO:Defining folds
2024-04-28 13:41:48,301:INFO:Declaring metric variables
2024-04-28 13:41:48,304:INFO:Importing untrained model
2024-04-28 13:41:48,306:INFO:Linear Discriminant Analysis Imported successfully
2024-04-28 13:41:48,312:INFO:Starting cross validation
2024-04-28 13:41:48,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:48,418:INFO:Calculating mean and std
2024-04-28 13:41:48,419:INFO:Creating metrics dataframe
2024-04-28 13:41:48,422:INFO:Uploading results into container
2024-04-28 13:41:48,422:INFO:Uploading model into container now
2024-04-28 13:41:48,422:INFO:_master_model_container: 11
2024-04-28 13:41:48,422:INFO:_display_container: 2
2024-04-28 13:41:48,423:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-28 13:41:48,423:INFO:create_model() successfully completed......................................
2024-04-28 13:41:48,719:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:48,719:INFO:Creating metrics dataframe
2024-04-28 13:41:48,728:INFO:Initializing Extra Trees Classifier
2024-04-28 13:41:48,728:INFO:Total runtime is 0.10404462814331056 minutes
2024-04-28 13:41:48,731:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:48,731:INFO:Initializing create_model()
2024-04-28 13:41:48,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:48,731:INFO:Checking exceptions
2024-04-28 13:41:48,731:INFO:Importing libraries
2024-04-28 13:41:48,732:INFO:Copying training dataset
2024-04-28 13:41:48,736:INFO:Defining folds
2024-04-28 13:41:48,736:INFO:Declaring metric variables
2024-04-28 13:41:48,739:INFO:Importing untrained model
2024-04-28 13:41:48,742:INFO:Extra Trees Classifier Imported successfully
2024-04-28 13:41:48,747:INFO:Starting cross validation
2024-04-28 13:41:48,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:49,262:INFO:Calculating mean and std
2024-04-28 13:41:49,263:INFO:Creating metrics dataframe
2024-04-28 13:41:49,266:INFO:Uploading results into container
2024-04-28 13:41:49,266:INFO:Uploading model into container now
2024-04-28 13:41:49,267:INFO:_master_model_container: 12
2024-04-28 13:41:49,267:INFO:_display_container: 2
2024-04-28 13:41:49,267:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-28 13:41:49,267:INFO:create_model() successfully completed......................................
2024-04-28 13:41:49,567:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:49,567:INFO:Creating metrics dataframe
2024-04-28 13:41:49,576:INFO:Initializing Light Gradient Boosting Machine
2024-04-28 13:41:49,576:INFO:Total runtime is 0.11817411184310914 minutes
2024-04-28 13:41:49,579:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:49,579:INFO:Initializing create_model()
2024-04-28 13:41:49,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:49,579:INFO:Checking exceptions
2024-04-28 13:41:49,579:INFO:Importing libraries
2024-04-28 13:41:49,579:INFO:Copying training dataset
2024-04-28 13:41:49,584:INFO:Defining folds
2024-04-28 13:41:49,584:INFO:Declaring metric variables
2024-04-28 13:41:49,586:INFO:Importing untrained model
2024-04-28 13:41:49,589:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-28 13:41:49,593:INFO:Starting cross validation
2024-04-28 13:41:49,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:50,407:INFO:Calculating mean and std
2024-04-28 13:41:50,409:INFO:Creating metrics dataframe
2024-04-28 13:41:50,412:INFO:Uploading results into container
2024-04-28 13:41:50,413:INFO:Uploading model into container now
2024-04-28 13:41:50,413:INFO:_master_model_container: 13
2024-04-28 13:41:50,413:INFO:_display_container: 2
2024-04-28 13:41:50,414:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-28 13:41:50,414:INFO:create_model() successfully completed......................................
2024-04-28 13:41:50,723:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:50,723:INFO:Creating metrics dataframe
2024-04-28 13:41:50,732:INFO:Initializing Dummy Classifier
2024-04-28 13:41:50,733:INFO:Total runtime is 0.13745830456415814 minutes
2024-04-28 13:41:50,735:INFO:SubProcess create_model() called ==================================
2024-04-28 13:41:50,735:INFO:Initializing create_model()
2024-04-28 13:41:50,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE156D7E20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:50,736:INFO:Checking exceptions
2024-04-28 13:41:50,736:INFO:Importing libraries
2024-04-28 13:41:50,736:INFO:Copying training dataset
2024-04-28 13:41:50,740:INFO:Defining folds
2024-04-28 13:41:50,740:INFO:Declaring metric variables
2024-04-28 13:41:50,742:INFO:Importing untrained model
2024-04-28 13:41:50,744:INFO:Dummy Classifier Imported successfully
2024-04-28 13:41:50,749:INFO:Starting cross validation
2024-04-28 13:41:50,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-28 13:41:50,798:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,826:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,828:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,831:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,831:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,833:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,837:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,837:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,838:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,838:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-28 13:41:50,853:INFO:Calculating mean and std
2024-04-28 13:41:50,854:INFO:Creating metrics dataframe
2024-04-28 13:41:50,857:INFO:Uploading results into container
2024-04-28 13:41:50,857:INFO:Uploading model into container now
2024-04-28 13:41:50,857:INFO:_master_model_container: 14
2024-04-28 13:41:50,857:INFO:_display_container: 2
2024-04-28 13:41:50,857:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-28 13:41:50,857:INFO:create_model() successfully completed......................................
2024-04-28 13:41:51,147:INFO:SubProcess create_model() end ==================================
2024-04-28 13:41:51,147:INFO:Creating metrics dataframe
2024-04-28 13:41:51,163:INFO:Initializing create_model()
2024-04-28 13:41:51,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-28 13:41:51,163:INFO:Checking exceptions
2024-04-28 13:41:51,165:INFO:Importing libraries
2024-04-28 13:41:51,165:INFO:Copying training dataset
2024-04-28 13:41:51,168:INFO:Defining folds
2024-04-28 13:41:51,168:INFO:Declaring metric variables
2024-04-28 13:41:51,169:INFO:Importing untrained model
2024-04-28 13:41:51,169:INFO:Declaring custom model
2024-04-28 13:41:51,169:INFO:Logistic Regression Imported successfully
2024-04-28 13:41:51,170:INFO:Cross validation set to False
2024-04-28 13:41:51,170:INFO:Fitting Model
2024-04-28 13:41:51,390:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-28 13:41:51,391:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:41:51,391:INFO:create_model() successfully completed......................................
2024-04-28 13:41:51,734:INFO:_master_model_container: 14
2024-04-28 13:41:51,734:INFO:_display_container: 2
2024-04-28 13:41:51,735:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-28 13:41:51,735:INFO:compare_models() successfully completed......................................
2024-04-28 13:41:52,913:INFO:Initializing predict_model()
2024-04-28 13:41:52,913:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EE0F2C5520>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001EE12A45670>)
2024-04-28 13:41:52,913:INFO:Checking exceptions
2024-04-28 13:41:52,913:INFO:Preloading libraries
2024-04-28 13:41:52,914:INFO:Set up data.
2024-04-28 13:41:52,919:INFO:Set up index.
2024-04-28 13:45:05,361:WARNING:<>:1: SyntaxWarning: "is" with a literal. Did you mean "=="?

2024-04-28 13:45:05,362:WARNING:<>:1: SyntaxWarning: "is" with a literal. Did you mean "=="?

2024-04-28 13:45:05,363:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\1343763012.py:1: SyntaxWarning: "is" with a literal. Did you mean "=="?
  train['ajskdf'] = [1 if x is 'Donor' else 0 for x in train['target']]

2024-04-28 13:45:18,465:WARNING:<>:1: SyntaxWarning: "is" with a literal. Did you mean "=="?

2024-04-28 13:45:18,466:WARNING:<>:1: SyntaxWarning: "is" with a literal. Did you mean "=="?

2024-04-28 13:45:18,466:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\50190507.py:1: SyntaxWarning: "is" with a literal. Did you mean "=="?
  train['ajskdf'] = [1 if x is 'Donor' else 0 for x in train['target']]

2024-04-28 13:55:46,995:WARNING:C:\Users\dansc\AppData\Local\Temp\ipykernel_15488\3370468113.py:51: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.fillna(df.mean(), inplace=True)

2024-04-29 18:23:09,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:23:09,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:23:09,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:23:09,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:26:16,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:26:16,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:26:16,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:26:16,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:34:37,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:34:37,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:34:37,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:34:37,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 18:35:57,567:INFO:PyCaret ClassificationExperiment
2024-04-29 18:35:57,567:INFO:Logging name: clf-default-name
2024-04-29 18:35:57,567:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-29 18:35:57,567:INFO:version 3.3.1
2024-04-29 18:35:57,567:INFO:Initializing setup()
2024-04-29 18:35:57,567:INFO:self.USI: 3893
2024-04-29 18:35:57,567:INFO:self._variable_keys: {'idx', 'y', 'target_param', 'fix_imbalance', 'gpu_n_jobs_param', 'seed', 'logging_param', 'X_train', 'gpu_param', '_available_plots', 'html_param', 'memory', 'y_train', 'fold_shuffle_param', 'fold_generator', 'exp_id', 'log_plots_param', 'y_test', '_ml_usecase', 'X_test', 'n_jobs_param', 'USI', 'X', 'pipeline', 'exp_name_log', 'is_multiclass', 'data', 'fold_groups_param'}
2024-04-29 18:35:57,567:INFO:Checking environment
2024-04-29 18:35:57,567:INFO:python_version: 3.9.12
2024-04-29 18:35:57,567:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-29 18:35:57,567:INFO:machine: AMD64
2024-04-29 18:35:57,567:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-29 18:35:57,571:INFO:Memory: svmem(total=34282364928, available=18721058816, percent=45.4, used=15561306112, free=18721058816)
2024-04-29 18:35:57,571:INFO:Physical Core: 6
2024-04-29 18:35:57,571:INFO:Logical Core: 12
2024-04-29 18:35:57,571:INFO:Checking libraries
2024-04-29 18:35:57,571:INFO:System:
2024-04-29 18:35:57,571:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-29 18:35:57,571:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-29 18:35:57,571:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-29 18:35:57,572:INFO:PyCaret required dependencies:
2024-04-29 18:35:57,746:INFO:                 pip: 21.2.4
2024-04-29 18:35:57,746:INFO:          setuptools: 61.2.0
2024-04-29 18:35:57,746:INFO:             pycaret: 3.3.1
2024-04-29 18:35:57,746:INFO:             IPython: 8.2.0
2024-04-29 18:35:57,746:INFO:          ipywidgets: 7.6.5
2024-04-29 18:35:57,746:INFO:                tqdm: 4.64.0
2024-04-29 18:35:57,746:INFO:               numpy: 1.21.5
2024-04-29 18:35:57,746:INFO:              pandas: 1.4.2
2024-04-29 18:35:57,747:INFO:              jinja2: 2.11.3
2024-04-29 18:35:57,747:INFO:               scipy: 1.7.3
2024-04-29 18:35:57,747:INFO:              joblib: 1.3.2
2024-04-29 18:35:57,747:INFO:             sklearn: 1.4.0
2024-04-29 18:35:57,747:INFO:                pyod: 1.1.3
2024-04-29 18:35:57,747:INFO:            imblearn: 0.12.2
2024-04-29 18:35:57,747:INFO:   category_encoders: 2.6.3
2024-04-29 18:35:57,747:INFO:            lightgbm: 4.3.0
2024-04-29 18:35:57,747:INFO:               numba: 0.55.1
2024-04-29 18:35:57,747:INFO:            requests: 2.27.1
2024-04-29 18:35:57,747:INFO:          matplotlib: 3.5.1
2024-04-29 18:35:57,747:INFO:          scikitplot: 0.3.7
2024-04-29 18:35:57,747:INFO:         yellowbrick: 1.5
2024-04-29 18:35:57,747:INFO:              plotly: 5.6.0
2024-04-29 18:35:57,747:INFO:    plotly-resampler: Not installed
2024-04-29 18:35:57,747:INFO:             kaleido: 0.2.1
2024-04-29 18:35:57,747:INFO:           schemdraw: 0.15
2024-04-29 18:35:57,747:INFO:         statsmodels: 0.13.2
2024-04-29 18:35:57,747:INFO:              sktime: 0.26.0
2024-04-29 18:35:57,747:INFO:               tbats: 1.1.3
2024-04-29 18:35:57,747:INFO:            pmdarima: 2.0.4
2024-04-29 18:35:57,747:INFO:              psutil: 5.9.8
2024-04-29 18:35:57,747:INFO:          markupsafe: 2.0.1
2024-04-29 18:35:57,747:INFO:             pickle5: Not installed
2024-04-29 18:35:57,747:INFO:         cloudpickle: 2.0.0
2024-04-29 18:35:57,747:INFO:         deprecation: 2.1.0
2024-04-29 18:35:57,747:INFO:              xxhash: 3.4.1
2024-04-29 18:35:57,747:INFO:           wurlitzer: Not installed
2024-04-29 18:35:57,747:INFO:PyCaret optional dependencies:
2024-04-29 18:35:57,759:INFO:                shap: Not installed
2024-04-29 18:35:57,759:INFO:           interpret: Not installed
2024-04-29 18:35:57,759:INFO:                umap: Not installed
2024-04-29 18:35:57,759:INFO:     ydata_profiling: Not installed
2024-04-29 18:35:57,759:INFO:  explainerdashboard: Not installed
2024-04-29 18:35:57,759:INFO:             autoviz: Not installed
2024-04-29 18:35:57,759:INFO:           fairlearn: Not installed
2024-04-29 18:35:57,759:INFO:          deepchecks: Not installed
2024-04-29 18:35:57,760:INFO:             xgboost: Not installed
2024-04-29 18:35:57,760:INFO:            catboost: Not installed
2024-04-29 18:35:57,760:INFO:              kmodes: Not installed
2024-04-29 18:35:57,760:INFO:             mlxtend: 0.23.1
2024-04-29 18:35:57,760:INFO:       statsforecast: Not installed
2024-04-29 18:35:57,760:INFO:        tune_sklearn: Not installed
2024-04-29 18:35:57,760:INFO:                 ray: Not installed
2024-04-29 18:35:57,760:INFO:            hyperopt: Not installed
2024-04-29 18:35:57,760:INFO:              optuna: 3.6.1
2024-04-29 18:35:57,760:INFO:               skopt: Not installed
2024-04-29 18:35:57,760:INFO:              mlflow: Not installed
2024-04-29 18:35:57,760:INFO:              gradio: Not installed
2024-04-29 18:35:57,760:INFO:             fastapi: Not installed
2024-04-29 18:35:57,760:INFO:             uvicorn: Not installed
2024-04-29 18:35:57,760:INFO:              m2cgen: Not installed
2024-04-29 18:35:57,760:INFO:           evidently: Not installed
2024-04-29 18:35:57,760:INFO:               fugue: Not installed
2024-04-29 18:35:57,760:INFO:           streamlit: 1.31.1
2024-04-29 18:35:57,760:INFO:             prophet: Not installed
2024-04-29 18:35:57,760:INFO:None
2024-04-29 18:35:57,760:INFO:Set up data.
2024-04-29 18:35:57,766:INFO:Set up folding strategy.
2024-04-29 18:35:57,766:INFO:Set up train/test split.
2024-04-29 18:35:57,771:INFO:Set up index.
2024-04-29 18:35:57,771:INFO:Assigning column types.
2024-04-29 18:35:57,773:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-29 18:35:57,816:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-29 18:35:57,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 18:35:57,852:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:57,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:57,896:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-29 18:35:57,896:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 18:35:57,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:57,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:57,924:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-29 18:35:57,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 18:35:57,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:57,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,038:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 18:35:58,065:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,065:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,066:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-29 18:35:58,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,216:INFO:Preparing preprocessing pipeline...
2024-04-29 18:35:58,218:INFO:Set up simple imputation.
2024-04-29 18:35:58,218:INFO:Set up imbalanced handling.
2024-04-29 18:35:58,218:INFO:Set up column name cleaning.
2024-04-29 18:35:58,265:INFO:Finished creating preprocessing pipeline.
2024-04-29 18:35:58,272:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'pct_lt15k',
                                             'num_prom', 'lifetime_gifts',
                                             'largest_gift', 'last_gift',
                                             'time_lag', 'zipconvert2_Yes',
                                             'zipconvert3_Yes',
                                             'zipconvert4_Yes', 'homeowner_Yes',
                                             'female_Yes'...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=27,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-29 18:35:58,272:INFO:Creating final display dataframe.
2024-04-29 18:35:58,368:INFO:Setup _display_container:                     Description             Value
0                    Session id                27
1                        Target   target_No Donor
2                   Target type            Binary
3           Original data shape        (2400, 16)
4        Transformed data shape        (2418, 16)
5   Transformed train set shape        (1698, 16)
6    Transformed test set shape         (720, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                Fix imbalance              True
13         Fix imbalance method             SMOTE
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3893
2024-04-29 18:35:58,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:35:58,519:INFO:setup() successfully completed in 0.96s...............
2024-04-29 18:35:58,519:INFO:Initializing compare_models()
2024-04-29 18:35:58,519:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-29 18:35:58,520:INFO:Checking exceptions
2024-04-29 18:35:58,523:INFO:Preparing display monitor
2024-04-29 18:35:58,550:INFO:Initializing Logistic Regression
2024-04-29 18:35:58,551:INFO:Total runtime is 0.0 minutes
2024-04-29 18:35:58,553:INFO:SubProcess create_model() called ==================================
2024-04-29 18:35:58,554:INFO:Initializing create_model()
2024-04-29 18:35:58,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:35:58,554:INFO:Checking exceptions
2024-04-29 18:35:58,554:INFO:Importing libraries
2024-04-29 18:35:58,554:INFO:Copying training dataset
2024-04-29 18:35:58,558:INFO:Defining folds
2024-04-29 18:35:58,558:INFO:Declaring metric variables
2024-04-29 18:35:58,560:INFO:Importing untrained model
2024-04-29 18:35:58,563:INFO:Logistic Regression Imported successfully
2024-04-29 18:35:58,568:INFO:Starting cross validation
2024-04-29 18:35:58,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:06,296:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,309:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,333:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,373:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,390:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,453:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,460:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,462:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,471:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,484:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:06,516:INFO:Calculating mean and std
2024-04-29 18:36:06,518:INFO:Creating metrics dataframe
2024-04-29 18:36:06,522:INFO:Uploading results into container
2024-04-29 18:36:06,523:INFO:Uploading model into container now
2024-04-29 18:36:06,523:INFO:_master_model_container: 1
2024-04-29 18:36:06,523:INFO:_display_container: 2
2024-04-29 18:36:06,524:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:36:06,524:INFO:create_model() successfully completed......................................
2024-04-29 18:36:06,643:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:06,643:INFO:Creating metrics dataframe
2024-04-29 18:36:06,649:INFO:Initializing K Neighbors Classifier
2024-04-29 18:36:06,650:INFO:Total runtime is 0.13500607013702393 minutes
2024-04-29 18:36:06,652:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:06,652:INFO:Initializing create_model()
2024-04-29 18:36:06,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:06,652:INFO:Checking exceptions
2024-04-29 18:36:06,652:INFO:Importing libraries
2024-04-29 18:36:06,652:INFO:Copying training dataset
2024-04-29 18:36:06,657:INFO:Defining folds
2024-04-29 18:36:06,658:INFO:Declaring metric variables
2024-04-29 18:36:06,661:INFO:Importing untrained model
2024-04-29 18:36:06,665:INFO:K Neighbors Classifier Imported successfully
2024-04-29 18:36:06,671:INFO:Starting cross validation
2024-04-29 18:36:06,673:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:11,222:INFO:Calculating mean and std
2024-04-29 18:36:11,223:INFO:Creating metrics dataframe
2024-04-29 18:36:11,226:INFO:Uploading results into container
2024-04-29 18:36:11,226:INFO:Uploading model into container now
2024-04-29 18:36:11,227:INFO:_master_model_container: 2
2024-04-29 18:36:11,227:INFO:_display_container: 2
2024-04-29 18:36:11,227:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-29 18:36:11,227:INFO:create_model() successfully completed......................................
2024-04-29 18:36:11,326:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:11,326:INFO:Creating metrics dataframe
2024-04-29 18:36:11,334:INFO:Initializing Naive Bayes
2024-04-29 18:36:11,334:INFO:Total runtime is 0.21307701269785562 minutes
2024-04-29 18:36:11,336:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:11,336:INFO:Initializing create_model()
2024-04-29 18:36:11,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:11,337:INFO:Checking exceptions
2024-04-29 18:36:11,337:INFO:Importing libraries
2024-04-29 18:36:11,337:INFO:Copying training dataset
2024-04-29 18:36:11,341:INFO:Defining folds
2024-04-29 18:36:11,341:INFO:Declaring metric variables
2024-04-29 18:36:11,344:INFO:Importing untrained model
2024-04-29 18:36:11,346:INFO:Naive Bayes Imported successfully
2024-04-29 18:36:11,351:INFO:Starting cross validation
2024-04-29 18:36:11,352:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:11,443:INFO:Calculating mean and std
2024-04-29 18:36:11,444:INFO:Creating metrics dataframe
2024-04-29 18:36:11,447:INFO:Uploading results into container
2024-04-29 18:36:11,447:INFO:Uploading model into container now
2024-04-29 18:36:11,448:INFO:_master_model_container: 3
2024-04-29 18:36:11,448:INFO:_display_container: 2
2024-04-29 18:36:11,448:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-29 18:36:11,448:INFO:create_model() successfully completed......................................
2024-04-29 18:36:11,537:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:11,538:INFO:Creating metrics dataframe
2024-04-29 18:36:11,545:INFO:Initializing Decision Tree Classifier
2024-04-29 18:36:11,545:INFO:Total runtime is 0.2165968855222066 minutes
2024-04-29 18:36:11,548:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:11,548:INFO:Initializing create_model()
2024-04-29 18:36:11,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:11,548:INFO:Checking exceptions
2024-04-29 18:36:11,548:INFO:Importing libraries
2024-04-29 18:36:11,548:INFO:Copying training dataset
2024-04-29 18:36:11,553:INFO:Defining folds
2024-04-29 18:36:11,553:INFO:Declaring metric variables
2024-04-29 18:36:11,556:INFO:Importing untrained model
2024-04-29 18:36:11,558:INFO:Decision Tree Classifier Imported successfully
2024-04-29 18:36:11,563:INFO:Starting cross validation
2024-04-29 18:36:11,564:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:11,665:INFO:Calculating mean and std
2024-04-29 18:36:11,666:INFO:Creating metrics dataframe
2024-04-29 18:36:11,669:INFO:Uploading results into container
2024-04-29 18:36:11,670:INFO:Uploading model into container now
2024-04-29 18:36:11,670:INFO:_master_model_container: 4
2024-04-29 18:36:11,670:INFO:_display_container: 2
2024-04-29 18:36:11,670:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-29 18:36:11,670:INFO:create_model() successfully completed......................................
2024-04-29 18:36:11,757:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:11,757:INFO:Creating metrics dataframe
2024-04-29 18:36:11,764:INFO:Initializing SVM - Linear Kernel
2024-04-29 18:36:11,764:INFO:Total runtime is 0.2202335158983866 minutes
2024-04-29 18:36:11,766:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:11,767:INFO:Initializing create_model()
2024-04-29 18:36:11,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:11,767:INFO:Checking exceptions
2024-04-29 18:36:11,767:INFO:Importing libraries
2024-04-29 18:36:11,767:INFO:Copying training dataset
2024-04-29 18:36:11,771:INFO:Defining folds
2024-04-29 18:36:11,771:INFO:Declaring metric variables
2024-04-29 18:36:11,774:INFO:Importing untrained model
2024-04-29 18:36:11,777:INFO:SVM - Linear Kernel Imported successfully
2024-04-29 18:36:11,783:INFO:Starting cross validation
2024-04-29 18:36:11,785:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:11,871:INFO:Calculating mean and std
2024-04-29 18:36:11,872:INFO:Creating metrics dataframe
2024-04-29 18:36:11,875:INFO:Uploading results into container
2024-04-29 18:36:11,875:INFO:Uploading model into container now
2024-04-29 18:36:11,876:INFO:_master_model_container: 5
2024-04-29 18:36:11,876:INFO:_display_container: 2
2024-04-29 18:36:11,876:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-29 18:36:11,876:INFO:create_model() successfully completed......................................
2024-04-29 18:36:11,962:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:11,962:INFO:Creating metrics dataframe
2024-04-29 18:36:11,970:INFO:Initializing Ridge Classifier
2024-04-29 18:36:11,970:INFO:Total runtime is 0.22367000579833982 minutes
2024-04-29 18:36:11,972:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:11,972:INFO:Initializing create_model()
2024-04-29 18:36:11,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:11,973:INFO:Checking exceptions
2024-04-29 18:36:11,973:INFO:Importing libraries
2024-04-29 18:36:11,973:INFO:Copying training dataset
2024-04-29 18:36:11,977:INFO:Defining folds
2024-04-29 18:36:11,977:INFO:Declaring metric variables
2024-04-29 18:36:11,979:INFO:Importing untrained model
2024-04-29 18:36:11,982:INFO:Ridge Classifier Imported successfully
2024-04-29 18:36:11,986:INFO:Starting cross validation
2024-04-29 18:36:11,988:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:12,063:INFO:Calculating mean and std
2024-04-29 18:36:12,063:INFO:Creating metrics dataframe
2024-04-29 18:36:12,066:INFO:Uploading results into container
2024-04-29 18:36:12,066:INFO:Uploading model into container now
2024-04-29 18:36:12,066:INFO:_master_model_container: 6
2024-04-29 18:36:12,066:INFO:_display_container: 2
2024-04-29 18:36:12,066:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-29 18:36:12,067:INFO:create_model() successfully completed......................................
2024-04-29 18:36:12,149:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:12,149:INFO:Creating metrics dataframe
2024-04-29 18:36:12,156:INFO:Initializing Random Forest Classifier
2024-04-29 18:36:12,156:INFO:Total runtime is 0.22677260637283322 minutes
2024-04-29 18:36:12,159:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:12,159:INFO:Initializing create_model()
2024-04-29 18:36:12,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:12,159:INFO:Checking exceptions
2024-04-29 18:36:12,159:INFO:Importing libraries
2024-04-29 18:36:12,160:INFO:Copying training dataset
2024-04-29 18:36:12,163:INFO:Defining folds
2024-04-29 18:36:12,164:INFO:Declaring metric variables
2024-04-29 18:36:12,167:INFO:Importing untrained model
2024-04-29 18:36:12,169:INFO:Random Forest Classifier Imported successfully
2024-04-29 18:36:12,174:INFO:Starting cross validation
2024-04-29 18:36:12,176:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:12,679:INFO:Calculating mean and std
2024-04-29 18:36:12,680:INFO:Creating metrics dataframe
2024-04-29 18:36:12,684:INFO:Uploading results into container
2024-04-29 18:36:12,684:INFO:Uploading model into container now
2024-04-29 18:36:12,685:INFO:_master_model_container: 7
2024-04-29 18:36:12,685:INFO:_display_container: 2
2024-04-29 18:36:12,685:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-29 18:36:12,685:INFO:create_model() successfully completed......................................
2024-04-29 18:36:12,771:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:12,771:INFO:Creating metrics dataframe
2024-04-29 18:36:12,779:INFO:Initializing Quadratic Discriminant Analysis
2024-04-29 18:36:12,779:INFO:Total runtime is 0.23714872598648068 minutes
2024-04-29 18:36:12,781:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:12,782:INFO:Initializing create_model()
2024-04-29 18:36:12,782:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:12,782:INFO:Checking exceptions
2024-04-29 18:36:12,782:INFO:Importing libraries
2024-04-29 18:36:12,782:INFO:Copying training dataset
2024-04-29 18:36:12,786:INFO:Defining folds
2024-04-29 18:36:12,786:INFO:Declaring metric variables
2024-04-29 18:36:12,789:INFO:Importing untrained model
2024-04-29 18:36:12,792:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-29 18:36:12,797:INFO:Starting cross validation
2024-04-29 18:36:12,798:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:12,870:INFO:Calculating mean and std
2024-04-29 18:36:12,870:INFO:Creating metrics dataframe
2024-04-29 18:36:12,873:INFO:Uploading results into container
2024-04-29 18:36:12,873:INFO:Uploading model into container now
2024-04-29 18:36:12,873:INFO:_master_model_container: 8
2024-04-29 18:36:12,874:INFO:_display_container: 2
2024-04-29 18:36:12,874:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-29 18:36:12,874:INFO:create_model() successfully completed......................................
2024-04-29 18:36:12,960:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:12,960:INFO:Creating metrics dataframe
2024-04-29 18:36:12,968:INFO:Initializing Ada Boost Classifier
2024-04-29 18:36:12,969:INFO:Total runtime is 0.24031826257705685 minutes
2024-04-29 18:36:12,971:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:12,971:INFO:Initializing create_model()
2024-04-29 18:36:12,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:12,971:INFO:Checking exceptions
2024-04-29 18:36:12,972:INFO:Importing libraries
2024-04-29 18:36:12,972:INFO:Copying training dataset
2024-04-29 18:36:12,976:INFO:Defining folds
2024-04-29 18:36:12,976:INFO:Declaring metric variables
2024-04-29 18:36:12,978:INFO:Importing untrained model
2024-04-29 18:36:12,981:INFO:Ada Boost Classifier Imported successfully
2024-04-29 18:36:12,986:INFO:Starting cross validation
2024-04-29 18:36:12,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:13,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:36:13,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:36:13,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:36:13,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:36:13,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:36:13,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:36:13,033:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:36:13,204:INFO:Calculating mean and std
2024-04-29 18:36:13,205:INFO:Creating metrics dataframe
2024-04-29 18:36:13,208:INFO:Uploading results into container
2024-04-29 18:36:13,208:INFO:Uploading model into container now
2024-04-29 18:36:13,208:INFO:_master_model_container: 9
2024-04-29 18:36:13,208:INFO:_display_container: 2
2024-04-29 18:36:13,209:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-29 18:36:13,209:INFO:create_model() successfully completed......................................
2024-04-29 18:36:13,294:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:13,294:INFO:Creating metrics dataframe
2024-04-29 18:36:13,303:INFO:Initializing Gradient Boosting Classifier
2024-04-29 18:36:13,303:INFO:Total runtime is 0.24588331381479897 minutes
2024-04-29 18:36:13,305:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:13,305:INFO:Initializing create_model()
2024-04-29 18:36:13,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:13,305:INFO:Checking exceptions
2024-04-29 18:36:13,306:INFO:Importing libraries
2024-04-29 18:36:13,306:INFO:Copying training dataset
2024-04-29 18:36:13,309:INFO:Defining folds
2024-04-29 18:36:13,309:INFO:Declaring metric variables
2024-04-29 18:36:13,312:INFO:Importing untrained model
2024-04-29 18:36:13,314:INFO:Gradient Boosting Classifier Imported successfully
2024-04-29 18:36:13,320:INFO:Starting cross validation
2024-04-29 18:36:13,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:13,798:INFO:Calculating mean and std
2024-04-29 18:36:13,801:INFO:Creating metrics dataframe
2024-04-29 18:36:13,804:INFO:Uploading results into container
2024-04-29 18:36:13,804:INFO:Uploading model into container now
2024-04-29 18:36:13,804:INFO:_master_model_container: 10
2024-04-29 18:36:13,805:INFO:_display_container: 2
2024-04-29 18:36:13,805:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-29 18:36:13,805:INFO:create_model() successfully completed......................................
2024-04-29 18:36:13,975:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:13,975:INFO:Creating metrics dataframe
2024-04-29 18:36:13,989:INFO:Initializing Linear Discriminant Analysis
2024-04-29 18:36:13,990:INFO:Total runtime is 0.2573437253634135 minutes
2024-04-29 18:36:13,994:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:13,994:INFO:Initializing create_model()
2024-04-29 18:36:13,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:13,995:INFO:Checking exceptions
2024-04-29 18:36:13,995:INFO:Importing libraries
2024-04-29 18:36:13,995:INFO:Copying training dataset
2024-04-29 18:36:14,001:INFO:Defining folds
2024-04-29 18:36:14,001:INFO:Declaring metric variables
2024-04-29 18:36:14,005:INFO:Importing untrained model
2024-04-29 18:36:14,010:INFO:Linear Discriminant Analysis Imported successfully
2024-04-29 18:36:14,019:INFO:Starting cross validation
2024-04-29 18:36:14,021:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:14,112:INFO:Calculating mean and std
2024-04-29 18:36:14,114:INFO:Creating metrics dataframe
2024-04-29 18:36:14,117:INFO:Uploading results into container
2024-04-29 18:36:14,117:INFO:Uploading model into container now
2024-04-29 18:36:14,118:INFO:_master_model_container: 11
2024-04-29 18:36:14,118:INFO:_display_container: 2
2024-04-29 18:36:14,118:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-29 18:36:14,118:INFO:create_model() successfully completed......................................
2024-04-29 18:36:14,288:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:14,288:INFO:Creating metrics dataframe
2024-04-29 18:36:14,298:INFO:Initializing Extra Trees Classifier
2024-04-29 18:36:14,298:INFO:Total runtime is 0.26246505180994667 minutes
2024-04-29 18:36:14,301:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:14,301:INFO:Initializing create_model()
2024-04-29 18:36:14,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:14,301:INFO:Checking exceptions
2024-04-29 18:36:14,302:INFO:Importing libraries
2024-04-29 18:36:14,302:INFO:Copying training dataset
2024-04-29 18:36:14,308:INFO:Defining folds
2024-04-29 18:36:14,308:INFO:Declaring metric variables
2024-04-29 18:36:14,312:INFO:Importing untrained model
2024-04-29 18:36:14,316:INFO:Extra Trees Classifier Imported successfully
2024-04-29 18:36:14,321:INFO:Starting cross validation
2024-04-29 18:36:14,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:14,748:INFO:Calculating mean and std
2024-04-29 18:36:14,749:INFO:Creating metrics dataframe
2024-04-29 18:36:14,752:INFO:Uploading results into container
2024-04-29 18:36:14,753:INFO:Uploading model into container now
2024-04-29 18:36:14,753:INFO:_master_model_container: 12
2024-04-29 18:36:14,753:INFO:_display_container: 2
2024-04-29 18:36:14,754:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-29 18:36:14,754:INFO:create_model() successfully completed......................................
2024-04-29 18:36:14,839:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:14,840:INFO:Creating metrics dataframe
2024-04-29 18:36:14,849:INFO:Initializing Light Gradient Boosting Machine
2024-04-29 18:36:14,849:INFO:Total runtime is 0.2716567556063334 minutes
2024-04-29 18:36:14,851:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:14,851:INFO:Initializing create_model()
2024-04-29 18:36:14,852:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:14,852:INFO:Checking exceptions
2024-04-29 18:36:14,852:INFO:Importing libraries
2024-04-29 18:36:14,852:INFO:Copying training dataset
2024-04-29 18:36:14,856:INFO:Defining folds
2024-04-29 18:36:14,856:INFO:Declaring metric variables
2024-04-29 18:36:14,859:INFO:Importing untrained model
2024-04-29 18:36:14,862:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-29 18:36:14,868:INFO:Starting cross validation
2024-04-29 18:36:14,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:15,489:INFO:Calculating mean and std
2024-04-29 18:36:15,491:INFO:Creating metrics dataframe
2024-04-29 18:36:15,494:INFO:Uploading results into container
2024-04-29 18:36:15,495:INFO:Uploading model into container now
2024-04-29 18:36:15,495:INFO:_master_model_container: 13
2024-04-29 18:36:15,495:INFO:_display_container: 2
2024-04-29 18:36:15,496:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-29 18:36:15,496:INFO:create_model() successfully completed......................................
2024-04-29 18:36:15,608:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:15,608:INFO:Creating metrics dataframe
2024-04-29 18:36:15,619:INFO:Initializing Dummy Classifier
2024-04-29 18:36:15,619:INFO:Total runtime is 0.2844850659370422 minutes
2024-04-29 18:36:15,621:INFO:SubProcess create_model() called ==================================
2024-04-29 18:36:15,622:INFO:Initializing create_model()
2024-04-29 18:36:15,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB2B160>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:15,622:INFO:Checking exceptions
2024-04-29 18:36:15,622:INFO:Importing libraries
2024-04-29 18:36:15,622:INFO:Copying training dataset
2024-04-29 18:36:15,626:INFO:Defining folds
2024-04-29 18:36:15,627:INFO:Declaring metric variables
2024-04-29 18:36:15,629:INFO:Importing untrained model
2024-04-29 18:36:15,632:INFO:Dummy Classifier Imported successfully
2024-04-29 18:36:15,638:INFO:Starting cross validation
2024-04-29 18:36:15,639:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:36:15,700:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:36:15,700:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:36:15,700:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:36:15,700:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:36:15,700:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:36:15,700:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:36:15,700:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:36:15,701:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:36:15,709:INFO:Calculating mean and std
2024-04-29 18:36:15,709:INFO:Creating metrics dataframe
2024-04-29 18:36:15,712:INFO:Uploading results into container
2024-04-29 18:36:15,712:INFO:Uploading model into container now
2024-04-29 18:36:15,712:INFO:_master_model_container: 14
2024-04-29 18:36:15,713:INFO:_display_container: 2
2024-04-29 18:36:15,713:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-29 18:36:15,713:INFO:create_model() successfully completed......................................
2024-04-29 18:36:15,803:INFO:SubProcess create_model() end ==================================
2024-04-29 18:36:15,803:INFO:Creating metrics dataframe
2024-04-29 18:36:15,820:INFO:Initializing create_model()
2024-04-29 18:36:15,820:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:36:15,820:INFO:Checking exceptions
2024-04-29 18:36:15,822:INFO:Importing libraries
2024-04-29 18:36:15,822:INFO:Copying training dataset
2024-04-29 18:36:15,825:INFO:Defining folds
2024-04-29 18:36:15,825:INFO:Declaring metric variables
2024-04-29 18:36:15,825:INFO:Importing untrained model
2024-04-29 18:36:15,825:INFO:Declaring custom model
2024-04-29 18:36:15,826:INFO:Logistic Regression Imported successfully
2024-04-29 18:36:15,826:INFO:Cross validation set to False
2024-04-29 18:36:15,826:INFO:Fitting Model
2024-04-29 18:36:15,984:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:36:15,984:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:36:15,984:INFO:create_model() successfully completed......................................
2024-04-29 18:36:16,090:INFO:_master_model_container: 14
2024-04-29 18:36:16,091:INFO:_display_container: 2
2024-04-29 18:36:16,091:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:36:16,091:INFO:compare_models() successfully completed......................................
2024-04-29 18:36:24,803:INFO:Initializing predict_model()
2024-04-29 18:36:24,803:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000212412AFE50>)
2024-04-29 18:36:24,803:INFO:Checking exceptions
2024-04-29 18:36:24,803:INFO:Preloading libraries
2024-04-29 18:36:24,804:INFO:Set up data.
2024-04-29 18:36:24,810:INFO:Set up index.
2024-04-29 18:37:30,489:INFO:Initializing predict_model()
2024-04-29 18:37:30,489:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124B6E4370>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000212411FFAF0>)
2024-04-29 18:37:30,489:INFO:Checking exceptions
2024-04-29 18:37:30,489:INFO:Preloading libraries
2024-04-29 18:37:30,490:INFO:Set up data.
2024-04-29 18:37:30,496:INFO:Set up index.
2024-04-29 18:39:41,729:INFO:PyCaret ClassificationExperiment
2024-04-29 18:39:41,730:INFO:Logging name: clf-default-name
2024-04-29 18:39:41,730:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-29 18:39:41,730:INFO:version 3.3.1
2024-04-29 18:39:41,730:INFO:Initializing setup()
2024-04-29 18:39:41,730:INFO:self.USI: ebcc
2024-04-29 18:39:41,730:INFO:self._variable_keys: {'idx', 'y', 'target_param', 'fix_imbalance', 'gpu_n_jobs_param', 'seed', 'logging_param', 'X_train', 'gpu_param', '_available_plots', 'html_param', 'memory', 'y_train', 'fold_shuffle_param', 'fold_generator', 'exp_id', 'log_plots_param', 'y_test', '_ml_usecase', 'X_test', 'n_jobs_param', 'USI', 'X', 'pipeline', 'exp_name_log', 'is_multiclass', 'data', 'fold_groups_param'}
2024-04-29 18:39:41,730:INFO:Checking environment
2024-04-29 18:39:41,730:INFO:python_version: 3.9.12
2024-04-29 18:39:41,730:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2024-04-29 18:39:41,730:INFO:machine: AMD64
2024-04-29 18:39:41,730:INFO:platform: Windows-10-10.0.19045-SP0
2024-04-29 18:39:41,734:INFO:Memory: svmem(total=34282364928, available=20054814720, percent=41.5, used=14227550208, free=20054814720)
2024-04-29 18:39:41,734:INFO:Physical Core: 6
2024-04-29 18:39:41,734:INFO:Logical Core: 12
2024-04-29 18:39:41,734:INFO:Checking libraries
2024-04-29 18:39:41,734:INFO:System:
2024-04-29 18:39:41,734:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2024-04-29 18:39:41,734:INFO:executable: C:\Users\dansc\anaconda3\python.exe
2024-04-29 18:39:41,734:INFO:   machine: Windows-10-10.0.19045-SP0
2024-04-29 18:39:41,734:INFO:PyCaret required dependencies:
2024-04-29 18:39:41,734:INFO:                 pip: 21.2.4
2024-04-29 18:39:41,734:INFO:          setuptools: 61.2.0
2024-04-29 18:39:41,734:INFO:             pycaret: 3.3.1
2024-04-29 18:39:41,734:INFO:             IPython: 8.2.0
2024-04-29 18:39:41,734:INFO:          ipywidgets: 7.6.5
2024-04-29 18:39:41,734:INFO:                tqdm: 4.64.0
2024-04-29 18:39:41,734:INFO:               numpy: 1.21.5
2024-04-29 18:39:41,734:INFO:              pandas: 1.4.2
2024-04-29 18:39:41,734:INFO:              jinja2: 2.11.3
2024-04-29 18:39:41,734:INFO:               scipy: 1.7.3
2024-04-29 18:39:41,734:INFO:              joblib: 1.3.2
2024-04-29 18:39:41,734:INFO:             sklearn: 1.4.0
2024-04-29 18:39:41,735:INFO:                pyod: 1.1.3
2024-04-29 18:39:41,735:INFO:            imblearn: 0.12.2
2024-04-29 18:39:41,735:INFO:   category_encoders: 2.6.3
2024-04-29 18:39:41,735:INFO:            lightgbm: 4.3.0
2024-04-29 18:39:41,735:INFO:               numba: 0.55.1
2024-04-29 18:39:41,735:INFO:            requests: 2.27.1
2024-04-29 18:39:41,735:INFO:          matplotlib: 3.5.1
2024-04-29 18:39:41,735:INFO:          scikitplot: 0.3.7
2024-04-29 18:39:41,735:INFO:         yellowbrick: 1.5
2024-04-29 18:39:41,735:INFO:              plotly: 5.6.0
2024-04-29 18:39:41,735:INFO:    plotly-resampler: Not installed
2024-04-29 18:39:41,735:INFO:             kaleido: 0.2.1
2024-04-29 18:39:41,735:INFO:           schemdraw: 0.15
2024-04-29 18:39:41,735:INFO:         statsmodels: 0.13.2
2024-04-29 18:39:41,735:INFO:              sktime: 0.26.0
2024-04-29 18:39:41,735:INFO:               tbats: 1.1.3
2024-04-29 18:39:41,735:INFO:            pmdarima: 2.0.4
2024-04-29 18:39:41,735:INFO:              psutil: 5.9.8
2024-04-29 18:39:41,735:INFO:          markupsafe: 2.0.1
2024-04-29 18:39:41,735:INFO:             pickle5: Not installed
2024-04-29 18:39:41,735:INFO:         cloudpickle: 2.0.0
2024-04-29 18:39:41,735:INFO:         deprecation: 2.1.0
2024-04-29 18:39:41,735:INFO:              xxhash: 3.4.1
2024-04-29 18:39:41,735:INFO:           wurlitzer: Not installed
2024-04-29 18:39:41,735:INFO:PyCaret optional dependencies:
2024-04-29 18:39:41,736:INFO:                shap: Not installed
2024-04-29 18:39:41,736:INFO:           interpret: Not installed
2024-04-29 18:39:41,736:INFO:                umap: Not installed
2024-04-29 18:39:41,736:INFO:     ydata_profiling: Not installed
2024-04-29 18:39:41,736:INFO:  explainerdashboard: Not installed
2024-04-29 18:39:41,736:INFO:             autoviz: Not installed
2024-04-29 18:39:41,736:INFO:           fairlearn: Not installed
2024-04-29 18:39:41,736:INFO:          deepchecks: Not installed
2024-04-29 18:39:41,736:INFO:             xgboost: Not installed
2024-04-29 18:39:41,736:INFO:            catboost: Not installed
2024-04-29 18:39:41,736:INFO:              kmodes: Not installed
2024-04-29 18:39:41,736:INFO:             mlxtend: 0.23.1
2024-04-29 18:39:41,736:INFO:       statsforecast: Not installed
2024-04-29 18:39:41,736:INFO:        tune_sklearn: Not installed
2024-04-29 18:39:41,736:INFO:                 ray: Not installed
2024-04-29 18:39:41,736:INFO:            hyperopt: Not installed
2024-04-29 18:39:41,736:INFO:              optuna: 3.6.1
2024-04-29 18:39:41,736:INFO:               skopt: Not installed
2024-04-29 18:39:41,736:INFO:              mlflow: Not installed
2024-04-29 18:39:41,736:INFO:              gradio: Not installed
2024-04-29 18:39:41,736:INFO:             fastapi: Not installed
2024-04-29 18:39:41,736:INFO:             uvicorn: Not installed
2024-04-29 18:39:41,736:INFO:              m2cgen: Not installed
2024-04-29 18:39:41,736:INFO:           evidently: Not installed
2024-04-29 18:39:41,736:INFO:               fugue: Not installed
2024-04-29 18:39:41,736:INFO:           streamlit: 1.31.1
2024-04-29 18:39:41,736:INFO:             prophet: Not installed
2024-04-29 18:39:41,736:INFO:None
2024-04-29 18:39:41,736:INFO:Set up data.
2024-04-29 18:39:41,742:INFO:Set up folding strategy.
2024-04-29 18:39:41,742:INFO:Set up train/test split.
2024-04-29 18:39:41,745:INFO:Set up index.
2024-04-29 18:39:41,745:INFO:Assigning column types.
2024-04-29 18:39:41,748:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-29 18:39:41,792:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-29 18:39:41,793:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 18:39:41,823:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:41,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:41,873:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-29 18:39:41,874:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 18:39:41,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:41,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:41,902:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-29 18:39:41,946:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 18:39:41,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:41,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,017:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-29 18:39:42,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,046:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-29 18:39:42,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,189:INFO:Preparing preprocessing pipeline...
2024-04-29 18:39:42,190:INFO:Set up simple imputation.
2024-04-29 18:39:42,191:INFO:Set up imbalanced handling.
2024-04-29 18:39:42,191:INFO:Set up column name cleaning.
2024-04-29 18:39:42,222:INFO:Finished creating preprocessing pipeline.
2024-04-29 18:39:42,227:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dansc\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['num_child', 'income', 'wealth',
                                             'home_value', 'pct_lt15k',
                                             'num_prom', 'lifetime_gifts',
                                             'largest_gift', 'last_gift',
                                             'time_lag', 'zipconvert2_Yes',
                                             'zipconvert3_Yes',
                                             'zipconvert4_Yes', 'homeowner_Yes',
                                             'female_Yes'...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=27,
                                                                              sampling_strategy='auto')))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-04-29 18:39:42,227:INFO:Creating final display dataframe.
2024-04-29 18:39:42,314:INFO:Setup _display_container:                     Description             Value
0                    Session id                27
1                        Target   target_No Donor
2                   Target type            Binary
3           Original data shape        (2400, 16)
4        Transformed data shape        (2418, 16)
5   Transformed train set shape        (1698, 16)
6    Transformed test set shape         (720, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                Fix imbalance              True
13         Fix imbalance method             SMOTE
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              ebcc
2024-04-29 18:39:42,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-29 18:39:42,466:INFO:setup() successfully completed in 0.74s...............
2024-04-29 18:39:42,468:INFO:Initializing compare_models()
2024-04-29 18:39:42,468:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-29 18:39:42,468:INFO:Checking exceptions
2024-04-29 18:39:42,470:INFO:Preparing display monitor
2024-04-29 18:39:42,497:INFO:Initializing Logistic Regression
2024-04-29 18:39:42,498:INFO:Total runtime is 1.6681353251139323e-05 minutes
2024-04-29 18:39:42,500:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:42,500:INFO:Initializing create_model()
2024-04-29 18:39:42,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:42,500:INFO:Checking exceptions
2024-04-29 18:39:42,500:INFO:Importing libraries
2024-04-29 18:39:42,500:INFO:Copying training dataset
2024-04-29 18:39:42,504:INFO:Defining folds
2024-04-29 18:39:42,504:INFO:Declaring metric variables
2024-04-29 18:39:42,506:INFO:Importing untrained model
2024-04-29 18:39:42,509:INFO:Logistic Regression Imported successfully
2024-04-29 18:39:42,515:INFO:Starting cross validation
2024-04-29 18:39:42,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:42,729:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,744:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,758:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,758:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,759:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,759:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,761:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,765:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,768:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,774:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:42,803:INFO:Calculating mean and std
2024-04-29 18:39:42,803:INFO:Creating metrics dataframe
2024-04-29 18:39:42,806:INFO:Uploading results into container
2024-04-29 18:39:42,806:INFO:Uploading model into container now
2024-04-29 18:39:42,807:INFO:_master_model_container: 1
2024-04-29 18:39:42,807:INFO:_display_container: 2
2024-04-29 18:39:42,807:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:39:42,807:INFO:create_model() successfully completed......................................
2024-04-29 18:39:42,895:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:42,896:INFO:Creating metrics dataframe
2024-04-29 18:39:42,902:INFO:Initializing K Neighbors Classifier
2024-04-29 18:39:42,902:INFO:Total runtime is 0.006756138801574707 minutes
2024-04-29 18:39:42,905:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:42,905:INFO:Initializing create_model()
2024-04-29 18:39:42,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:42,905:INFO:Checking exceptions
2024-04-29 18:39:42,905:INFO:Importing libraries
2024-04-29 18:39:42,905:INFO:Copying training dataset
2024-04-29 18:39:42,909:INFO:Defining folds
2024-04-29 18:39:42,909:INFO:Declaring metric variables
2024-04-29 18:39:42,911:INFO:Importing untrained model
2024-04-29 18:39:42,914:INFO:K Neighbors Classifier Imported successfully
2024-04-29 18:39:42,919:INFO:Starting cross validation
2024-04-29 18:39:42,920:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:43,057:INFO:Calculating mean and std
2024-04-29 18:39:43,057:INFO:Creating metrics dataframe
2024-04-29 18:39:43,060:INFO:Uploading results into container
2024-04-29 18:39:43,060:INFO:Uploading model into container now
2024-04-29 18:39:43,060:INFO:_master_model_container: 2
2024-04-29 18:39:43,060:INFO:_display_container: 2
2024-04-29 18:39:43,060:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-29 18:39:43,060:INFO:create_model() successfully completed......................................
2024-04-29 18:39:43,146:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:43,146:INFO:Creating metrics dataframe
2024-04-29 18:39:43,152:INFO:Initializing Naive Bayes
2024-04-29 18:39:43,153:INFO:Total runtime is 0.010926600297292074 minutes
2024-04-29 18:39:43,155:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:43,155:INFO:Initializing create_model()
2024-04-29 18:39:43,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:43,155:INFO:Checking exceptions
2024-04-29 18:39:43,155:INFO:Importing libraries
2024-04-29 18:39:43,155:INFO:Copying training dataset
2024-04-29 18:39:43,158:INFO:Defining folds
2024-04-29 18:39:43,159:INFO:Declaring metric variables
2024-04-29 18:39:43,161:INFO:Importing untrained model
2024-04-29 18:39:43,163:INFO:Naive Bayes Imported successfully
2024-04-29 18:39:43,168:INFO:Starting cross validation
2024-04-29 18:39:43,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:43,247:INFO:Calculating mean and std
2024-04-29 18:39:43,247:INFO:Creating metrics dataframe
2024-04-29 18:39:43,250:INFO:Uploading results into container
2024-04-29 18:39:43,250:INFO:Uploading model into container now
2024-04-29 18:39:43,250:INFO:_master_model_container: 3
2024-04-29 18:39:43,250:INFO:_display_container: 2
2024-04-29 18:39:43,250:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-29 18:39:43,250:INFO:create_model() successfully completed......................................
2024-04-29 18:39:43,331:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:43,331:INFO:Creating metrics dataframe
2024-04-29 18:39:43,338:INFO:Initializing Decision Tree Classifier
2024-04-29 18:39:43,338:INFO:Total runtime is 0.014018408457438153 minutes
2024-04-29 18:39:43,341:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:43,341:INFO:Initializing create_model()
2024-04-29 18:39:43,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:43,341:INFO:Checking exceptions
2024-04-29 18:39:43,341:INFO:Importing libraries
2024-04-29 18:39:43,341:INFO:Copying training dataset
2024-04-29 18:39:43,344:INFO:Defining folds
2024-04-29 18:39:43,344:INFO:Declaring metric variables
2024-04-29 18:39:43,347:INFO:Importing untrained model
2024-04-29 18:39:43,349:INFO:Decision Tree Classifier Imported successfully
2024-04-29 18:39:43,356:INFO:Starting cross validation
2024-04-29 18:39:43,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:43,449:INFO:Calculating mean and std
2024-04-29 18:39:43,449:INFO:Creating metrics dataframe
2024-04-29 18:39:43,452:INFO:Uploading results into container
2024-04-29 18:39:43,452:INFO:Uploading model into container now
2024-04-29 18:39:43,452:INFO:_master_model_container: 4
2024-04-29 18:39:43,452:INFO:_display_container: 2
2024-04-29 18:39:43,452:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=27, splitter='best')
2024-04-29 18:39:43,453:INFO:create_model() successfully completed......................................
2024-04-29 18:39:43,540:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:43,541:INFO:Creating metrics dataframe
2024-04-29 18:39:43,548:INFO:Initializing SVM - Linear Kernel
2024-04-29 18:39:43,548:INFO:Total runtime is 0.017510000864664716 minutes
2024-04-29 18:39:43,550:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:43,551:INFO:Initializing create_model()
2024-04-29 18:39:43,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:43,551:INFO:Checking exceptions
2024-04-29 18:39:43,551:INFO:Importing libraries
2024-04-29 18:39:43,551:INFO:Copying training dataset
2024-04-29 18:39:43,555:INFO:Defining folds
2024-04-29 18:39:43,555:INFO:Declaring metric variables
2024-04-29 18:39:43,558:INFO:Importing untrained model
2024-04-29 18:39:43,561:INFO:SVM - Linear Kernel Imported successfully
2024-04-29 18:39:43,565:INFO:Starting cross validation
2024-04-29 18:39:43,566:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:43,640:INFO:Calculating mean and std
2024-04-29 18:39:43,640:INFO:Creating metrics dataframe
2024-04-29 18:39:43,643:INFO:Uploading results into container
2024-04-29 18:39:43,643:INFO:Uploading model into container now
2024-04-29 18:39:43,643:INFO:_master_model_container: 5
2024-04-29 18:39:43,643:INFO:_display_container: 2
2024-04-29 18:39:43,644:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=27, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-29 18:39:43,644:INFO:create_model() successfully completed......................................
2024-04-29 18:39:43,728:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:43,728:INFO:Creating metrics dataframe
2024-04-29 18:39:43,736:INFO:Initializing Ridge Classifier
2024-04-29 18:39:43,736:INFO:Total runtime is 0.020646186669667565 minutes
2024-04-29 18:39:43,738:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:43,739:INFO:Initializing create_model()
2024-04-29 18:39:43,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:43,739:INFO:Checking exceptions
2024-04-29 18:39:43,739:INFO:Importing libraries
2024-04-29 18:39:43,739:INFO:Copying training dataset
2024-04-29 18:39:43,743:INFO:Defining folds
2024-04-29 18:39:43,743:INFO:Declaring metric variables
2024-04-29 18:39:43,745:INFO:Importing untrained model
2024-04-29 18:39:43,748:INFO:Ridge Classifier Imported successfully
2024-04-29 18:39:43,753:INFO:Starting cross validation
2024-04-29 18:39:43,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:43,828:INFO:Calculating mean and std
2024-04-29 18:39:43,828:INFO:Creating metrics dataframe
2024-04-29 18:39:43,831:INFO:Uploading results into container
2024-04-29 18:39:43,831:INFO:Uploading model into container now
2024-04-29 18:39:43,831:INFO:_master_model_container: 6
2024-04-29 18:39:43,831:INFO:_display_container: 2
2024-04-29 18:39:43,832:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=27, solver='auto',
                tol=0.0001)
2024-04-29 18:39:43,832:INFO:create_model() successfully completed......................................
2024-04-29 18:39:43,918:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:43,918:INFO:Creating metrics dataframe
2024-04-29 18:39:43,925:INFO:Initializing Random Forest Classifier
2024-04-29 18:39:43,925:INFO:Total runtime is 0.02379905780156454 minutes
2024-04-29 18:39:43,928:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:43,928:INFO:Initializing create_model()
2024-04-29 18:39:43,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:43,928:INFO:Checking exceptions
2024-04-29 18:39:43,928:INFO:Importing libraries
2024-04-29 18:39:43,929:INFO:Copying training dataset
2024-04-29 18:39:43,932:INFO:Defining folds
2024-04-29 18:39:43,933:INFO:Declaring metric variables
2024-04-29 18:39:43,935:INFO:Importing untrained model
2024-04-29 18:39:43,937:INFO:Random Forest Classifier Imported successfully
2024-04-29 18:39:43,943:INFO:Starting cross validation
2024-04-29 18:39:43,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:44,446:INFO:Calculating mean and std
2024-04-29 18:39:44,446:INFO:Creating metrics dataframe
2024-04-29 18:39:44,449:INFO:Uploading results into container
2024-04-29 18:39:44,450:INFO:Uploading model into container now
2024-04-29 18:39:44,450:INFO:_master_model_container: 7
2024-04-29 18:39:44,450:INFO:_display_container: 2
2024-04-29 18:39:44,451:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=27, verbose=0,
                       warm_start=False)
2024-04-29 18:39:44,451:INFO:create_model() successfully completed......................................
2024-04-29 18:39:44,533:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:44,533:INFO:Creating metrics dataframe
2024-04-29 18:39:44,540:INFO:Initializing Quadratic Discriminant Analysis
2024-04-29 18:39:44,541:INFO:Total runtime is 0.03406717777252198 minutes
2024-04-29 18:39:44,543:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:44,543:INFO:Initializing create_model()
2024-04-29 18:39:44,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:44,543:INFO:Checking exceptions
2024-04-29 18:39:44,544:INFO:Importing libraries
2024-04-29 18:39:44,544:INFO:Copying training dataset
2024-04-29 18:39:44,547:INFO:Defining folds
2024-04-29 18:39:44,547:INFO:Declaring metric variables
2024-04-29 18:39:44,549:INFO:Importing untrained model
2024-04-29 18:39:44,552:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-29 18:39:44,558:INFO:Starting cross validation
2024-04-29 18:39:44,559:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:44,634:INFO:Calculating mean and std
2024-04-29 18:39:44,634:INFO:Creating metrics dataframe
2024-04-29 18:39:44,637:INFO:Uploading results into container
2024-04-29 18:39:44,637:INFO:Uploading model into container now
2024-04-29 18:39:44,637:INFO:_master_model_container: 8
2024-04-29 18:39:44,637:INFO:_display_container: 2
2024-04-29 18:39:44,637:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-29 18:39:44,638:INFO:create_model() successfully completed......................................
2024-04-29 18:39:44,725:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:44,725:INFO:Creating metrics dataframe
2024-04-29 18:39:44,733:INFO:Initializing Ada Boost Classifier
2024-04-29 18:39:44,733:INFO:Total runtime is 0.03726693789164226 minutes
2024-04-29 18:39:44,736:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:44,736:INFO:Initializing create_model()
2024-04-29 18:39:44,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:44,736:INFO:Checking exceptions
2024-04-29 18:39:44,736:INFO:Importing libraries
2024-04-29 18:39:44,736:INFO:Copying training dataset
2024-04-29 18:39:44,740:INFO:Defining folds
2024-04-29 18:39:44,740:INFO:Declaring metric variables
2024-04-29 18:39:44,743:INFO:Importing untrained model
2024-04-29 18:39:44,746:INFO:Ada Boost Classifier Imported successfully
2024-04-29 18:39:44,752:INFO:Starting cross validation
2024-04-29 18:39:44,753:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:44,788:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,789:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,791:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,791:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,792:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,794:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,796:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,798:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,801:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,801:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-04-29 18:39:44,964:INFO:Calculating mean and std
2024-04-29 18:39:44,965:INFO:Creating metrics dataframe
2024-04-29 18:39:44,968:INFO:Uploading results into container
2024-04-29 18:39:44,968:INFO:Uploading model into container now
2024-04-29 18:39:44,969:INFO:_master_model_container: 9
2024-04-29 18:39:44,969:INFO:_display_container: 2
2024-04-29 18:39:44,969:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=27)
2024-04-29 18:39:44,969:INFO:create_model() successfully completed......................................
2024-04-29 18:39:45,057:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:45,057:INFO:Creating metrics dataframe
2024-04-29 18:39:45,066:INFO:Initializing Gradient Boosting Classifier
2024-04-29 18:39:45,066:INFO:Total runtime is 0.04282206296920777 minutes
2024-04-29 18:39:45,068:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:45,069:INFO:Initializing create_model()
2024-04-29 18:39:45,069:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:45,069:INFO:Checking exceptions
2024-04-29 18:39:45,069:INFO:Importing libraries
2024-04-29 18:39:45,069:INFO:Copying training dataset
2024-04-29 18:39:45,073:INFO:Defining folds
2024-04-29 18:39:45,073:INFO:Declaring metric variables
2024-04-29 18:39:45,075:INFO:Importing untrained model
2024-04-29 18:39:45,078:INFO:Gradient Boosting Classifier Imported successfully
2024-04-29 18:39:45,083:INFO:Starting cross validation
2024-04-29 18:39:45,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:45,584:INFO:Calculating mean and std
2024-04-29 18:39:45,593:INFO:Creating metrics dataframe
2024-04-29 18:39:45,597:INFO:Uploading results into container
2024-04-29 18:39:45,598:INFO:Uploading model into container now
2024-04-29 18:39:45,599:INFO:_master_model_container: 10
2024-04-29 18:39:45,599:INFO:_display_container: 2
2024-04-29 18:39:45,600:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=27, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-29 18:39:45,600:INFO:create_model() successfully completed......................................
2024-04-29 18:39:45,766:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:45,766:INFO:Creating metrics dataframe
2024-04-29 18:39:45,783:INFO:Initializing Linear Discriminant Analysis
2024-04-29 18:39:45,783:INFO:Total runtime is 0.05476624965667726 minutes
2024-04-29 18:39:45,787:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:45,787:INFO:Initializing create_model()
2024-04-29 18:39:45,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:45,788:INFO:Checking exceptions
2024-04-29 18:39:45,788:INFO:Importing libraries
2024-04-29 18:39:45,788:INFO:Copying training dataset
2024-04-29 18:39:45,794:INFO:Defining folds
2024-04-29 18:39:45,794:INFO:Declaring metric variables
2024-04-29 18:39:45,807:INFO:Importing untrained model
2024-04-29 18:39:45,811:INFO:Linear Discriminant Analysis Imported successfully
2024-04-29 18:39:45,820:INFO:Starting cross validation
2024-04-29 18:39:45,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:45,906:INFO:Calculating mean and std
2024-04-29 18:39:45,909:INFO:Creating metrics dataframe
2024-04-29 18:39:45,913:INFO:Uploading results into container
2024-04-29 18:39:45,914:INFO:Uploading model into container now
2024-04-29 18:39:45,914:INFO:_master_model_container: 11
2024-04-29 18:39:45,914:INFO:_display_container: 2
2024-04-29 18:39:45,915:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-29 18:39:45,915:INFO:create_model() successfully completed......................................
2024-04-29 18:39:46,125:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:46,125:INFO:Creating metrics dataframe
2024-04-29 18:39:46,136:INFO:Initializing Extra Trees Classifier
2024-04-29 18:39:46,137:INFO:Total runtime is 0.06067161560058595 minutes
2024-04-29 18:39:46,140:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:46,140:INFO:Initializing create_model()
2024-04-29 18:39:46,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:46,140:INFO:Checking exceptions
2024-04-29 18:39:46,140:INFO:Importing libraries
2024-04-29 18:39:46,140:INFO:Copying training dataset
2024-04-29 18:39:46,147:INFO:Defining folds
2024-04-29 18:39:46,147:INFO:Declaring metric variables
2024-04-29 18:39:46,150:INFO:Importing untrained model
2024-04-29 18:39:46,154:INFO:Extra Trees Classifier Imported successfully
2024-04-29 18:39:46,161:INFO:Starting cross validation
2024-04-29 18:39:46,163:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:46,661:INFO:Calculating mean and std
2024-04-29 18:39:46,662:INFO:Creating metrics dataframe
2024-04-29 18:39:46,665:INFO:Uploading results into container
2024-04-29 18:39:46,665:INFO:Uploading model into container now
2024-04-29 18:39:46,665:INFO:_master_model_container: 12
2024-04-29 18:39:46,666:INFO:_display_container: 2
2024-04-29 18:39:46,666:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=27, verbose=0,
                     warm_start=False)
2024-04-29 18:39:46,666:INFO:create_model() successfully completed......................................
2024-04-29 18:39:46,754:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:46,754:INFO:Creating metrics dataframe
2024-04-29 18:39:46,763:INFO:Initializing Light Gradient Boosting Machine
2024-04-29 18:39:46,763:INFO:Total runtime is 0.07109777927398683 minutes
2024-04-29 18:39:46,765:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:46,766:INFO:Initializing create_model()
2024-04-29 18:39:46,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:46,766:INFO:Checking exceptions
2024-04-29 18:39:46,766:INFO:Importing libraries
2024-04-29 18:39:46,766:INFO:Copying training dataset
2024-04-29 18:39:46,770:INFO:Defining folds
2024-04-29 18:39:46,771:INFO:Declaring metric variables
2024-04-29 18:39:46,773:INFO:Importing untrained model
2024-04-29 18:39:46,776:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-29 18:39:46,782:INFO:Starting cross validation
2024-04-29 18:39:46,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:47,477:INFO:Calculating mean and std
2024-04-29 18:39:47,479:INFO:Creating metrics dataframe
2024-04-29 18:39:47,482:INFO:Uploading results into container
2024-04-29 18:39:47,483:INFO:Uploading model into container now
2024-04-29 18:39:47,483:INFO:_master_model_container: 13
2024-04-29 18:39:47,483:INFO:_display_container: 2
2024-04-29 18:39:47,484:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=27, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-29 18:39:47,484:INFO:create_model() successfully completed......................................
2024-04-29 18:39:47,592:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:47,592:INFO:Creating metrics dataframe
2024-04-29 18:39:47,602:INFO:Initializing Dummy Classifier
2024-04-29 18:39:47,602:INFO:Total runtime is 0.08507715463638307 minutes
2024-04-29 18:39:47,605:INFO:SubProcess create_model() called ==================================
2024-04-29 18:39:47,605:INFO:Initializing create_model()
2024-04-29 18:39:47,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002123F50C820>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:47,605:INFO:Checking exceptions
2024-04-29 18:39:47,605:INFO:Importing libraries
2024-04-29 18:39:47,605:INFO:Copying training dataset
2024-04-29 18:39:47,609:INFO:Defining folds
2024-04-29 18:39:47,609:INFO:Declaring metric variables
2024-04-29 18:39:47,612:INFO:Importing untrained model
2024-04-29 18:39:47,614:INFO:Dummy Classifier Imported successfully
2024-04-29 18:39:47,619:INFO:Starting cross validation
2024-04-29 18:39:47,620:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:39:47,668:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,671:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,674:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,674:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,677:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,678:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,678:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,678:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,680:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,684:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-29 18:39:47,702:INFO:Calculating mean and std
2024-04-29 18:39:47,702:INFO:Creating metrics dataframe
2024-04-29 18:39:47,705:INFO:Uploading results into container
2024-04-29 18:39:47,705:INFO:Uploading model into container now
2024-04-29 18:39:47,705:INFO:_master_model_container: 14
2024-04-29 18:39:47,705:INFO:_display_container: 2
2024-04-29 18:39:47,705:INFO:DummyClassifier(constant=None, random_state=27, strategy='prior')
2024-04-29 18:39:47,705:INFO:create_model() successfully completed......................................
2024-04-29 18:39:47,791:INFO:SubProcess create_model() end ==================================
2024-04-29 18:39:47,791:INFO:Creating metrics dataframe
2024-04-29 18:39:47,808:INFO:Initializing create_model()
2024-04-29 18:39:47,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:39:47,808:INFO:Checking exceptions
2024-04-29 18:39:47,810:INFO:Importing libraries
2024-04-29 18:39:47,810:INFO:Copying training dataset
2024-04-29 18:39:47,813:INFO:Defining folds
2024-04-29 18:39:47,813:INFO:Declaring metric variables
2024-04-29 18:39:47,814:INFO:Importing untrained model
2024-04-29 18:39:47,814:INFO:Declaring custom model
2024-04-29 18:39:47,814:INFO:Logistic Regression Imported successfully
2024-04-29 18:39:47,815:INFO:Cross validation set to False
2024-04-29 18:39:47,815:INFO:Fitting Model
2024-04-29 18:39:47,972:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:39:47,972:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:39:47,972:INFO:create_model() successfully completed......................................
2024-04-29 18:39:48,084:INFO:_master_model_container: 14
2024-04-29 18:39:48,084:INFO:_display_container: 2
2024-04-29 18:39:48,084:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:39:48,084:INFO:compare_models() successfully completed......................................
2024-04-29 18:39:48,104:INFO:Initializing predict_model()
2024-04-29 18:39:48,105:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002124CA2B1F0>)
2024-04-29 18:39:48,105:INFO:Checking exceptions
2024-04-29 18:39:48,105:INFO:Preloading libraries
2024-04-29 18:39:48,106:INFO:Set up data.
2024-04-29 18:39:48,110:INFO:Set up index.
2024-04-29 18:40:04,038:INFO:Initializing predict_model()
2024-04-29 18:40:04,038:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002124CB2AEE0>)
2024-04-29 18:40:04,038:INFO:Checking exceptions
2024-04-29 18:40:04,038:INFO:Preloading libraries
2024-04-29 18:40:04,040:INFO:Set up data.
2024-04-29 18:40:04,043:INFO:Set up index.
2024-04-29 18:44:47,749:INFO:Initializing predict_model()
2024-04-29 18:44:47,749:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002124A49E0D0>)
2024-04-29 18:44:47,749:INFO:Checking exceptions
2024-04-29 18:44:47,749:INFO:Preloading libraries
2024-04-29 18:44:47,750:INFO:Set up data.
2024-04-29 18:44:47,754:INFO:Set up index.
2024-04-29 18:45:32,061:INFO:Initializing predict_model()
2024-04-29 18:45:32,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002124CB2A670>)
2024-04-29 18:45:32,061:INFO:Checking exceptions
2024-04-29 18:45:32,062:INFO:Preloading libraries
2024-04-29 18:45:32,063:INFO:Set up data.
2024-04-29 18:45:32,067:INFO:Set up index.
2024-04-29 18:45:55,670:INFO:Initializing predict_model()
2024-04-29 18:45:55,670:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002124FA48940>)
2024-04-29 18:45:55,670:INFO:Checking exceptions
2024-04-29 18:45:55,670:INFO:Preloading libraries
2024-04-29 18:45:55,672:INFO:Set up data.
2024-04-29 18:45:55,676:INFO:Set up index.
2024-04-29 18:46:15,318:INFO:Initializing predict_model()
2024-04-29 18:46:15,318:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002124E8D8CA0>)
2024-04-29 18:46:15,318:INFO:Checking exceptions
2024-04-29 18:46:15,318:INFO:Preloading libraries
2024-04-29 18:46:15,319:INFO:Set up data.
2024-04-29 18:46:15,323:INFO:Set up index.
2024-04-29 18:50:06,661:INFO:Initializing tune_model()
2024-04-29 18:50:06,661:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>)
2024-04-29 18:50:06,661:INFO:Checking exceptions
2024-04-29 18:50:06,683:INFO:Copying training dataset
2024-04-29 18:50:06,686:INFO:Checking base model
2024-04-29 18:50:06,687:INFO:Base model : Logistic Regression
2024-04-29 18:50:06,689:INFO:Declaring metric variables
2024-04-29 18:50:06,692:INFO:Defining Hyperparameters
2024-04-29 18:50:06,800:INFO:Tuning with n_jobs=-1
2024-04-29 18:50:06,800:INFO:Initializing RandomizedSearchCV
2024-04-29 18:50:15,989:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,047:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,100:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,132:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,165:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,267:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,374:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,423:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,427:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,433:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,464:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,471:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,511:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,516:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,516:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,519:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,607:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,641:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,696:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,748:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,787:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,793:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,794:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,799:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,864:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,872:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,885:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,898:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,913:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:16,974:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,029:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,040:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,063:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,073:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,078:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,078:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,113:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,141:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,148:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,166:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,172:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,246:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,282:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,304:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,327:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,346:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,348:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,373:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,415:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,420:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,423:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,432:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,450:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,506:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,562:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,586:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,602:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,613:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,623:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,634:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,669:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,677:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,688:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,751:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,756:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,762:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,815:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,850:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,869:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,876:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,908:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,919:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,930:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,938:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:17,945:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,010:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,044:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,055:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,067:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,135:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,150:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,160:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,171:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,177:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,193:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,209:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,230:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,270:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,313:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,327:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,351:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,397:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,415:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,433:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,438:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,442:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,444:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,455:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,479:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,495:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,504:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 1.957}
2024-04-29 18:50:18,505:INFO:Hyperparameter search completed
2024-04-29 18:50:18,505:INFO:SubProcess create_model() called ==================================
2024-04-29 18:50:18,505:INFO:Initializing create_model()
2024-04-29 18:50:18,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CB60580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 1.957})
2024-04-29 18:50:18,505:INFO:Checking exceptions
2024-04-29 18:50:18,505:INFO:Importing libraries
2024-04-29 18:50:18,505:INFO:Copying training dataset
2024-04-29 18:50:18,509:INFO:Defining folds
2024-04-29 18:50:18,509:INFO:Declaring metric variables
2024-04-29 18:50:18,512:INFO:Importing untrained model
2024-04-29 18:50:18,512:INFO:Declaring custom model
2024-04-29 18:50:18,516:INFO:Logistic Regression Imported successfully
2024-04-29 18:50:18,521:INFO:Starting cross validation
2024-04-29 18:50:18,522:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:50:18,768:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,769:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,771:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,778:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,778:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,779:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,781:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,782:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,782:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,784:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,806:INFO:Calculating mean and std
2024-04-29 18:50:18,807:INFO:Creating metrics dataframe
2024-04-29 18:50:18,811:INFO:Finalizing model
2024-04-29 18:50:18,978:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:18,982:INFO:Uploading results into container
2024-04-29 18:50:18,982:INFO:Uploading model into container now
2024-04-29 18:50:18,983:INFO:_master_model_container: 15
2024-04-29 18:50:18,983:INFO:_display_container: 3
2024-04-29 18:50:18,983:INFO:LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:50:18,983:INFO:create_model() successfully completed......................................
2024-04-29 18:50:19,092:INFO:SubProcess create_model() end ==================================
2024-04-29 18:50:19,092:INFO:choose_better activated
2024-04-29 18:50:19,095:INFO:SubProcess create_model() called ==================================
2024-04-29 18:50:19,095:INFO:Initializing create_model()
2024-04-29 18:50:19,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:50:19,095:INFO:Checking exceptions
2024-04-29 18:50:19,097:INFO:Importing libraries
2024-04-29 18:50:19,097:INFO:Copying training dataset
2024-04-29 18:50:19,100:INFO:Defining folds
2024-04-29 18:50:19,100:INFO:Declaring metric variables
2024-04-29 18:50:19,100:INFO:Importing untrained model
2024-04-29 18:50:19,100:INFO:Declaring custom model
2024-04-29 18:50:19,101:INFO:Logistic Regression Imported successfully
2024-04-29 18:50:19,101:INFO:Starting cross validation
2024-04-29 18:50:19,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:50:19,344:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,347:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,348:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,352:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,352:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,353:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,355:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,356:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,357:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,358:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,390:INFO:Calculating mean and std
2024-04-29 18:50:19,390:INFO:Creating metrics dataframe
2024-04-29 18:50:19,392:INFO:Finalizing model
2024-04-29 18:50:19,544:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:50:19,545:INFO:Uploading results into container
2024-04-29 18:50:19,546:INFO:Uploading model into container now
2024-04-29 18:50:19,546:INFO:_master_model_container: 16
2024-04-29 18:50:19,546:INFO:_display_container: 4
2024-04-29 18:50:19,546:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:50:19,546:INFO:create_model() successfully completed......................................
2024-04-29 18:50:19,654:INFO:SubProcess create_model() end ==================================
2024-04-29 18:50:19,654:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.5494
2024-04-29 18:50:19,655:INFO:LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.5536
2024-04-29 18:50:19,655:INFO:LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-29 18:50:19,655:INFO:choose_better completed
2024-04-29 18:50:19,662:INFO:_master_model_container: 16
2024-04-29 18:50:19,662:INFO:_display_container: 3
2024-04-29 18:50:19,663:INFO:LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:50:19,663:INFO:tune_model() successfully completed......................................
2024-04-29 18:50:52,221:INFO:Initializing predict_model()
2024-04-29 18:50:52,221:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002124F88FD30>)
2024-04-29 18:50:52,221:INFO:Checking exceptions
2024-04-29 18:50:52,222:INFO:Preloading libraries
2024-04-29 18:50:52,223:INFO:Set up data.
2024-04-29 18:50:52,227:INFO:Set up index.
2024-04-29 18:51:09,606:INFO:Initializing tune_model()
2024-04-29 18:51:09,607:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>)
2024-04-29 18:51:09,607:INFO:Checking exceptions
2024-04-29 18:51:09,626:INFO:Copying training dataset
2024-04-29 18:51:09,629:INFO:Checking base model
2024-04-29 18:51:09,630:INFO:Base model : Logistic Regression
2024-04-29 18:51:09,632:INFO:Declaring metric variables
2024-04-29 18:51:09,634:INFO:Defining Hyperparameters
2024-04-29 18:51:09,738:INFO:Tuning with n_jobs=-1
2024-04-29 18:51:09,738:INFO:Initializing RandomizedSearchCV
2024-04-29 18:51:10,006:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,006:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,010:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,014:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,015:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,034:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,040:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,041:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,047:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,049:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,067:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,271:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,278:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,279:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,281:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,282:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,294:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,305:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,306:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,307:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,313:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,323:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,344:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,536:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,536:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,539:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,539:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,543:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,544:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,559:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,563:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,563:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,570:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,579:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,608:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,793:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,805:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,813:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,826:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,828:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,829:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,837:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,841:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,847:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,847:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,859:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:10,878:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,074:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,084:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,094:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,104:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,107:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,108:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,110:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,119:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,127:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,140:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,156:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,160:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,363:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,373:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,388:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,403:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,403:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,407:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,410:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,414:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,417:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,451:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,455:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,473:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,676:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,677:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,677:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,682:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,684:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,686:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,710:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,711:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,725:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,734:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,752:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,757:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,947:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,948:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,954:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,957:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,961:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,974:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,976:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:11,990:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,000:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,001:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,013:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,043:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,187:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,196:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,212:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,253:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,265:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 2.57}
2024-04-29 18:51:12,267:INFO:Hyperparameter search completed
2024-04-29 18:51:12,267:INFO:SubProcess create_model() called ==================================
2024-04-29 18:51:12,267:INFO:Initializing create_model()
2024-04-29 18:51:12,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124CE1B760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': {}, 'C': 2.57})
2024-04-29 18:51:12,267:INFO:Checking exceptions
2024-04-29 18:51:12,267:INFO:Importing libraries
2024-04-29 18:51:12,268:INFO:Copying training dataset
2024-04-29 18:51:12,271:INFO:Defining folds
2024-04-29 18:51:12,272:INFO:Declaring metric variables
2024-04-29 18:51:12,275:INFO:Importing untrained model
2024-04-29 18:51:12,275:INFO:Declaring custom model
2024-04-29 18:51:12,279:INFO:Logistic Regression Imported successfully
2024-04-29 18:51:12,284:INFO:Starting cross validation
2024-04-29 18:51:12,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:51:12,563:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,568:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,570:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,574:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,610:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,612:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,628:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,721:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,723:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,752:INFO:Calculating mean and std
2024-04-29 18:51:12,754:INFO:Creating metrics dataframe
2024-04-29 18:51:12,759:INFO:Finalizing model
2024-04-29 18:51:12,980:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:12,986:INFO:Uploading results into container
2024-04-29 18:51:12,987:INFO:Uploading model into container now
2024-04-29 18:51:12,987:INFO:_master_model_container: 17
2024-04-29 18:51:12,987:INFO:_display_container: 4
2024-04-29 18:51:12,988:INFO:LogisticRegression(C=2.57, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:51:12,988:INFO:create_model() successfully completed......................................
2024-04-29 18:51:13,114:INFO:SubProcess create_model() end ==================================
2024-04-29 18:51:13,114:INFO:choose_better activated
2024-04-29 18:51:13,116:INFO:SubProcess create_model() called ==================================
2024-04-29 18:51:13,117:INFO:Initializing create_model()
2024-04-29 18:51:13,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:51:13,117:INFO:Checking exceptions
2024-04-29 18:51:13,119:INFO:Importing libraries
2024-04-29 18:51:13,119:INFO:Copying training dataset
2024-04-29 18:51:13,121:INFO:Defining folds
2024-04-29 18:51:13,121:INFO:Declaring metric variables
2024-04-29 18:51:13,122:INFO:Importing untrained model
2024-04-29 18:51:13,122:INFO:Declaring custom model
2024-04-29 18:51:13,122:INFO:Logistic Regression Imported successfully
2024-04-29 18:51:13,122:INFO:Starting cross validation
2024-04-29 18:51:13,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:51:13,352:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,354:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,358:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,360:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,362:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,364:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,365:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,365:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,365:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,370:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,390:INFO:Calculating mean and std
2024-04-29 18:51:13,390:INFO:Creating metrics dataframe
2024-04-29 18:51:13,392:INFO:Finalizing model
2024-04-29 18:51:13,540:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:13,541:INFO:Uploading results into container
2024-04-29 18:51:13,542:INFO:Uploading model into container now
2024-04-29 18:51:13,542:INFO:_master_model_container: 18
2024-04-29 18:51:13,542:INFO:_display_container: 5
2024-04-29 18:51:13,542:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:51:13,542:INFO:create_model() successfully completed......................................
2024-04-29 18:51:13,645:INFO:SubProcess create_model() end ==================================
2024-04-29 18:51:13,645:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.5596
2024-04-29 18:51:13,646:INFO:LogisticRegression(C=2.57, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for AUC is 0.5621
2024-04-29 18:51:13,646:INFO:LogisticRegression(C=2.57, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-29 18:51:13,646:INFO:choose_better completed
2024-04-29 18:51:13,653:INFO:_master_model_container: 18
2024-04-29 18:51:13,653:INFO:_display_container: 4
2024-04-29 18:51:13,653:INFO:LogisticRegression(C=2.57, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:51:13,653:INFO:tune_model() successfully completed......................................
2024-04-29 18:51:16,045:INFO:Initializing predict_model()
2024-04-29 18:51:16,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=2.57, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002124F88F790>)
2024-04-29 18:51:16,046:INFO:Checking exceptions
2024-04-29 18:51:16,046:INFO:Preloading libraries
2024-04-29 18:51:16,047:INFO:Set up data.
2024-04-29 18:51:16,051:INFO:Set up index.
2024-04-29 18:51:20,381:INFO:Initializing tune_model()
2024-04-29 18:51:20,381:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>)
2024-04-29 18:51:20,381:INFO:Checking exceptions
2024-04-29 18:51:20,403:INFO:Copying training dataset
2024-04-29 18:51:20,406:INFO:Checking base model
2024-04-29 18:51:20,406:INFO:Base model : Logistic Regression
2024-04-29 18:51:20,408:INFO:Declaring metric variables
2024-04-29 18:51:20,411:INFO:Defining Hyperparameters
2024-04-29 18:51:20,535:INFO:Tuning with n_jobs=-1
2024-04-29 18:51:20,535:INFO:Initializing RandomizedSearchCV
2024-04-29 18:51:20,803:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,811:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,816:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,812:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,832:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,846:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,848:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,858:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,861:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,870:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,873:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:20,874:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,059:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,065:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,073:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,093:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,097:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,100:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,124:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,125:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,136:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,140:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,147:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,159:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,331:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,334:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,340:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,344:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,377:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,382:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,399:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,406:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,409:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,416:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,426:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,437:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,595:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,597:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,601:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,603:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,649:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,657:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,669:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,672:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,672:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,686:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,697:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,742:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,857:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,866:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,867:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,900:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,926:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,933:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,939:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,948:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,959:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:21,963:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,004:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,122:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,134:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,134:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,135:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,158:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,178:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,189:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,212:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,214:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,224:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,265:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,278:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,386:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,387:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,392:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,439:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,444:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,446:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,465:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,472:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,477:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,516:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,542:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,571:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,634:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,645:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,690:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,697:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,710:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,725:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,729:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,730:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,743:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,792:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,793:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,813:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,850:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,851:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,879:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,887:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:22,904:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 1.957}
2024-04-29 18:51:22,905:INFO:Hyperparameter search completed
2024-04-29 18:51:22,906:INFO:SubProcess create_model() called ==================================
2024-04-29 18:51:22,906:INFO:Initializing create_model()
2024-04-29 18:51:22,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002124B706B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 1.957})
2024-04-29 18:51:22,906:INFO:Checking exceptions
2024-04-29 18:51:22,906:INFO:Importing libraries
2024-04-29 18:51:22,907:INFO:Copying training dataset
2024-04-29 18:51:22,910:INFO:Defining folds
2024-04-29 18:51:22,910:INFO:Declaring metric variables
2024-04-29 18:51:22,913:INFO:Importing untrained model
2024-04-29 18:51:22,913:INFO:Declaring custom model
2024-04-29 18:51:22,916:INFO:Logistic Regression Imported successfully
2024-04-29 18:51:22,920:INFO:Starting cross validation
2024-04-29 18:51:22,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:51:23,168:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,170:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,171:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,172:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,173:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,174:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,176:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,178:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,179:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,186:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,204:INFO:Calculating mean and std
2024-04-29 18:51:23,205:INFO:Creating metrics dataframe
2024-04-29 18:51:23,209:INFO:Finalizing model
2024-04-29 18:51:23,365:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,369:INFO:Uploading results into container
2024-04-29 18:51:23,370:INFO:Uploading model into container now
2024-04-29 18:51:23,370:INFO:_master_model_container: 19
2024-04-29 18:51:23,370:INFO:_display_container: 5
2024-04-29 18:51:23,371:INFO:LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:51:23,371:INFO:create_model() successfully completed......................................
2024-04-29 18:51:23,480:INFO:SubProcess create_model() end ==================================
2024-04-29 18:51:23,480:INFO:choose_better activated
2024-04-29 18:51:23,483:INFO:SubProcess create_model() called ==================================
2024-04-29 18:51:23,484:INFO:Initializing create_model()
2024-04-29 18:51:23,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-29 18:51:23,484:INFO:Checking exceptions
2024-04-29 18:51:23,485:INFO:Importing libraries
2024-04-29 18:51:23,486:INFO:Copying training dataset
2024-04-29 18:51:23,488:INFO:Defining folds
2024-04-29 18:51:23,488:INFO:Declaring metric variables
2024-04-29 18:51:23,488:INFO:Importing untrained model
2024-04-29 18:51:23,489:INFO:Declaring custom model
2024-04-29 18:51:23,489:INFO:Logistic Regression Imported successfully
2024-04-29 18:51:23,489:INFO:Starting cross validation
2024-04-29 18:51:23,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-29 18:51:23,713:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,726:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,726:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,728:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,730:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,730:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,730:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,731:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,736:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,738:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,757:INFO:Calculating mean and std
2024-04-29 18:51:23,757:INFO:Creating metrics dataframe
2024-04-29 18:51:23,759:INFO:Finalizing model
2024-04-29 18:51:23,906:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 18:51:23,908:INFO:Uploading results into container
2024-04-29 18:51:23,908:INFO:Uploading model into container now
2024-04-29 18:51:23,908:INFO:_master_model_container: 20
2024-04-29 18:51:23,908:INFO:_display_container: 6
2024-04-29 18:51:23,909:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:51:23,909:INFO:create_model() successfully completed......................................
2024-04-29 18:51:24,009:INFO:SubProcess create_model() end ==================================
2024-04-29 18:51:24,010:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.5494
2024-04-29 18:51:24,010:INFO:LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.5536
2024-04-29 18:51:24,011:INFO:LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2024-04-29 18:51:24,011:INFO:choose_better completed
2024-04-29 18:51:24,017:INFO:_master_model_container: 20
2024-04-29 18:51:24,018:INFO:_display_container: 5
2024-04-29 18:51:24,018:INFO:LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-29 18:51:24,018:INFO:tune_model() successfully completed......................................
2024-04-29 18:51:24,126:INFO:Initializing predict_model()
2024-04-29 18:51:24,126:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002124CE136A0>, estimator=LogisticRegression(C=1.957, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=27, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002124CA2B430>)
2024-04-29 18:51:24,126:INFO:Checking exceptions
2024-04-29 18:51:24,127:INFO:Preloading libraries
2024-04-29 18:51:24,128:INFO:Set up data.
2024-04-29 18:51:24,132:INFO:Set up index.
2024-04-29 19:00:52,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 19:00:52,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 19:00:52,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 19:00:52,272:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 19:17:52,448:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 19:19:33,986:WARNING:C:\Users\dansc\AppData\Roaming\Python\Python39\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-04-29 19:22:10,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 19:22:10,324:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 19:22:10,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-29 19:22:10,325:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
